{"ast":null,"code":"var _jsxFileName = \"/Users/gohshunda/TWT-Transport-Booking/src/components/admin/RouteMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { calculateOccupancyRate } from '../../data/mockData';\n\n// Fix for default markers in React-Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst RouteMap = ({\n  routes = [],\n  locations = [],\n  selectedTrips = [],\n  startLocation = null,\n  endLocation = null\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const [routeData, setRouteData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [mapReady, setMapReady] = useState(false);\n  const getLocationCoordinates = locationId => {\n    const location = locations.find(loc => loc.id === locationId);\n    return location ? location.coordinates : [3.1390, 101.6869]; // Default to KL\n  };\n\n  // Fetch actual road route using OpenRouteService or OSRM\n  const fetchRoadRoute = async (startCoords, endCoords, routeId) => {\n    try {\n      // Using OSRM (Open Source Routing Machine) - free and reliable\n      const url = `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`;\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.routes && data.routes.length > 0) {\n        const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n        const distance = (data.routes[0].distance / 1000).toFixed(1); // Convert to km\n        const duration = (data.routes[0].duration / 3600).toFixed(1); // Convert to hours\n\n        return {\n          coordinates,\n          distance: parseFloat(distance),\n          duration: parseFloat(duration)\n        };\n      }\n    } catch (error) {\n      console.warn(`Failed to fetch road route for ${routeId}, falling back to straight line:`, error);\n    }\n\n    // Fallback to straight line if routing fails\n    return {\n      coordinates: [startCoords, endCoords],\n      distance: null,\n      duration: null\n    };\n  };\n\n  // Fetch road route with intermediate stops\n  const fetchRouteWithStops = async route => {\n    try {\n      setLoading(true);\n      const originCoords = getLocationCoordinates(route.originId);\n      const destCoords = getLocationCoordinates(route.destinationId);\n\n      // If there are intermediate stops, create waypoints\n      if (route.intermediateStops && route.intermediateStops.length > 0) {\n        const waypoints = [originCoords];\n\n        // Add intermediate stops in order\n        route.intermediateStops.sort((a, b) => a.stopNumber - b.stopNumber).forEach(stop => {\n          waypoints.push(getLocationCoordinates(stop.locationId));\n        });\n        waypoints.push(destCoords);\n\n        // Create waypoint string for OSRM\n        const waypointString = waypoints.map(coord => `${coord[1]},${coord[0]}`).join(';');\n        const url = `https://router.project-osrm.org/route/v1/driving/${waypointString}?overview=full&geometries=geojson&steps=true`;\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.routes && data.routes.length > 0) {\n          const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n          const distance = (data.routes[0].distance / 1000).toFixed(1);\n          const duration = (data.routes[0].duration / 3600).toFixed(1);\n          return {\n            coordinates,\n            distance: parseFloat(distance),\n            duration: parseFloat(duration),\n            waypoints\n          };\n        }\n      } else {\n        // Simple route without stops\n        return await fetchRoadRoute(originCoords, destCoords, route.id);\n      }\n    } catch (error) {\n      console.warn(`Failed to fetch route with stops for ${route.id}:`, error);\n      return await fetchRoadRoute(getLocationCoordinates(route.originId), getLocationCoordinates(route.destinationId), route.id);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    // Clean up any existing map instance\n    if (mapInstanceRef.current) {\n      mapInstanceRef.current.remove();\n      mapInstanceRef.current = null;\n    }\n\n    // Add a small delay to ensure DOM is ready\n    const timeoutId = setTimeout(() => {\n      try {\n        // Initialize map with better settings\n        const map = L.map(mapRef.current, {\n          zoomControl: true,\n          scrollWheelZoom: true,\n          doubleClickZoom: true,\n          boxZoom: true,\n          keyboard: true,\n          dragging: true,\n          touchZoom: true\n        }).setView([4.2105, 101.9758], 7); // Center on Malaysia\n\n        mapInstanceRef.current = map;\n\n        // Add tile layer with better styling\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: 'Â© OpenStreetMap contributors | Routing by OSRM',\n          maxZoom: 18,\n          minZoom: 6\n        }).addTo(map);\n\n        // Wait for map to be fully loaded\n        map.whenReady(() => {\n          setMapReady(true);\n        });\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    }, 100);\n    return () => {\n      clearTimeout(timeoutId);\n      if (mapInstanceRef.current) {\n        try {\n          mapInstanceRef.current.remove();\n        } catch (error) {\n          console.warn('Error removing map:', error);\n        }\n        mapInstanceRef.current = null;\n      }\n      setMapReady(false);\n    };\n  }, []);\n  useEffect(() => {\n    if (!mapInstanceRef.current || !mapReady) return;\n    const map = mapInstanceRef.current;\n\n    // Clear existing layers safely\n    try {\n      map.eachLayer(layer => {\n        if (layer instanceof L.Marker || layer instanceof L.Polyline || layer instanceof L.CircleMarker) {\n          map.removeLayer(layer);\n        }\n      });\n    } catch (error) {\n      console.warn('Error clearing map layers:', error);\n    }\n\n    // Handle single route display (when startLocation and endLocation are provided)\n    if (startLocation && endLocation) {\n      const displaySingleRoute = async () => {\n        try {\n          setLoading(true);\n          const startCoords = getLocationCoordinates(startLocation);\n          const endCoords = getLocationCoordinates(endLocation);\n          const routeInfo = await fetchRoadRoute(startCoords, endCoords, 'single-route');\n\n          // Ensure map is still available before adding markers\n          if (!mapInstanceRef.current) return;\n\n          // Add markers with error handling\n          try {\n            var _locations$find, _locations$find2;\n            const startMarker = L.marker(startCoords, {\n              icon: L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: #3B82F6; \n                  width: 16px; \n                  height: 16px; \n                  border-radius: 50%;\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                \"></div>`,\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              })\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">Start Location</strong><br/>\n                <span class=\"text-gray-600\">${((_locations$find = locations.find(l => l.id === startLocation)) === null || _locations$find === void 0 ? void 0 : _locations$find.city) || 'Origin'}</span>\n              </div>\n            `);\n            const endMarker = L.marker(endCoords, {\n              icon: L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: #EF4444; \n                  width: 16px; \n                  height: 16px; \n                  border-radius: 20%;\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                  transform: rotate(45deg);\n                \"></div>`,\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              })\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">End Location</strong><br/>\n                <span class=\"text-gray-600\">${((_locations$find2 = locations.find(l => l.id === endLocation)) === null || _locations$find2 === void 0 ? void 0 : _locations$find2.city) || 'Destination'}</span>\n                ${routeInfo.distance ? `<br/><span class=\"text-gray-500\">Distance: ${routeInfo.distance} km</span>` : ''}\n                ${routeInfo.duration ? `<br/><span class=\"text-gray-500\">Duration: ${routeInfo.duration} hours</span>` : ''}\n              </div>\n            `);\n\n            // Add route line\n            const routeLine = L.polyline(routeInfo.coordinates, {\n              color: '#3B82F6',\n              weight: 4,\n              opacity: 0.8\n            });\n\n            // Add to map if it's still available\n            if (mapInstanceRef.current) {\n              startMarker.addTo(map);\n              endMarker.addTo(map);\n              routeLine.addTo(map);\n\n              // Fit map to route\n              const bounds = L.latLngBounds(routeInfo.coordinates);\n              map.fitBounds(bounds, {\n                padding: [30, 30]\n              });\n            }\n          } catch (markerError) {\n            console.error('Error adding markers:', markerError);\n          }\n        } catch (error) {\n          console.error('Error displaying single route:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      displaySingleRoute();\n      return;\n    }\n\n    // Handle multiple routes display\n    if (!routes.length) return;\n    const displayMultipleRoutes = async () => {\n      try {\n        setLoading(true);\n        const bounds = L.latLngBounds();\n        const routeColors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n        const newRouteData = {};\n\n        // Fetch all routes\n        for (let index = 0; index < routes.length; index++) {\n          const route = routes[index];\n          const color = routeColors[index % routeColors.length];\n\n          // Check if map is still available\n          if (!mapInstanceRef.current) break;\n          try {\n            var _route$intermediateSt;\n            const routeInfo = await fetchRouteWithStops(route);\n            newRouteData[route.id] = routeInfo;\n\n            // Get location details\n            const originLocation = locations.find(loc => loc.id === route.originId);\n            const destLocation = locations.find(loc => loc.id === route.destinationId);\n\n            // Create custom icons with route colors\n            const createCustomIcon = (isOrigin, size = 'medium') => {\n              const sizes = {\n                small: {\n                  width: 8,\n                  height: 8,\n                  iconSize: [12, 12]\n                },\n                medium: {\n                  width: 12,\n                  height: 12,\n                  iconSize: [16, 16]\n                },\n                large: {\n                  width: 16,\n                  height: 16,\n                  iconSize: [20, 20]\n                }\n              };\n              const iconSize = sizes[size];\n              const borderRadius = isOrigin ? '50%' : '20%';\n              return L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: ${color}; \n                  width: ${iconSize.width}px; \n                  height: ${iconSize.height}px; \n                  border-radius: ${borderRadius};\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                  ${!isOrigin ? 'transform: rotate(45deg);' : ''}\n                \"></div>`,\n                iconSize: iconSize.iconSize,\n                iconAnchor: [iconSize.iconSize[0] / 2, iconSize.iconSize[1] / 2]\n              });\n            };\n            const originCoords = getLocationCoordinates(route.originId);\n            const destCoords = getLocationCoordinates(route.destinationId);\n\n            // Only proceed if map is still available\n            if (!mapInstanceRef.current) break;\n\n            // Add origin marker\n            const originMarker = L.marker(originCoords, {\n              icon: createCustomIcon(true, 'large'),\n              zIndexOffset: 1000\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">${(originLocation === null || originLocation === void 0 ? void 0 : originLocation.city) || 'Origin'}</strong><br/>\n                <span class=\"text-gray-600\">${route.name}</span><br/>\n                <span class=\"text-gray-500\">${(originLocation === null || originLocation === void 0 ? void 0 : originLocation.address) || ''}</span>\n              </div>\n            `);\n\n            // Add destination marker\n            const destMarker = L.marker(destCoords, {\n              icon: createCustomIcon(false, 'large'),\n              zIndexOffset: 1000\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">${(destLocation === null || destLocation === void 0 ? void 0 : destLocation.city) || 'Destination'}</strong><br/>\n                <span class=\"text-gray-600\">${route.name}</span><br/>\n                <span class=\"text-gray-500\">Distance: ${routeInfo.distance || route.distanceKm} km</span><br/>\n                <span class=\"text-gray-500\">Duration: ${routeInfo.duration || route.durationHours} hours</span><br/>\n                <span class=\"text-gray-500\">Price: RM ${route.basePrice}</span><br/>\n                <span class=\"text-gray-500\">${(destLocation === null || destLocation === void 0 ? void 0 : destLocation.address) || ''}</span>\n              </div>\n            `);\n\n            // Add intermediate stop markers\n            (_route$intermediateSt = route.intermediateStops) === null || _route$intermediateSt === void 0 ? void 0 : _route$intermediateSt.forEach(stop => {\n              if (!mapInstanceRef.current) return;\n              try {\n                const stopLocation = locations.find(loc => loc.id === stop.locationId);\n                const stopCoords = getLocationCoordinates(stop.locationId);\n                const stopMarker = L.marker(stopCoords, {\n                  icon: createCustomIcon(true, 'small'),\n                  zIndexOffset: 500\n                }).bindPopup(`\n                  <div class=\"text-sm max-w-xs\">\n                    <strong>${(stopLocation === null || stopLocation === void 0 ? void 0 : stopLocation.city) || 'Stop'}</strong><br/>\n                    <span class=\"text-gray-600\">Stop ${stop.stopNumber}</span><br/>\n                    <span class=\"text-gray-500\">+RM ${stop.additionalPrice}</span><br/>\n                    <span class=\"text-gray-500\">${Math.floor(stop.arrivalOffset / 60)}h ${stop.arrivalOffset % 60}m from origin</span>\n                  </div>\n                `);\n                stopMarker.addTo(map);\n                bounds.extend(stopCoords);\n              } catch (stopError) {\n                console.warn('Error adding stop marker:', stopError);\n              }\n            });\n\n            // Add route line using real road coordinates\n            const routeLine = L.polyline(routeInfo.coordinates, {\n              color: color,\n              weight: 4,\n              opacity: 0.8,\n              dashArray: route.frequency === 'weekend' ? '10, 5' : null\n            });\n\n            // Add hover effects\n            routeLine.on('mouseover', function () {\n              this.setStyle({\n                weight: 6,\n                opacity: 1.0\n              });\n            });\n            routeLine.on('mouseout', function () {\n              this.setStyle({\n                weight: 4,\n                opacity: 0.8\n              });\n            });\n\n            // Add to map if it's still available\n            if (mapInstanceRef.current) {\n              originMarker.addTo(map);\n              destMarker.addTo(map);\n              routeLine.addTo(map);\n\n              // Add to bounds\n              routeInfo.coordinates.forEach(point => bounds.extend(point));\n            }\n          } catch (routeError) {\n            console.warn(`Error processing route ${route.id}:`, routeError);\n          }\n        }\n        setRouteData(newRouteData);\n\n        // Fit map to show all routes with padding\n        if (bounds.isValid() && mapInstanceRef.current) {\n          try {\n            map.fitBounds(bounds, {\n              padding: [30, 30],\n              maxZoom: 12\n            });\n          } catch (boundsError) {\n            console.warn('Error fitting bounds:', boundsError);\n          }\n        }\n      } catch (error) {\n        console.error('Error displaying multiple routes:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    displayMultipleRoutes();\n  }, [routes, locations, startLocation, endLocation, mapReady]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative h-full w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"h-full w-full rounded-lg\",\n      style: {\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-black bg-opacity-20 flex items-center justify-center rounded-lg\",\n      style: {\n        zIndex: 1001\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-4 shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-6 h-6 border-2 border-primary-600 border-t-transparent rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium\",\n            children: \"Loading road routes...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 9\n    }, this), routes.length > 0 && !startLocation && !endLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 max-w-xs\",\n      style: {\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-sm mb-3 text-gray-800\",\n          children: \"Active Routes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2 max-h-60 overflow-y-auto\",\n          children: routes.slice(0, 7).map((route, index) => {\n            const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n            const color = colors[index % colors.length];\n\n            // Calculate average occupation for this route\n            const routeTrips = selectedTrips.filter(trip => trip.routeId === route.id);\n            const avgOccupation = routeTrips.length > 0 ? routeTrips.reduce((sum, trip) => sum + calculateOccupancyRate(trip), 0) / routeTrips.length : 0;\n            const routeInfo = routeData[route.id];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between text-xs py-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2 flex-shrink-0\",\n                  style: {\n                    backgroundColor: color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 min-w-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate text-gray-700\",\n                    children: route.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 25\n                  }, this), routeInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [routeInfo.distance, \" km \\u2022 \", routeInfo.duration, \"h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this), avgOccupation > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-2 flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-8 bg-gray-200 rounded-full h-1.5 mr-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-1.5 rounded-full transition-all\",\n                    style: {\n                      width: `${Math.min(avgOccupation, 100)}%`,\n                      backgroundColor: avgOccupation > 80 ? '#EF4444' : avgOccupation > 60 ? '#F59E0B' : '#10B981'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-600 font-medium\",\n                  children: [avgOccupation.toFixed(0), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 23\n              }, this)]\n            }, route.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 pt-2 border-t border-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between text-xs text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u25CF Origin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u25C6 Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Real Roads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 left-4 bg-white rounded-lg shadow-lg border border-gray-200\",\n      style: {\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 bg-blue-500 rounded-full mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Regular Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-4 h-0.5 bg-gray-400 mr-2\",\n              style: {\n                borderTop: '2px dashed'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Weekend Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 pt-1 border-t border-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500\",\n              children: \"\\uD83D\\uDEE3\\uFE0F Real road routes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this), routes.length === 0 && !startLocation && !endLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-gray-50 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: \"\\uD83D\\uDDFA\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium\",\n          children: \"No routes to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs\",\n          children: \"Select routes to view on map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n};\n_s(RouteMap, \"eOLgFjHIulydGeMfKXaaE10uA00=\");\n_c = RouteMap;\nexport default RouteMap;\nvar _c;\n$RefreshReg$(_c, \"RouteMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","calculateOccupancyRate","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","RouteMap","routes","locations","selectedTrips","startLocation","endLocation","_s","mapRef","mapInstanceRef","routeData","setRouteData","loading","setLoading","mapReady","setMapReady","getLocationCoordinates","locationId","location","find","loc","id","coordinates","fetchRoadRoute","startCoords","endCoords","routeId","url","response","fetch","data","json","length","geometry","map","coord","distance","toFixed","duration","parseFloat","error","console","warn","fetchRouteWithStops","route","originCoords","originId","destCoords","destinationId","intermediateStops","waypoints","sort","a","b","stopNumber","forEach","stop","push","waypointString","join","current","remove","timeoutId","setTimeout","zoomControl","scrollWheelZoom","doubleClickZoom","boxZoom","keyboard","dragging","touchZoom","setView","tileLayer","attribution","maxZoom","minZoom","addTo","whenReady","clearTimeout","eachLayer","layer","Marker","Polyline","CircleMarker","removeLayer","displaySingleRoute","routeInfo","_locations$find","_locations$find2","startMarker","marker","icon","divIcon","className","html","iconSize","iconAnchor","bindPopup","l","city","endMarker","routeLine","polyline","color","weight","opacity","bounds","latLngBounds","fitBounds","padding","markerError","displayMultipleRoutes","routeColors","newRouteData","index","_route$intermediateSt","originLocation","destLocation","createCustomIcon","isOrigin","size","sizes","small","width","height","medium","large","borderRadius","originMarker","zIndexOffset","name","address","destMarker","distanceKm","durationHours","basePrice","stopLocation","stopCoords","stopMarker","additionalPrice","Math","floor","arrivalOffset","extend","stopError","dashArray","frequency","on","setStyle","point","routeError","isValid","boundsError","children","ref","style","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","slice","colors","routeTrips","filter","trip","avgOccupation","reduce","sum","backgroundColor","min","borderTop","_c","$RefreshReg$"],"sources":["/Users/gohshunda/TWT-Transport-Booking/src/components/admin/RouteMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { calculateOccupancyRate } from '../../data/mockData';\n\n// Fix for default markers in React-Leaflet\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\nconst RouteMap = ({ routes = [], locations = [], selectedTrips = [], startLocation = null, endLocation = null }) => {\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const [routeData, setRouteData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [mapReady, setMapReady] = useState(false);\n\n  const getLocationCoordinates = (locationId) => {\n    const location = locations.find(loc => loc.id === locationId);\n    return location ? location.coordinates : [3.1390, 101.6869]; // Default to KL\n  };\n\n  // Fetch actual road route using OpenRouteService or OSRM\n  const fetchRoadRoute = async (startCoords, endCoords, routeId) => {\n    try {\n      // Using OSRM (Open Source Routing Machine) - free and reliable\n      const url = `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`;\n      \n      const response = await fetch(url);\n      const data = await response.json();\n      \n      if (data.routes && data.routes.length > 0) {\n        const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n        const distance = (data.routes[0].distance / 1000).toFixed(1); // Convert to km\n        const duration = (data.routes[0].duration / 3600).toFixed(1); // Convert to hours\n        \n        return {\n          coordinates,\n          distance: parseFloat(distance),\n          duration: parseFloat(duration)\n        };\n      }\n    } catch (error) {\n      console.warn(`Failed to fetch road route for ${routeId}, falling back to straight line:`, error);\n    }\n    \n    // Fallback to straight line if routing fails\n    return {\n      coordinates: [startCoords, endCoords],\n      distance: null,\n      duration: null\n    };\n  };\n\n  // Fetch road route with intermediate stops\n  const fetchRouteWithStops = async (route) => {\n    try {\n      setLoading(true);\n      \n      const originCoords = getLocationCoordinates(route.originId);\n      const destCoords = getLocationCoordinates(route.destinationId);\n      \n      // If there are intermediate stops, create waypoints\n      if (route.intermediateStops && route.intermediateStops.length > 0) {\n        const waypoints = [originCoords];\n        \n        // Add intermediate stops in order\n        route.intermediateStops\n          .sort((a, b) => a.stopNumber - b.stopNumber)\n          .forEach(stop => {\n            waypoints.push(getLocationCoordinates(stop.locationId));\n          });\n        \n        waypoints.push(destCoords);\n        \n        // Create waypoint string for OSRM\n        const waypointString = waypoints\n          .map(coord => `${coord[1]},${coord[0]}`)\n          .join(';');\n        \n        const url = `https://router.project-osrm.org/route/v1/driving/${waypointString}?overview=full&geometries=geojson&steps=true`;\n        \n        const response = await fetch(url);\n        const data = await response.json();\n        \n        if (data.routes && data.routes.length > 0) {\n          const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n          const distance = (data.routes[0].distance / 1000).toFixed(1);\n          const duration = (data.routes[0].duration / 3600).toFixed(1);\n          \n          return {\n            coordinates,\n            distance: parseFloat(distance),\n            duration: parseFloat(duration),\n            waypoints\n          };\n        }\n      } else {\n        // Simple route without stops\n        return await fetchRoadRoute(originCoords, destCoords, route.id);\n      }\n    } catch (error) {\n      console.warn(`Failed to fetch route with stops for ${route.id}:`, error);\n      return await fetchRoadRoute(\n        getLocationCoordinates(route.originId),\n        getLocationCoordinates(route.destinationId),\n        route.id\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    // Clean up any existing map instance\n    if (mapInstanceRef.current) {\n      mapInstanceRef.current.remove();\n      mapInstanceRef.current = null;\n    }\n\n    // Add a small delay to ensure DOM is ready\n    const timeoutId = setTimeout(() => {\n      try {\n        // Initialize map with better settings\n        const map = L.map(mapRef.current, {\n          zoomControl: true,\n          scrollWheelZoom: true,\n          doubleClickZoom: true,\n          boxZoom: true,\n          keyboard: true,\n          dragging: true,\n          touchZoom: true,\n        }).setView([4.2105, 101.9758], 7); // Center on Malaysia\n        \n        mapInstanceRef.current = map;\n\n        // Add tile layer with better styling\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: 'Â© OpenStreetMap contributors | Routing by OSRM',\n          maxZoom: 18,\n          minZoom: 6,\n        }).addTo(map);\n\n        // Wait for map to be fully loaded\n        map.whenReady(() => {\n          setMapReady(true);\n        });\n\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    }, 100);\n\n    return () => {\n      clearTimeout(timeoutId);\n      if (mapInstanceRef.current) {\n        try {\n          mapInstanceRef.current.remove();\n        } catch (error) {\n          console.warn('Error removing map:', error);\n        }\n        mapInstanceRef.current = null;\n      }\n      setMapReady(false);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!mapInstanceRef.current || !mapReady) return;\n\n    const map = mapInstanceRef.current;\n\n    // Clear existing layers safely\n    try {\n      map.eachLayer((layer) => {\n        if (layer instanceof L.Marker || layer instanceof L.Polyline || layer instanceof L.CircleMarker) {\n          map.removeLayer(layer);\n        }\n      });\n    } catch (error) {\n      console.warn('Error clearing map layers:', error);\n    }\n\n    // Handle single route display (when startLocation and endLocation are provided)\n    if (startLocation && endLocation) {\n      const displaySingleRoute = async () => {\n        try {\n          setLoading(true);\n          \n          const startCoords = getLocationCoordinates(startLocation);\n          const endCoords = getLocationCoordinates(endLocation);\n          \n          const routeInfo = await fetchRoadRoute(startCoords, endCoords, 'single-route');\n          \n          // Ensure map is still available before adding markers\n          if (!mapInstanceRef.current) return;\n          \n          // Add markers with error handling\n          try {\n            const startMarker = L.marker(startCoords, {\n              icon: L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: #3B82F6; \n                  width: 16px; \n                  height: 16px; \n                  border-radius: 50%;\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                \"></div>`,\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              })\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">Start Location</strong><br/>\n                <span class=\"text-gray-600\">${locations.find(l => l.id === startLocation)?.city || 'Origin'}</span>\n              </div>\n            `);\n\n            const endMarker = L.marker(endCoords, {\n              icon: L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: #EF4444; \n                  width: 16px; \n                  height: 16px; \n                  border-radius: 20%;\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                  transform: rotate(45deg);\n                \"></div>`,\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              })\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">End Location</strong><br/>\n                <span class=\"text-gray-600\">${locations.find(l => l.id === endLocation)?.city || 'Destination'}</span>\n                ${routeInfo.distance ? `<br/><span class=\"text-gray-500\">Distance: ${routeInfo.distance} km</span>` : ''}\n                ${routeInfo.duration ? `<br/><span class=\"text-gray-500\">Duration: ${routeInfo.duration} hours</span>` : ''}\n              </div>\n            `);\n\n            // Add route line\n            const routeLine = L.polyline(routeInfo.coordinates, {\n              color: '#3B82F6',\n              weight: 4,\n              opacity: 0.8,\n            });\n\n            // Add to map if it's still available\n            if (mapInstanceRef.current) {\n              startMarker.addTo(map);\n              endMarker.addTo(map);\n              routeLine.addTo(map);\n\n              // Fit map to route\n              const bounds = L.latLngBounds(routeInfo.coordinates);\n              map.fitBounds(bounds, { padding: [30, 30] });\n            }\n          } catch (markerError) {\n            console.error('Error adding markers:', markerError);\n          }\n          \n        } catch (error) {\n          console.error('Error displaying single route:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      displaySingleRoute();\n      return;\n    }\n\n    // Handle multiple routes display\n    if (!routes.length) return;\n\n    const displayMultipleRoutes = async () => {\n      try {\n        setLoading(true);\n        const bounds = L.latLngBounds();\n        const routeColors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n        const newRouteData = {};\n\n        // Fetch all routes\n        for (let index = 0; index < routes.length; index++) {\n          const route = routes[index];\n          const color = routeColors[index % routeColors.length];\n          \n          // Check if map is still available\n          if (!mapInstanceRef.current) break;\n          \n          try {\n            const routeInfo = await fetchRouteWithStops(route);\n            newRouteData[route.id] = routeInfo;\n\n            // Get location details\n            const originLocation = locations.find(loc => loc.id === route.originId);\n            const destLocation = locations.find(loc => loc.id === route.destinationId);\n\n            // Create custom icons with route colors\n            const createCustomIcon = (isOrigin, size = 'medium') => {\n              const sizes = {\n                small: { width: 8, height: 8, iconSize: [12, 12] },\n                medium: { width: 12, height: 12, iconSize: [16, 16] },\n                large: { width: 16, height: 16, iconSize: [20, 20] }\n              };\n              \n              const iconSize = sizes[size];\n              const borderRadius = isOrigin ? '50%' : '20%';\n              \n              return L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: ${color}; \n                  width: ${iconSize.width}px; \n                  height: ${iconSize.height}px; \n                  border-radius: ${borderRadius};\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                  ${!isOrigin ? 'transform: rotate(45deg);' : ''}\n                \"></div>`,\n                iconSize: iconSize.iconSize,\n                iconAnchor: [iconSize.iconSize[0]/2, iconSize.iconSize[1]/2]\n              });\n            };\n\n            const originCoords = getLocationCoordinates(route.originId);\n            const destCoords = getLocationCoordinates(route.destinationId);\n\n            // Only proceed if map is still available\n            if (!mapInstanceRef.current) break;\n\n            // Add origin marker\n            const originMarker = L.marker(originCoords, { \n              icon: createCustomIcon(true, 'large'),\n              zIndexOffset: 1000\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">${originLocation?.city || 'Origin'}</strong><br/>\n                <span class=\"text-gray-600\">${route.name}</span><br/>\n                <span class=\"text-gray-500\">${originLocation?.address || ''}</span>\n              </div>\n            `);\n\n            // Add destination marker\n            const destMarker = L.marker(destCoords, { \n              icon: createCustomIcon(false, 'large'),\n              zIndexOffset: 1000\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">${destLocation?.city || 'Destination'}</strong><br/>\n                <span class=\"text-gray-600\">${route.name}</span><br/>\n                <span class=\"text-gray-500\">Distance: ${routeInfo.distance || route.distanceKm} km</span><br/>\n                <span class=\"text-gray-500\">Duration: ${routeInfo.duration || route.durationHours} hours</span><br/>\n                <span class=\"text-gray-500\">Price: RM ${route.basePrice}</span><br/>\n                <span class=\"text-gray-500\">${destLocation?.address || ''}</span>\n              </div>\n            `);\n\n            // Add intermediate stop markers\n            route.intermediateStops?.forEach((stop) => {\n              if (!mapInstanceRef.current) return;\n              \n              try {\n                const stopLocation = locations.find(loc => loc.id === stop.locationId);\n                const stopCoords = getLocationCoordinates(stop.locationId);\n                \n                const stopMarker = L.marker(stopCoords, { \n                  icon: createCustomIcon(true, 'small'),\n                  zIndexOffset: 500\n                }).bindPopup(`\n                  <div class=\"text-sm max-w-xs\">\n                    <strong>${stopLocation?.city || 'Stop'}</strong><br/>\n                    <span class=\"text-gray-600\">Stop ${stop.stopNumber}</span><br/>\n                    <span class=\"text-gray-500\">+RM ${stop.additionalPrice}</span><br/>\n                    <span class=\"text-gray-500\">${Math.floor(stop.arrivalOffset/60)}h ${stop.arrivalOffset%60}m from origin</span>\n                  </div>\n                `);\n\n                stopMarker.addTo(map);\n                bounds.extend(stopCoords);\n              } catch (stopError) {\n                console.warn('Error adding stop marker:', stopError);\n              }\n            });\n\n            // Add route line using real road coordinates\n            const routeLine = L.polyline(routeInfo.coordinates, {\n              color: color,\n              weight: 4,\n              opacity: 0.8,\n              dashArray: route.frequency === 'weekend' ? '10, 5' : null\n            });\n\n            // Add hover effects\n            routeLine.on('mouseover', function() {\n              this.setStyle({ weight: 6, opacity: 1.0 });\n            });\n            \n            routeLine.on('mouseout', function() {\n              this.setStyle({ weight: 4, opacity: 0.8 });\n            });\n\n            // Add to map if it's still available\n            if (mapInstanceRef.current) {\n              originMarker.addTo(map);\n              destMarker.addTo(map);\n              routeLine.addTo(map);\n\n              // Add to bounds\n              routeInfo.coordinates.forEach(point => bounds.extend(point));\n            }\n          } catch (routeError) {\n            console.warn(`Error processing route ${route.id}:`, routeError);\n          }\n        }\n\n        setRouteData(newRouteData);\n\n        // Fit map to show all routes with padding\n        if (bounds.isValid() && mapInstanceRef.current) {\n          try {\n            map.fitBounds(bounds, { \n              padding: [30, 30],\n              maxZoom: 12\n            });\n          } catch (boundsError) {\n            console.warn('Error fitting bounds:', boundsError);\n          }\n        }\n      } catch (error) {\n        console.error('Error displaying multiple routes:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    displayMultipleRoutes();\n\n  }, [routes, locations, startLocation, endLocation, mapReady]);\n\n  return (\n    <div className=\"relative h-full w-full\">\n      <div ref={mapRef} className=\"h-full w-full rounded-lg\" style={{ zIndex: 1 }} />\n      \n      {/* Loading indicator */}\n      {loading && (\n        <div className=\"absolute inset-0 bg-black bg-opacity-20 flex items-center justify-center rounded-lg\" style={{ zIndex: 1001 }}>\n          <div className=\"bg-white rounded-lg p-4 shadow-lg\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-6 h-6 border-2 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n              <span className=\"text-sm font-medium\">Loading road routes...</span>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Enhanced Legend with Trip Occupation */}\n      {routes.length > 0 && !startLocation && !endLocation && (\n        <div className=\"absolute top-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 max-w-xs\" style={{ zIndex: 1000 }}>\n          <div className=\"p-4\">\n            <h4 className=\"font-semibold text-sm mb-3 text-gray-800\">Active Routes</h4>\n            <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n              {routes.slice(0, 7).map((route, index) => {\n                const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n                const color = colors[index % colors.length];\n                \n                // Calculate average occupation for this route\n                const routeTrips = selectedTrips.filter(trip => trip.routeId === route.id);\n                const avgOccupation = routeTrips.length > 0 \n                  ? routeTrips.reduce((sum, trip) => sum + calculateOccupancyRate(trip), 0) / routeTrips.length\n                  : 0;\n                \n                const routeInfo = routeData[route.id];\n                \n                return (\n                  <div key={route.id} className=\"flex items-center justify-between text-xs py-1\">\n                    <div className=\"flex items-center flex-1 min-w-0\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2 flex-shrink-0\" \n                        style={{ backgroundColor: color }}\n                      ></div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"truncate text-gray-700\">{route.name}</div>\n                        {routeInfo && (\n                          <div className=\"text-xs text-gray-500\">\n                            {routeInfo.distance} km â¢ {routeInfo.duration}h\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    {avgOccupation > 0 && (\n                      <div className=\"ml-2 flex items-center\">\n                        <div className=\"w-8 bg-gray-200 rounded-full h-1.5 mr-1\">\n                          <div \n                            className=\"h-1.5 rounded-full transition-all\"\n                            style={{ \n                              width: `${Math.min(avgOccupation, 100)}%`,\n                              backgroundColor: avgOccupation > 80 ? '#EF4444' : avgOccupation > 60 ? '#F59E0B' : '#10B981'\n                            }}\n                          ></div>\n                        </div>\n                        <span className=\"text-xs text-gray-600 font-medium\">\n                          {avgOccupation.toFixed(0)}%\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n            \n            {/* Legend explanation */}\n            <div className=\"mt-3 pt-2 border-t border-gray-100\">\n              <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                <span>â Origin</span>\n                <span>â Destination</span>\n                <span>Real Roads</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Map Controls */}\n      <div className=\"absolute bottom-4 left-4 bg-white rounded-lg shadow-lg border border-gray-200\" style={{ zIndex: 1000 }}>\n        <div className=\"p-3\">\n          <div className=\"text-xs text-gray-600 space-y-1\">\n            <div className=\"flex items-center\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full mr-2\"></div>\n              <span>Regular Service</span>\n            </div>\n            <div className=\"flex items-center\">\n              <div className=\"w-4 h-0.5 bg-gray-400 mr-2\" style={{borderTop: '2px dashed'}}></div>\n              <span>Weekend Only</span>\n            </div>\n            <div className=\"mt-2 pt-1 border-t border-gray-200\">\n              <div className=\"text-xs text-gray-500\">ð£ï¸ Real road routes</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Empty state */}\n      {routes.length === 0 && !startLocation && !endLocation && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50 rounded-lg\">\n          <div className=\"text-center text-gray-500\">\n            <div className=\"mb-2\">ðºï¸</div>\n            <p className=\"text-sm font-medium\">No routes to display</p>\n            <p className=\"text-xs\">Select routes to view on map</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RouteMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}