{"ast":null,"code":"var _jsxFileName = \"/Users/gohshunda/TWT-Transport-Booking/src/context/AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\n// import { mockUsers, mockApi } from '../data/mockData';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  // User & Auth\n  currentUser: null,\n  isAuthenticated: false,\n  isLoading: false,\n  // Search & Booking\n  searchParams: {\n    origin: '',\n    destination: '',\n    date: ''\n  },\n  searchResults: [],\n  selectedTrip: null,\n  selectedSeat: null,\n  // Locations\n  locations: [],\n  locationsLoading: false,\n  // Booking Process\n  bookingInProgress: null,\n  bookingHistory: [],\n  // UI State\n  sidebarOpen: false,\n  notifications: [],\n  // Error handling\n  error: null\n};\n\n// Action types\nexport const ACTIONS = {\n  // Auth actions\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  // Search actions\n  SET_SEARCH_PARAMS: 'SET_SEARCH_PARAMS',\n  SEARCH_TRIPS_START: 'SEARCH_TRIPS_START',\n  SEARCH_TRIPS_SUCCESS: 'SEARCH_TRIPS_SUCCESS',\n  SEARCH_TRIPS_FAILURE: 'SEARCH_TRIPS_FAILURE',\n  // Location actions\n  LOAD_LOCATIONS_START: 'LOAD_LOCATIONS_START',\n  LOAD_LOCATIONS_SUCCESS: 'LOAD_LOCATIONS_SUCCESS',\n  LOAD_LOCATIONS_FAILURE: 'LOAD_LOCATIONS_FAILURE',\n  // Booking actions\n  SELECT_TRIP: 'SELECT_TRIP',\n  SELECT_SEAT: 'SELECT_SEAT',\n  CREATE_BOOKING_START: 'CREATE_BOOKING_START',\n  CREATE_BOOKING_SUCCESS: 'CREATE_BOOKING_SUCCESS',\n  CREATE_BOOKING_FAILURE: 'CREATE_BOOKING_FAILURE',\n  LOAD_BOOKING_HISTORY: 'LOAD_BOOKING_HISTORY',\n  // UI actions\n  TOGGLE_SIDEBAR: 'TOGGLE_SIDEBAR',\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  SET_ERROR: 'SET_ERROR'\n};\n\n// Reducer function\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case ACTIONS.LOGIN_FAILURE:\n      return {\n        ...state,\n        currentUser: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case ACTIONS.LOGOUT:\n      return {\n        ...state,\n        currentUser: null,\n        isAuthenticated: false,\n        bookingHistory: [],\n        bookingInProgress: null,\n        selectedTrip: null,\n        selectedSeat: null\n      };\n    case ACTIONS.SET_SEARCH_PARAMS:\n      return {\n        ...state,\n        searchParams: {\n          ...state.searchParams,\n          ...action.payload\n        }\n      };\n    case ACTIONS.SEARCH_TRIPS_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case ACTIONS.SEARCH_TRIPS_SUCCESS:\n      return {\n        ...state,\n        searchResults: action.payload,\n        isLoading: false,\n        error: null\n      };\n    case ACTIONS.SEARCH_TRIPS_FAILURE:\n      return {\n        ...state,\n        searchResults: [],\n        isLoading: false,\n        error: action.payload\n      };\n    case ACTIONS.SELECT_TRIP:\n      return {\n        ...state,\n        selectedTrip: action.payload,\n        selectedSeat: null // Reset seat selection when trip changes\n      };\n    case ACTIONS.SELECT_SEAT:\n      return {\n        ...state,\n        selectedSeat: action.payload\n      };\n    case ACTIONS.CREATE_BOOKING_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case ACTIONS.CREATE_BOOKING_SUCCESS:\n      return {\n        ...state,\n        bookingInProgress: action.payload,\n        isLoading: false,\n        error: null\n      };\n    case ACTIONS.CREATE_BOOKING_FAILURE:\n      return {\n        ...state,\n        bookingInProgress: null,\n        isLoading: false,\n        error: action.payload\n      };\n    case ACTIONS.LOAD_BOOKING_HISTORY:\n      return {\n        ...state,\n        bookingHistory: action.payload\n      };\n    case ACTIONS.TOGGLE_SIDEBAR:\n      return {\n        ...state,\n        sidebarOpen: !state.sidebarOpen\n      };\n    case ACTIONS.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, {\n          id: Date.now(),\n          ...action.payload\n        }]\n      };\n    case ACTIONS.REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload)\n      };\n    case ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AppContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Auto-login from localStorage on app start\n  useEffect(() => {\n    const savedUser = localStorage.getItem('currentUser');\n    if (savedUser) {\n      try {\n        const user = JSON.parse(savedUser);\n        dispatch({\n          type: ACTIONS.LOGIN_SUCCESS,\n          payload: user\n        });\n      } catch (error) {\n        localStorage.removeItem('currentUser');\n      }\n    }\n  }, []);\n\n  // Load user bookings when user logs in\n  useEffect(() => {\n    if (state.isAuthenticated && state.currentUser) {\n      loadBookingHistory();\n    }\n  }, [state.isAuthenticated, state.currentUser]);\n\n  // Action creators\n  const login = async (email, password) => {\n    dispatch({\n      type: ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await fetch('http://localhost:5001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json();\n        throw new Error(((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || 'Login failed');\n      }\n      const data = await response.json();\n      const user = data.data.user;\n      const token = data.data.tokens.accessToken;\n\n      // Save user and token to localStorage\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      localStorage.setItem('token', token);\n      dispatch({\n        type: ACTIONS.LOGIN_SUCCESS,\n        payload: user\n      });\n      addNotification({\n        type: 'success',\n        message: `Welcome back, ${user.firstName || user.email}!`\n      });\n      return user;\n    } catch (error) {\n      dispatch({\n        type: ACTIONS.LOGIN_FAILURE,\n        payload: error.message\n      });\n      addNotification({\n        type: 'error',\n        message: error.message\n      });\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    dispatch({\n      type: ACTIONS.LOGOUT\n    });\n    addNotification({\n      type: 'success',\n      message: 'You have been logged out successfully'\n    });\n  };\n  const searchTrips = async searchParams => {\n    dispatch({\n      type: ACTIONS.SEARCH_TRIPS_START\n    });\n    try {\n      const token = localStorage.getItem('token');\n      const query = new URLSearchParams(searchParams).toString();\n      const response = await fetch(`http://localhost:5001/api/trips?${query}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        var _errorData$error2;\n        const errorData = await response.json();\n        throw new Error(((_errorData$error2 = errorData.error) === null || _errorData$error2 === void 0 ? void 0 : _errorData$error2.message) || 'Failed to search trips');\n      }\n      const data = await response.json();\n      const results = data.data || [];\n      dispatch({\n        type: ACTIONS.SEARCH_TRIPS_SUCCESS,\n        payload: results\n      });\n      dispatch({\n        type: ACTIONS.SET_SEARCH_PARAMS,\n        payload: searchParams\n      });\n      return results;\n    } catch (error) {\n      dispatch({\n        type: ACTIONS.SEARCH_TRIPS_FAILURE,\n        payload: error.message\n      });\n      throw error;\n    }\n  };\n  const loadAllTrips = async () => {\n    dispatch({\n      type: ACTIONS.SEARCH_TRIPS_START\n    });\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5001/api/trips', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        var _errorData$error3;\n        const errorData = await response.json();\n        throw new Error(((_errorData$error3 = errorData.error) === null || _errorData$error3 === void 0 ? void 0 : _errorData$error3.message) || 'Failed to load trips');\n      }\n      const data = await response.json();\n      const results = data.data || [];\n      dispatch({\n        type: ACTIONS.SEARCH_TRIPS_SUCCESS,\n        payload: results\n      });\n      dispatch({\n        type: ACTIONS.SET_SEARCH_PARAMS,\n        payload: {\n          origin: '',\n          destination: '',\n          date: ''\n        }\n      });\n      return results;\n    } catch (error) {\n      dispatch({\n        type: ACTIONS.SEARCH_TRIPS_FAILURE,\n        payload: error.message\n      });\n      throw error;\n    }\n  };\n  const selectTrip = async trip => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5001/api/trips/${trip.id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        var _errorData$error4;\n        const errorData = await response.json();\n        throw new Error(((_errorData$error4 = errorData.error) === null || _errorData$error4 === void 0 ? void 0 : _errorData$error4.message) || 'Failed to load trip details');\n      }\n      const data = await response.json();\n      const tripDetails = data.data;\n      dispatch({\n        type: ACTIONS.SELECT_TRIP,\n        payload: tripDetails\n      });\n      return tripDetails;\n    } catch (error) {\n      addNotification({\n        type: 'error',\n        message: 'Failed to load trip details'\n      });\n      throw error;\n    }\n  };\n  const selectSeat = seat => {\n    dispatch({\n      type: ACTIONS.SELECT_SEAT,\n      payload: seat\n    });\n  };\n  const createBooking = async bookingData => {\n    dispatch({\n      type: ACTIONS.CREATE_BOOKING_START\n    });\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5001/api/bookings', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookingData)\n      });\n      if (!response.ok) {\n        var _errorData$error5;\n        const errorData = await response.json();\n        throw new Error(((_errorData$error5 = errorData.error) === null || _errorData$error5 === void 0 ? void 0 : _errorData$error5.message) || 'Failed to create booking');\n      }\n      const data = await response.json();\n      const booking = data.data;\n      dispatch({\n        type: ACTIONS.CREATE_BOOKING_SUCCESS,\n        payload: booking\n      });\n      addNotification({\n        type: 'success',\n        message: `Booking created successfully! Reference: ${booking.booking_reference || booking.id}`\n      });\n      return booking;\n    } catch (error) {\n      dispatch({\n        type: ACTIONS.CREATE_BOOKING_FAILURE,\n        payload: error.message\n      });\n      addNotification({\n        type: 'error',\n        message: 'Failed to create booking. Please try again.'\n      });\n      throw error;\n    }\n  };\n  const processPayment = async paymentData => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5001/api/payments', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(paymentData)\n      });\n      if (!response.ok) {\n        var _errorData$error6;\n        const errorData = await response.json();\n        throw new Error(((_errorData$error6 = errorData.error) === null || _errorData$error6 === void 0 ? void 0 : _errorData$error6.message) || 'Payment failed');\n      }\n      const data = await response.json();\n      const payment = data.data;\n      if (payment.status === 'completed') {\n        addNotification({\n          type: 'success',\n          message: 'Payment completed successfully!'\n        });\n        loadBookingHistory();\n      } else {\n        addNotification({\n          type: 'error',\n          message: payment.failureReason || 'Payment failed. Please try again.'\n        });\n      }\n      return payment;\n    } catch (error) {\n      addNotification({\n        type: 'error',\n        message: 'Payment processing failed. Please try again.'\n      });\n      throw error;\n    }\n  };\n  const loadBookingHistory = async () => {\n    if (!state.currentUser) return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5001/api/bookings/user/${state.currentUser.id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        var _errorData$error7;\n        const errorData = await response.json();\n        throw new Error(((_errorData$error7 = errorData.error) === null || _errorData$error7 === void 0 ? void 0 : _errorData$error7.message) || 'Failed to load booking history');\n      }\n      const data = await response.json();\n      const bookings = data.data || [];\n      dispatch({\n        type: ACTIONS.LOAD_BOOKING_HISTORY,\n        payload: bookings\n      });\n    } catch (error) {\n      console.error('Failed to load booking history:', error);\n    }\n  };\n  const addNotification = notification => {\n    const notificationWithId = {\n      id: Date.now(),\n      ...notification\n    };\n    dispatch({\n      type: ACTIONS.ADD_NOTIFICATION,\n      payload: notificationWithId\n    });\n\n    // Auto-remove notification after 5 seconds\n    setTimeout(() => {\n      dispatch({\n        type: ACTIONS.REMOVE_NOTIFICATION,\n        payload: notificationWithId.id\n      });\n    }, 5000);\n  };\n  const removeNotification = id => {\n    dispatch({\n      type: ACTIONS.REMOVE_NOTIFICATION,\n      payload: id\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: ACTIONS.CLEAR_ERROR\n    });\n  };\n  const toggleSidebar = () => {\n    dispatch({\n      type: ACTIONS.TOGGLE_SIDEBAR\n    });\n  };\n\n  // Context value\n  const contextValue = {\n    // State\n    ...state,\n    // Actions\n    login,\n    logout,\n    searchTrips,\n    loadAllTrips,\n    selectTrip,\n    selectSeat,\n    createBooking,\n    processPayment,\n    loadBookingHistory,\n    addNotification,\n    removeNotification,\n    clearError,\n    toggleSidebar\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 501,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use context\n_s(AppProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AppProvider;\nexport const useApp = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","currentUser","isAuthenticated","isLoading","searchParams","origin","destination","date","searchResults","selectedTrip","selectedSeat","locations","locationsLoading","bookingInProgress","bookingHistory","sidebarOpen","notifications","error","ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","SET_SEARCH_PARAMS","SEARCH_TRIPS_START","SEARCH_TRIPS_SUCCESS","SEARCH_TRIPS_FAILURE","LOAD_LOCATIONS_START","LOAD_LOCATIONS_SUCCESS","LOAD_LOCATIONS_FAILURE","SELECT_TRIP","SELECT_SEAT","CREATE_BOOKING_START","CREATE_BOOKING_SUCCESS","CREATE_BOOKING_FAILURE","LOAD_BOOKING_HISTORY","TOGGLE_SIDEBAR","ADD_NOTIFICATION","REMOVE_NOTIFICATION","CLEAR_ERROR","SET_ERROR","appReducer","state","action","type","payload","id","Date","now","filter","n","AppContext","AppProvider","children","_s","dispatch","savedUser","localStorage","getItem","user","JSON","parse","removeItem","loadBookingHistory","login","email","password","response","fetch","method","headers","body","stringify","ok","_errorData$error","errorData","json","Error","message","data","token","tokens","accessToken","setItem","addNotification","firstName","logout","searchTrips","query","URLSearchParams","toString","_errorData$error2","results","loadAllTrips","_errorData$error3","selectTrip","trip","_errorData$error4","tripDetails","selectSeat","seat","createBooking","bookingData","_errorData$error5","booking","booking_reference","processPayment","paymentData","_errorData$error6","payment","status","failureReason","_errorData$error7","bookings","console","notification","notificationWithId","setTimeout","removeNotification","clearError","toggleSidebar","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","$RefreshReg$"],"sources":["/Users/gohshunda/TWT-Transport-Booking/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n// import { mockUsers, mockApi } from '../data/mockData';\n\n// Initial state\nconst initialState = {\n  // User & Auth\n  currentUser: null,\n  isAuthenticated: false,\n  isLoading: false,\n  \n  // Search & Booking\n  searchParams: {\n    origin: '',\n    destination: '',\n    date: ''\n  },\n  searchResults: [],\n  selectedTrip: null,\n  selectedSeat: null,\n  \n  // Locations\n  locations: [],\n  locationsLoading: false,\n  \n  // Booking Process\n  bookingInProgress: null,\n  bookingHistory: [],\n  \n  // UI State\n  sidebarOpen: false,\n  notifications: [],\n  \n  // Error handling\n  error: null\n};\n\n// Action types\nexport const ACTIONS = {\n  // Auth actions\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  \n  // Search actions\n  SET_SEARCH_PARAMS: 'SET_SEARCH_PARAMS',\n  SEARCH_TRIPS_START: 'SEARCH_TRIPS_START',\n  SEARCH_TRIPS_SUCCESS: 'SEARCH_TRIPS_SUCCESS',\n  SEARCH_TRIPS_FAILURE: 'SEARCH_TRIPS_FAILURE',\n  \n  // Location actions\n  LOAD_LOCATIONS_START: 'LOAD_LOCATIONS_START',\n  LOAD_LOCATIONS_SUCCESS: 'LOAD_LOCATIONS_SUCCESS',\n  LOAD_LOCATIONS_FAILURE: 'LOAD_LOCATIONS_FAILURE',\n  \n  // Booking actions\n  SELECT_TRIP: 'SELECT_TRIP',\n  SELECT_SEAT: 'SELECT_SEAT',\n  CREATE_BOOKING_START: 'CREATE_BOOKING_START',\n  CREATE_BOOKING_SUCCESS: 'CREATE_BOOKING_SUCCESS',\n  CREATE_BOOKING_FAILURE: 'CREATE_BOOKING_FAILURE',\n  LOAD_BOOKING_HISTORY: 'LOAD_BOOKING_HISTORY',\n  \n  // UI actions\n  TOGGLE_SIDEBAR: 'TOGGLE_SIDEBAR',\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  SET_ERROR: 'SET_ERROR'\n};\n\n// Reducer function\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n      \n    case ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n      \n    case ACTIONS.LOGIN_FAILURE:\n      return {\n        ...state,\n        currentUser: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n      \n    case ACTIONS.LOGOUT:\n      return {\n        ...state,\n        currentUser: null,\n        isAuthenticated: false,\n        bookingHistory: [],\n        bookingInProgress: null,\n        selectedTrip: null,\n        selectedSeat: null\n      };\n      \n    case ACTIONS.SET_SEARCH_PARAMS:\n      return {\n        ...state,\n        searchParams: { ...state.searchParams, ...action.payload }\n      };\n      \n    case ACTIONS.SEARCH_TRIPS_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n      \n    case ACTIONS.SEARCH_TRIPS_SUCCESS:\n      return {\n        ...state,\n        searchResults: action.payload,\n        isLoading: false,\n        error: null\n      };\n      \n    case ACTIONS.SEARCH_TRIPS_FAILURE:\n      return {\n        ...state,\n        searchResults: [],\n        isLoading: false,\n        error: action.payload\n      };\n      \n    case ACTIONS.SELECT_TRIP:\n      return {\n        ...state,\n        selectedTrip: action.payload,\n        selectedSeat: null // Reset seat selection when trip changes\n      };\n      \n    case ACTIONS.SELECT_SEAT:\n      return {\n        ...state,\n        selectedSeat: action.payload\n      };\n      \n    case ACTIONS.CREATE_BOOKING_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n      \n    case ACTIONS.CREATE_BOOKING_SUCCESS:\n      return {\n        ...state,\n        bookingInProgress: action.payload,\n        isLoading: false,\n        error: null\n      };\n      \n    case ACTIONS.CREATE_BOOKING_FAILURE:\n      return {\n        ...state,\n        bookingInProgress: null,\n        isLoading: false,\n        error: action.payload\n      };\n      \n    case ACTIONS.LOAD_BOOKING_HISTORY:\n      return {\n        ...state,\n        bookingHistory: action.payload\n      };\n      \n    case ACTIONS.TOGGLE_SIDEBAR:\n      return {\n        ...state,\n        sidebarOpen: !state.sidebarOpen\n      };\n      \n    case ACTIONS.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, { id: Date.now(), ...action.payload }]\n      };\n      \n    case ACTIONS.REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload)\n      };\n      \n    case ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n      \n    case ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n      \n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AppContext = createContext();\n\n// Provider component\nexport const AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  \n  // Auto-login from localStorage on app start\n  useEffect(() => {\n    const savedUser = localStorage.getItem('currentUser');\n    if (savedUser) {\n      try {\n        const user = JSON.parse(savedUser);\n        dispatch({ type: ACTIONS.LOGIN_SUCCESS, payload: user });\n      } catch (error) {\n        localStorage.removeItem('currentUser');\n      }\n    }\n  }, []);\n  \n  // Load user bookings when user logs in\n  useEffect(() => {\n    if (state.isAuthenticated && state.currentUser) {\n      loadBookingHistory();\n    }\n  }, [state.isAuthenticated, state.currentUser]);\n  \n  // Action creators\n  const login = async (email, password) => {\n    dispatch({ type: ACTIONS.LOGIN_START });\n    try {\n      const response = await fetch('http://localhost:5001/api/auth/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || 'Login failed');\n      }\n      \n      const data = await response.json();\n      const user = data.data.user;\n      const token = data.data.tokens.accessToken;\n      \n      // Save user and token to localStorage\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      localStorage.setItem('token', token);\n      \n      dispatch({ type: ACTIONS.LOGIN_SUCCESS, payload: user });\n      addNotification({ type: 'success', message: `Welcome back, ${user.firstName || user.email}!` });\n      return user;\n    } catch (error) {\n      dispatch({ type: ACTIONS.LOGIN_FAILURE, payload: error.message });\n      addNotification({ type: 'error', message: error.message });\n      throw error;\n    }\n  };\n  \n  const logout = () => {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    dispatch({ type: ACTIONS.LOGOUT });\n    addNotification({\n      type: 'success',\n      message: 'You have been logged out successfully'\n    });\n  };\n  \n  const searchTrips = async (searchParams) => {\n    dispatch({ type: ACTIONS.SEARCH_TRIPS_START });\n    try {\n      const token = localStorage.getItem('token');\n      const query = new URLSearchParams(searchParams).toString();\n      const response = await fetch(`http://localhost:5001/api/trips?${query}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || 'Failed to search trips');\n      }\n      \n      const data = await response.json();\n      const results = data.data || [];\n      dispatch({ type: ACTIONS.SEARCH_TRIPS_SUCCESS, payload: results });\n      dispatch({ type: ACTIONS.SET_SEARCH_PARAMS, payload: searchParams });\n      return results;\n    } catch (error) {\n      dispatch({ type: ACTIONS.SEARCH_TRIPS_FAILURE, payload: error.message });\n      throw error;\n    }\n  };\n  \n  const loadAllTrips = async () => {\n    dispatch({ type: ACTIONS.SEARCH_TRIPS_START });\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5001/api/trips', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || 'Failed to load trips');\n      }\n      \n      const data = await response.json();\n      const results = data.data || [];\n      dispatch({ type: ACTIONS.SEARCH_TRIPS_SUCCESS, payload: results });\n      dispatch({ type: ACTIONS.SET_SEARCH_PARAMS, payload: { origin: '', destination: '', date: '' } });\n      return results;\n    } catch (error) {\n      dispatch({ type: ACTIONS.SEARCH_TRIPS_FAILURE, payload: error.message });\n      throw error;\n    }\n  };\n  \n  const selectTrip = async (trip) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5001/api/trips/${trip.id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || 'Failed to load trip details');\n      }\n      \n      const data = await response.json();\n      const tripDetails = data.data;\n      dispatch({ type: ACTIONS.SELECT_TRIP, payload: tripDetails });\n      return tripDetails;\n    } catch (error) {\n      addNotification({ type: 'error', message: 'Failed to load trip details' });\n      throw error;\n    }\n  };\n  \n  const selectSeat = (seat) => {\n    dispatch({ type: ACTIONS.SELECT_SEAT, payload: seat });\n  };\n  \n  const createBooking = async (bookingData) => {\n    dispatch({ type: ACTIONS.CREATE_BOOKING_START });\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5001/api/bookings', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookingData)\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || 'Failed to create booking');\n      }\n      \n      const data = await response.json();\n      const booking = data.data;\n      dispatch({ type: ACTIONS.CREATE_BOOKING_SUCCESS, payload: booking });\n      addNotification({ type: 'success', message: `Booking created successfully! Reference: ${booking.booking_reference || booking.id}` });\n      return booking;\n    } catch (error) {\n      dispatch({ type: ACTIONS.CREATE_BOOKING_FAILURE, payload: error.message });\n      addNotification({ type: 'error', message: 'Failed to create booking. Please try again.' });\n      throw error;\n    }\n  };\n  \n  const processPayment = async (paymentData) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5001/api/payments', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(paymentData)\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || 'Payment failed');\n      }\n      \n      const data = await response.json();\n      const payment = data.data;\n      if (payment.status === 'completed') {\n        addNotification({ type: 'success', message: 'Payment completed successfully!' });\n        loadBookingHistory();\n      } else {\n        addNotification({ type: 'error', message: payment.failureReason || 'Payment failed. Please try again.' });\n      }\n      return payment;\n    } catch (error) {\n      addNotification({ type: 'error', message: 'Payment processing failed. Please try again.' });\n      throw error;\n    }\n  };\n  \n  const loadBookingHistory = async () => {\n    if (!state.currentUser) return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5001/api/bookings/user/${state.currentUser.id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error?.message || 'Failed to load booking history');\n      }\n      \n      const data = await response.json();\n      const bookings = data.data || [];\n      dispatch({ type: ACTIONS.LOAD_BOOKING_HISTORY, payload: bookings });\n    } catch (error) {\n      console.error('Failed to load booking history:', error);\n    }\n  };\n  \n  const addNotification = (notification) => {\n    const notificationWithId = { id: Date.now(), ...notification };\n    dispatch({ type: ACTIONS.ADD_NOTIFICATION, payload: notificationWithId });\n    \n    // Auto-remove notification after 5 seconds\n    setTimeout(() => {\n      dispatch({ type: ACTIONS.REMOVE_NOTIFICATION, payload: notificationWithId.id });\n    }, 5000);\n  };\n  \n  const removeNotification = (id) => {\n    dispatch({ type: ACTIONS.REMOVE_NOTIFICATION, payload: id });\n  };\n  \n  const clearError = () => {\n    dispatch({ type: ACTIONS.CLEAR_ERROR });\n  };\n  \n  const toggleSidebar = () => {\n    dispatch({ type: ACTIONS.TOGGLE_SIDEBAR });\n  };\n  \n  // Context value\n  const contextValue = {\n    // State\n    ...state,\n    \n    // Actions\n    login,\n    logout,\n    searchTrips,\n    loadAllTrips,\n    selectTrip,\n    selectSeat,\n    createBooking,\n    processPayment,\n    loadBookingHistory,\n    addNotification,\n    removeNotification,\n    clearError,\n    toggleSidebar\n  };\n  \n  return (\n    <AppContext.Provider value={contextValue}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Custom hook to use context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n\nexport default AppContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}