{"ast":null,"code":"var _jsxFileName = \"/Users/gohshunda/TWT-Transport-Booking/src/components/admin/RouteMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { calculateOccupancyRate } from '../../data/mockData';\n\n// Fix for default markers in React-Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst RouteMap = ({\n  routes = [],\n  locations = [],\n  selectedTrips = [],\n  startLocation = null,\n  endLocation = null\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const [routeData, setRouteData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const getLocationCoordinates = locationId => {\n    const location = locations.find(loc => loc.id === locationId);\n    return location ? location.coordinates : [3.1390, 101.6869]; // Default to KL\n  };\n\n  // Fetch actual road route using OpenRouteService or OSRM\n  const fetchRoadRoute = async (startCoords, endCoords, routeId) => {\n    try {\n      // Using OSRM (Open Source Routing Machine) - free and reliable\n      const url = `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`;\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.routes && data.routes.length > 0) {\n        const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n        const distance = (data.routes[0].distance / 1000).toFixed(1); // Convert to km\n        const duration = (data.routes[0].duration / 3600).toFixed(1); // Convert to hours\n\n        return {\n          coordinates,\n          distance: parseFloat(distance),\n          duration: parseFloat(duration)\n        };\n      }\n    } catch (error) {\n      console.warn(`Failed to fetch road route for ${routeId}, falling back to straight line:`, error);\n    }\n\n    // Fallback to straight line if routing fails\n    return {\n      coordinates: [startCoords, endCoords],\n      distance: null,\n      duration: null\n    };\n  };\n\n  // Fetch road route with intermediate stops\n  const fetchRouteWithStops = async route => {\n    try {\n      setLoading(true);\n      const originCoords = getLocationCoordinates(route.originId);\n      const destCoords = getLocationCoordinates(route.destinationId);\n\n      // If there are intermediate stops, create waypoints\n      if (route.intermediateStops && route.intermediateStops.length > 0) {\n        const waypoints = [originCoords];\n\n        // Add intermediate stops in order\n        route.intermediateStops.sort((a, b) => a.stopNumber - b.stopNumber).forEach(stop => {\n          waypoints.push(getLocationCoordinates(stop.locationId));\n        });\n        waypoints.push(destCoords);\n\n        // Create waypoint string for OSRM\n        const waypointString = waypoints.map(coord => `${coord[1]},${coord[0]}`).join(';');\n        const url = `https://router.project-osrm.org/route/v1/driving/${waypointString}?overview=full&geometries=geojson&steps=true`;\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.routes && data.routes.length > 0) {\n          const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n          const distance = (data.routes[0].distance / 1000).toFixed(1);\n          const duration = (data.routes[0].duration / 3600).toFixed(1);\n          return {\n            coordinates,\n            distance: parseFloat(distance),\n            duration: parseFloat(duration),\n            waypoints\n          };\n        }\n      } else {\n        // Simple route without stops\n        return await fetchRoadRoute(originCoords, destCoords, route.id);\n      }\n    } catch (error) {\n      console.warn(`Failed to fetch route with stops for ${route.id}:`, error);\n      return await fetchRoadRoute(getLocationCoordinates(route.originId), getLocationCoordinates(route.destinationId), route.id);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    // Initialize map with better settings\n    const map = L.map(mapRef.current, {\n      zoomControl: true,\n      scrollWheelZoom: true,\n      doubleClickZoom: true,\n      boxZoom: true,\n      keyboard: true,\n      dragging: true,\n      touchZoom: true\n    }).setView([4.2105, 101.9758], 7); // Center on Malaysia\n\n    mapInstanceRef.current = map;\n\n    // Add tile layer with better styling\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Â© OpenStreetMap contributors | Routing by OSRM',\n      maxZoom: 18,\n      minZoom: 6\n    }).addTo(map);\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!mapInstanceRef.current) return;\n    const map = mapInstanceRef.current;\n\n    // Clear existing layers\n    map.eachLayer(layer => {\n      if (layer instanceof L.Marker || layer instanceof L.Polyline || layer instanceof L.CircleMarker) {\n        map.removeLayer(layer);\n      }\n    });\n\n    // Handle single route display (when startLocation and endLocation are provided)\n    if (startLocation && endLocation) {\n      const displaySingleRoute = async () => {\n        var _locations$find, _locations$find2;\n        setLoading(true);\n        const startCoords = getLocationCoordinates(startLocation);\n        const endCoords = getLocationCoordinates(endLocation);\n        const routeInfo = await fetchRoadRoute(startCoords, endCoords, 'single-route');\n\n        // Add markers\n        const startMarker = L.marker(startCoords, {\n          icon: L.divIcon({\n            className: 'custom-route-marker',\n            html: `<div style=\"\n              background-color: #3B82F6; \n              width: 16px; \n              height: 16px; \n              border-radius: 50%;\n              border: 2px solid white; \n              box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n            \"></div>`,\n            iconSize: [20, 20],\n            iconAnchor: [10, 10]\n          })\n        }).bindPopup(`\n          <div class=\"text-sm max-w-xs\">\n            <strong class=\"text-base\">Start Location</strong><br/>\n            <span class=\"text-gray-600\">${((_locations$find = locations.find(l => l.id === startLocation)) === null || _locations$find === void 0 ? void 0 : _locations$find.city) || 'Origin'}</span>\n          </div>\n        `).addTo(map);\n        const endMarker = L.marker(endCoords, {\n          icon: L.divIcon({\n            className: 'custom-route-marker',\n            html: `<div style=\"\n              background-color: #EF4444; \n              width: 16px; \n              height: 16px; \n              border-radius: 20%;\n              border: 2px solid white; \n              box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n              transform: rotate(45deg);\n            \"></div>`,\n            iconSize: [20, 20],\n            iconAnchor: [10, 10]\n          })\n        }).bindPopup(`\n          <div class=\"text-sm max-w-xs\">\n            <strong class=\"text-base\">End Location</strong><br/>\n            <span class=\"text-gray-600\">${((_locations$find2 = locations.find(l => l.id === endLocation)) === null || _locations$find2 === void 0 ? void 0 : _locations$find2.city) || 'Destination'}</span>\n            ${routeInfo.distance ? `<br/><span class=\"text-gray-500\">Distance: ${routeInfo.distance} km</span>` : ''}\n            ${routeInfo.duration ? `<br/><span class=\"text-gray-500\">Duration: ${routeInfo.duration} hours</span>` : ''}\n          </div>\n        `).addTo(map);\n\n        // Add route line\n        const routeLine = L.polyline(routeInfo.coordinates, {\n          color: '#3B82F6',\n          weight: 4,\n          opacity: 0.8\n        }).addTo(map);\n\n        // Fit map to route\n        const bounds = L.latLngBounds(routeInfo.coordinates);\n        map.fitBounds(bounds, {\n          padding: [30, 30]\n        });\n        setLoading(false);\n      };\n      displaySingleRoute();\n      return;\n    }\n\n    // Handle multiple routes display\n    if (!routes.length) return;\n    const displayMultipleRoutes = async () => {\n      setLoading(true);\n      const bounds = L.latLngBounds();\n      const routeColors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n      const newRouteData = {};\n\n      // Fetch all routes\n      for (let index = 0; index < routes.length; index++) {\n        var _route$intermediateSt;\n        const route = routes[index];\n        const color = routeColors[index % routeColors.length];\n        const routeInfo = await fetchRouteWithStops(route);\n        newRouteData[route.id] = routeInfo;\n\n        // Get location details\n        const originLocation = locations.find(loc => loc.id === route.originId);\n        const destLocation = locations.find(loc => loc.id === route.destinationId);\n\n        // Create custom icons with route colors\n        const createCustomIcon = (isOrigin, size = 'medium') => {\n          const sizes = {\n            small: {\n              width: 8,\n              height: 8,\n              iconSize: [12, 12]\n            },\n            medium: {\n              width: 12,\n              height: 12,\n              iconSize: [16, 16]\n            },\n            large: {\n              width: 16,\n              height: 16,\n              iconSize: [20, 20]\n            }\n          };\n          const iconSize = sizes[size];\n          const borderRadius = isOrigin ? '50%' : '20%';\n          return L.divIcon({\n            className: 'custom-route-marker',\n            html: `<div style=\"\n              background-color: ${color}; \n              width: ${iconSize.width}px; \n              height: ${iconSize.height}px; \n              border-radius: ${borderRadius};\n              border: 2px solid white; \n              box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n              ${!isOrigin ? 'transform: rotate(45deg);' : ''}\n            \"></div>`,\n            iconSize: iconSize.iconSize,\n            iconAnchor: [iconSize.iconSize[0] / 2, iconSize.iconSize[1] / 2]\n          });\n        };\n        const originCoords = getLocationCoordinates(route.originId);\n        const destCoords = getLocationCoordinates(route.destinationId);\n\n        // Add origin marker\n        L.marker(originCoords, {\n          icon: createCustomIcon(true, 'large'),\n          zIndexOffset: 1000\n        }).bindPopup(`\n          <div class=\"text-sm max-w-xs\">\n            <strong class=\"text-base\">${(originLocation === null || originLocation === void 0 ? void 0 : originLocation.city) || 'Origin'}</strong><br/>\n            <span class=\"text-gray-600\">${route.name}</span><br/>\n            <span class=\"text-gray-500\">${(originLocation === null || originLocation === void 0 ? void 0 : originLocation.address) || ''}</span>\n          </div>\n        `).addTo(map);\n\n        // Add destination marker\n        L.marker(destCoords, {\n          icon: createCustomIcon(false, 'large'),\n          zIndexOffset: 1000\n        }).bindPopup(`\n          <div class=\"text-sm max-w-xs\">\n            <strong class=\"text-base\">${(destLocation === null || destLocation === void 0 ? void 0 : destLocation.city) || 'Destination'}</strong><br/>\n            <span class=\"text-gray-600\">${route.name}</span><br/>\n            <span class=\"text-gray-500\">Distance: ${routeInfo.distance || route.distanceKm} km</span><br/>\n            <span class=\"text-gray-500\">Duration: ${routeInfo.duration || route.durationHours} hours</span><br/>\n            <span class=\"text-gray-500\">Price: RM ${route.basePrice}</span><br/>\n            <span class=\"text-gray-500\">${(destLocation === null || destLocation === void 0 ? void 0 : destLocation.address) || ''}</span>\n          </div>\n        `).addTo(map);\n\n        // Add intermediate stop markers\n        (_route$intermediateSt = route.intermediateStops) === null || _route$intermediateSt === void 0 ? void 0 : _route$intermediateSt.forEach(stop => {\n          const stopLocation = locations.find(loc => loc.id === stop.locationId);\n          const stopCoords = getLocationCoordinates(stop.locationId);\n          L.marker(stopCoords, {\n            icon: createCustomIcon(true, 'small'),\n            zIndexOffset: 500\n          }).bindPopup(`\n            <div class=\"text-sm max-w-xs\">\n              <strong>${(stopLocation === null || stopLocation === void 0 ? void 0 : stopLocation.city) || 'Stop'}</strong><br/>\n              <span class=\"text-gray-600\">Stop ${stop.stopNumber}</span><br/>\n              <span class=\"text-gray-500\">+RM ${stop.additionalPrice}</span><br/>\n              <span class=\"text-gray-500\">${Math.floor(stop.arrivalOffset / 60)}h ${stop.arrivalOffset % 60}m from origin</span>\n            </div>\n          `).addTo(map);\n          bounds.extend(stopCoords);\n        });\n\n        // Add route line using real road coordinates\n        const routeLine = L.polyline(routeInfo.coordinates, {\n          color: color,\n          weight: 4,\n          opacity: 0.8,\n          dashArray: route.frequency === 'weekend' ? '10, 5' : null\n        }).addTo(map);\n\n        // Add hover effects\n        routeLine.on('mouseover', function () {\n          this.setStyle({\n            weight: 6,\n            opacity: 1.0\n          });\n        });\n        routeLine.on('mouseout', function () {\n          this.setStyle({\n            weight: 4,\n            opacity: 0.8\n          });\n        });\n\n        // Add to bounds\n        routeInfo.coordinates.forEach(point => bounds.extend(point));\n      }\n      setRouteData(newRouteData);\n\n      // Fit map to show all routes with padding\n      if (bounds.isValid()) {\n        map.fitBounds(bounds, {\n          padding: [30, 30],\n          maxZoom: 12\n        });\n      }\n      setLoading(false);\n    };\n    displayMultipleRoutes();\n  }, [routes, locations, startLocation, endLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative h-full w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"h-full w-full rounded-lg\",\n      style: {\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-black bg-opacity-20 flex items-center justify-center rounded-lg\",\n      style: {\n        zIndex: 1001\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-4 shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-6 h-6 border-2 border-primary-600 border-t-transparent rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium\",\n            children: \"Loading road routes...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this), routes.length > 0 && !startLocation && !endLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 max-w-xs\",\n      style: {\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-sm mb-3 text-gray-800\",\n          children: \"Active Routes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2 max-h-60 overflow-y-auto\",\n          children: routes.slice(0, 7).map((route, index) => {\n            const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n            const color = colors[index % colors.length];\n\n            // Calculate average occupation for this route\n            const routeTrips = selectedTrips.filter(trip => trip.routeId === route.id);\n            const avgOccupation = routeTrips.length > 0 ? routeTrips.reduce((sum, trip) => sum + calculateOccupancyRate(trip), 0) / routeTrips.length : 0;\n            const routeInfo = routeData[route.id];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between text-xs py-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2 flex-shrink-0\",\n                  style: {\n                    backgroundColor: color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 min-w-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate text-gray-700\",\n                    children: route.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 25\n                  }, this), routeInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [routeInfo.distance, \" km \\u2022 \", routeInfo.duration, \"h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this), avgOccupation > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-2 flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-8 bg-gray-200 rounded-full h-1.5 mr-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-1.5 rounded-full transition-all\",\n                    style: {\n                      width: `${Math.min(avgOccupation, 100)}%`,\n                      backgroundColor: avgOccupation > 80 ? '#EF4444' : avgOccupation > 60 ? '#F59E0B' : '#10B981'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-600 font-medium\",\n                  children: [avgOccupation.toFixed(0), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 23\n              }, this)]\n            }, route.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 pt-2 border-t border-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between text-xs text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u25CF Origin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u25C6 Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Real Roads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 left-4 bg-white rounded-lg shadow-lg border border-gray-200\",\n      style: {\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 bg-blue-500 rounded-full mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Regular Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-4 h-0.5 bg-gray-400 mr-2\",\n              style: {\n                borderTop: '2px dashed'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Weekend Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 pt-1 border-t border-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500\",\n              children: \"\\uD83D\\uDEE3\\uFE0F Real road routes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), routes.length === 0 && !startLocation && !endLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-gray-50 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: \"\\uD83D\\uDDFA\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium\",\n          children: \"No routes to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs\",\n          children: \"Select routes to view on map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n_s(RouteMap, \"qy2PnCr6VunRqwPpUFdO+U1ebu4=\");\n_c = RouteMap;\nexport default RouteMap;\nvar _c;\n$RefreshReg$(_c, \"RouteMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","calculateOccupancyRate","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","RouteMap","routes","locations","selectedTrips","startLocation","endLocation","_s","mapRef","mapInstanceRef","routeData","setRouteData","loading","setLoading","getLocationCoordinates","locationId","location","find","loc","id","coordinates","fetchRoadRoute","startCoords","endCoords","routeId","url","response","fetch","data","json","length","geometry","map","coord","distance","toFixed","duration","parseFloat","error","console","warn","fetchRouteWithStops","route","originCoords","originId","destCoords","destinationId","intermediateStops","waypoints","sort","a","b","stopNumber","forEach","stop","push","waypointString","join","current","zoomControl","scrollWheelZoom","doubleClickZoom","boxZoom","keyboard","dragging","touchZoom","setView","tileLayer","attribution","maxZoom","minZoom","addTo","remove","eachLayer","layer","Marker","Polyline","CircleMarker","removeLayer","displaySingleRoute","_locations$find","_locations$find2","routeInfo","startMarker","marker","icon","divIcon","className","html","iconSize","iconAnchor","bindPopup","l","city","endMarker","routeLine","polyline","color","weight","opacity","bounds","latLngBounds","fitBounds","padding","displayMultipleRoutes","routeColors","newRouteData","index","_route$intermediateSt","originLocation","destLocation","createCustomIcon","isOrigin","size","sizes","small","width","height","medium","large","borderRadius","zIndexOffset","name","address","distanceKm","durationHours","basePrice","stopLocation","stopCoords","additionalPrice","Math","floor","arrivalOffset","extend","dashArray","frequency","on","setStyle","point","isValid","children","ref","style","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","slice","colors","routeTrips","filter","trip","avgOccupation","reduce","sum","backgroundColor","min","borderTop","_c","$RefreshReg$"],"sources":["/Users/gohshunda/TWT-Transport-Booking/src/components/admin/RouteMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { calculateOccupancyRate } from '../../data/mockData';\n\n// Fix for default markers in React-Leaflet\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\nconst RouteMap = ({ routes = [], locations = [], selectedTrips = [], startLocation = null, endLocation = null }) => {\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const [routeData, setRouteData] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const getLocationCoordinates = (locationId) => {\n    const location = locations.find(loc => loc.id === locationId);\n    return location ? location.coordinates : [3.1390, 101.6869]; // Default to KL\n  };\n\n  // Fetch actual road route using OpenRouteService or OSRM\n  const fetchRoadRoute = async (startCoords, endCoords, routeId) => {\n    try {\n      // Using OSRM (Open Source Routing Machine) - free and reliable\n      const url = `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`;\n      \n      const response = await fetch(url);\n      const data = await response.json();\n      \n      if (data.routes && data.routes.length > 0) {\n        const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n        const distance = (data.routes[0].distance / 1000).toFixed(1); // Convert to km\n        const duration = (data.routes[0].duration / 3600).toFixed(1); // Convert to hours\n        \n        return {\n          coordinates,\n          distance: parseFloat(distance),\n          duration: parseFloat(duration)\n        };\n      }\n    } catch (error) {\n      console.warn(`Failed to fetch road route for ${routeId}, falling back to straight line:`, error);\n    }\n    \n    // Fallback to straight line if routing fails\n    return {\n      coordinates: [startCoords, endCoords],\n      distance: null,\n      duration: null\n    };\n  };\n\n  // Fetch road route with intermediate stops\n  const fetchRouteWithStops = async (route) => {\n    try {\n      setLoading(true);\n      \n      const originCoords = getLocationCoordinates(route.originId);\n      const destCoords = getLocationCoordinates(route.destinationId);\n      \n      // If there are intermediate stops, create waypoints\n      if (route.intermediateStops && route.intermediateStops.length > 0) {\n        const waypoints = [originCoords];\n        \n        // Add intermediate stops in order\n        route.intermediateStops\n          .sort((a, b) => a.stopNumber - b.stopNumber)\n          .forEach(stop => {\n            waypoints.push(getLocationCoordinates(stop.locationId));\n          });\n        \n        waypoints.push(destCoords);\n        \n        // Create waypoint string for OSRM\n        const waypointString = waypoints\n          .map(coord => `${coord[1]},${coord[0]}`)\n          .join(';');\n        \n        const url = `https://router.project-osrm.org/route/v1/driving/${waypointString}?overview=full&geometries=geojson&steps=true`;\n        \n        const response = await fetch(url);\n        const data = await response.json();\n        \n        if (data.routes && data.routes.length > 0) {\n          const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n          const distance = (data.routes[0].distance / 1000).toFixed(1);\n          const duration = (data.routes[0].duration / 3600).toFixed(1);\n          \n          return {\n            coordinates,\n            distance: parseFloat(distance),\n            duration: parseFloat(duration),\n            waypoints\n          };\n        }\n      } else {\n        // Simple route without stops\n        return await fetchRoadRoute(originCoords, destCoords, route.id);\n      }\n    } catch (error) {\n      console.warn(`Failed to fetch route with stops for ${route.id}:`, error);\n      return await fetchRoadRoute(\n        getLocationCoordinates(route.originId),\n        getLocationCoordinates(route.destinationId),\n        route.id\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    // Initialize map with better settings\n    const map = L.map(mapRef.current, {\n      zoomControl: true,\n      scrollWheelZoom: true,\n      doubleClickZoom: true,\n      boxZoom: true,\n      keyboard: true,\n      dragging: true,\n      touchZoom: true,\n    }).setView([4.2105, 101.9758], 7); // Center on Malaysia\n    \n    mapInstanceRef.current = map;\n\n    // Add tile layer with better styling\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Â© OpenStreetMap contributors | Routing by OSRM',\n      maxZoom: 18,\n      minZoom: 6,\n    }).addTo(map);\n\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!mapInstanceRef.current) return;\n\n    const map = mapInstanceRef.current;\n\n    // Clear existing layers\n    map.eachLayer((layer) => {\n      if (layer instanceof L.Marker || layer instanceof L.Polyline || layer instanceof L.CircleMarker) {\n        map.removeLayer(layer);\n      }\n    });\n\n    // Handle single route display (when startLocation and endLocation are provided)\n    if (startLocation && endLocation) {\n      const displaySingleRoute = async () => {\n        setLoading(true);\n        \n        const startCoords = getLocationCoordinates(startLocation);\n        const endCoords = getLocationCoordinates(endLocation);\n        \n        const routeInfo = await fetchRoadRoute(startCoords, endCoords, 'single-route');\n        \n        // Add markers\n        const startMarker = L.marker(startCoords, {\n          icon: L.divIcon({\n            className: 'custom-route-marker',\n            html: `<div style=\"\n              background-color: #3B82F6; \n              width: 16px; \n              height: 16px; \n              border-radius: 50%;\n              border: 2px solid white; \n              box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n            \"></div>`,\n            iconSize: [20, 20],\n            iconAnchor: [10, 10]\n          })\n        }).bindPopup(`\n          <div class=\"text-sm max-w-xs\">\n            <strong class=\"text-base\">Start Location</strong><br/>\n            <span class=\"text-gray-600\">${locations.find(l => l.id === startLocation)?.city || 'Origin'}</span>\n          </div>\n        `).addTo(map);\n\n        const endMarker = L.marker(endCoords, {\n          icon: L.divIcon({\n            className: 'custom-route-marker',\n            html: `<div style=\"\n              background-color: #EF4444; \n              width: 16px; \n              height: 16px; \n              border-radius: 20%;\n              border: 2px solid white; \n              box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n              transform: rotate(45deg);\n            \"></div>`,\n            iconSize: [20, 20],\n            iconAnchor: [10, 10]\n          })\n        }).bindPopup(`\n          <div class=\"text-sm max-w-xs\">\n            <strong class=\"text-base\">End Location</strong><br/>\n            <span class=\"text-gray-600\">${locations.find(l => l.id === endLocation)?.city || 'Destination'}</span>\n            ${routeInfo.distance ? `<br/><span class=\"text-gray-500\">Distance: ${routeInfo.distance} km</span>` : ''}\n            ${routeInfo.duration ? `<br/><span class=\"text-gray-500\">Duration: ${routeInfo.duration} hours</span>` : ''}\n          </div>\n        `).addTo(map);\n\n        // Add route line\n        const routeLine = L.polyline(routeInfo.coordinates, {\n          color: '#3B82F6',\n          weight: 4,\n          opacity: 0.8,\n        }).addTo(map);\n\n        // Fit map to route\n        const bounds = L.latLngBounds(routeInfo.coordinates);\n        map.fitBounds(bounds, { padding: [30, 30] });\n        \n        setLoading(false);\n      };\n\n      displaySingleRoute();\n      return;\n    }\n\n    // Handle multiple routes display\n    if (!routes.length) return;\n\n    const displayMultipleRoutes = async () => {\n      setLoading(true);\n      const bounds = L.latLngBounds();\n      const routeColors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n      const newRouteData = {};\n\n      // Fetch all routes\n      for (let index = 0; index < routes.length; index++) {\n        const route = routes[index];\n        const color = routeColors[index % routeColors.length];\n        \n        const routeInfo = await fetchRouteWithStops(route);\n        newRouteData[route.id] = routeInfo;\n\n        // Get location details\n        const originLocation = locations.find(loc => loc.id === route.originId);\n        const destLocation = locations.find(loc => loc.id === route.destinationId);\n\n        // Create custom icons with route colors\n        const createCustomIcon = (isOrigin, size = 'medium') => {\n          const sizes = {\n            small: { width: 8, height: 8, iconSize: [12, 12] },\n            medium: { width: 12, height: 12, iconSize: [16, 16] },\n            large: { width: 16, height: 16, iconSize: [20, 20] }\n          };\n          \n          const iconSize = sizes[size];\n          const borderRadius = isOrigin ? '50%' : '20%';\n          \n          return L.divIcon({\n            className: 'custom-route-marker',\n            html: `<div style=\"\n              background-color: ${color}; \n              width: ${iconSize.width}px; \n              height: ${iconSize.height}px; \n              border-radius: ${borderRadius};\n              border: 2px solid white; \n              box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n              ${!isOrigin ? 'transform: rotate(45deg);' : ''}\n            \"></div>`,\n            iconSize: iconSize.iconSize,\n            iconAnchor: [iconSize.iconSize[0]/2, iconSize.iconSize[1]/2]\n          });\n        };\n\n        const originCoords = getLocationCoordinates(route.originId);\n        const destCoords = getLocationCoordinates(route.destinationId);\n\n        // Add origin marker\n        L.marker(originCoords, { \n          icon: createCustomIcon(true, 'large'),\n          zIndexOffset: 1000\n        }).bindPopup(`\n          <div class=\"text-sm max-w-xs\">\n            <strong class=\"text-base\">${originLocation?.city || 'Origin'}</strong><br/>\n            <span class=\"text-gray-600\">${route.name}</span><br/>\n            <span class=\"text-gray-500\">${originLocation?.address || ''}</span>\n          </div>\n        `).addTo(map);\n\n        // Add destination marker\n        L.marker(destCoords, { \n          icon: createCustomIcon(false, 'large'),\n          zIndexOffset: 1000\n        }).bindPopup(`\n          <div class=\"text-sm max-w-xs\">\n            <strong class=\"text-base\">${destLocation?.city || 'Destination'}</strong><br/>\n            <span class=\"text-gray-600\">${route.name}</span><br/>\n            <span class=\"text-gray-500\">Distance: ${routeInfo.distance || route.distanceKm} km</span><br/>\n            <span class=\"text-gray-500\">Duration: ${routeInfo.duration || route.durationHours} hours</span><br/>\n            <span class=\"text-gray-500\">Price: RM ${route.basePrice}</span><br/>\n            <span class=\"text-gray-500\">${destLocation?.address || ''}</span>\n          </div>\n        `).addTo(map);\n\n        // Add intermediate stop markers\n        route.intermediateStops?.forEach((stop) => {\n          const stopLocation = locations.find(loc => loc.id === stop.locationId);\n          const stopCoords = getLocationCoordinates(stop.locationId);\n          \n          L.marker(stopCoords, { \n            icon: createCustomIcon(true, 'small'),\n            zIndexOffset: 500\n          }).bindPopup(`\n            <div class=\"text-sm max-w-xs\">\n              <strong>${stopLocation?.city || 'Stop'}</strong><br/>\n              <span class=\"text-gray-600\">Stop ${stop.stopNumber}</span><br/>\n              <span class=\"text-gray-500\">+RM ${stop.additionalPrice}</span><br/>\n              <span class=\"text-gray-500\">${Math.floor(stop.arrivalOffset/60)}h ${stop.arrivalOffset%60}m from origin</span>\n            </div>\n          `).addTo(map);\n\n          bounds.extend(stopCoords);\n        });\n\n        // Add route line using real road coordinates\n        const routeLine = L.polyline(routeInfo.coordinates, {\n          color: color,\n          weight: 4,\n          opacity: 0.8,\n          dashArray: route.frequency === 'weekend' ? '10, 5' : null\n        }).addTo(map);\n\n        // Add hover effects\n        routeLine.on('mouseover', function() {\n          this.setStyle({ weight: 6, opacity: 1.0 });\n        });\n        \n        routeLine.on('mouseout', function() {\n          this.setStyle({ weight: 4, opacity: 0.8 });\n        });\n\n        // Add to bounds\n        routeInfo.coordinates.forEach(point => bounds.extend(point));\n      }\n\n      setRouteData(newRouteData);\n\n      // Fit map to show all routes with padding\n      if (bounds.isValid()) {\n        map.fitBounds(bounds, { \n          padding: [30, 30],\n          maxZoom: 12\n        });\n      }\n      \n      setLoading(false);\n    };\n\n    displayMultipleRoutes();\n\n  }, [routes, locations, startLocation, endLocation]);\n\n  return (\n    <div className=\"relative h-full w-full\">\n      <div ref={mapRef} className=\"h-full w-full rounded-lg\" style={{ zIndex: 1 }} />\n      \n      {/* Loading indicator */}\n      {loading && (\n        <div className=\"absolute inset-0 bg-black bg-opacity-20 flex items-center justify-center rounded-lg\" style={{ zIndex: 1001 }}>\n          <div className=\"bg-white rounded-lg p-4 shadow-lg\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-6 h-6 border-2 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n              <span className=\"text-sm font-medium\">Loading road routes...</span>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Enhanced Legend with Trip Occupation */}\n      {routes.length > 0 && !startLocation && !endLocation && (\n        <div className=\"absolute top-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 max-w-xs\" style={{ zIndex: 1000 }}>\n          <div className=\"p-4\">\n            <h4 className=\"font-semibold text-sm mb-3 text-gray-800\">Active Routes</h4>\n            <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n              {routes.slice(0, 7).map((route, index) => {\n                const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n                const color = colors[index % colors.length];\n                \n                // Calculate average occupation for this route\n                const routeTrips = selectedTrips.filter(trip => trip.routeId === route.id);\n                const avgOccupation = routeTrips.length > 0 \n                  ? routeTrips.reduce((sum, trip) => sum + calculateOccupancyRate(trip), 0) / routeTrips.length\n                  : 0;\n                \n                const routeInfo = routeData[route.id];\n                \n                return (\n                  <div key={route.id} className=\"flex items-center justify-between text-xs py-1\">\n                    <div className=\"flex items-center flex-1 min-w-0\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2 flex-shrink-0\" \n                        style={{ backgroundColor: color }}\n                      ></div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"truncate text-gray-700\">{route.name}</div>\n                        {routeInfo && (\n                          <div className=\"text-xs text-gray-500\">\n                            {routeInfo.distance} km â¢ {routeInfo.duration}h\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    {avgOccupation > 0 && (\n                      <div className=\"ml-2 flex items-center\">\n                        <div className=\"w-8 bg-gray-200 rounded-full h-1.5 mr-1\">\n                          <div \n                            className=\"h-1.5 rounded-full transition-all\"\n                            style={{ \n                              width: `${Math.min(avgOccupation, 100)}%`,\n                              backgroundColor: avgOccupation > 80 ? '#EF4444' : avgOccupation > 60 ? '#F59E0B' : '#10B981'\n                            }}\n                          ></div>\n                        </div>\n                        <span className=\"text-xs text-gray-600 font-medium\">\n                          {avgOccupation.toFixed(0)}%\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n            \n            {/* Legend explanation */}\n            <div className=\"mt-3 pt-2 border-t border-gray-100\">\n              <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                <span>â Origin</span>\n                <span>â Destination</span>\n                <span>Real Roads</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Map Controls */}\n      <div className=\"absolute bottom-4 left-4 bg-white rounded-lg shadow-lg border border-gray-200\" style={{ zIndex: 1000 }}>\n        <div className=\"p-3\">\n          <div className=\"text-xs text-gray-600 space-y-1\">\n            <div className=\"flex items-center\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full mr-2\"></div>\n              <span>Regular Service</span>\n            </div>\n            <div className=\"flex items-center\">\n              <div className=\"w-4 h-0.5 bg-gray-400 mr-2\" style={{borderTop: '2px dashed'}}></div>\n              <span>Weekend Only</span>\n            </div>\n            <div className=\"mt-2 pt-1 border-t border-gray-200\">\n              <div className=\"text-xs text-gray-500\">ð£ï¸ Real road routes</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Empty state */}\n      {routes.length === 0 && !startLocation && !endLocation && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50 rounded-lg\">\n          <div className=\"text-center text-gray-500\">\n            <div className=\"mb-2\">ðºï¸</div>\n            <p className=\"text-sm font-medium\">No routes to display</p>\n            <p className=\"text-xs\">Select routes to view on map</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RouteMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}