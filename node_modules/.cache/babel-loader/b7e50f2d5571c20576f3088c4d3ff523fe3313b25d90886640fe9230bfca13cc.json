{"ast":null,"code":"import _objectSpread from\"/Users/gohshunda/TWT-Transport-Booking/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{calculateOccupancyRate,calculateTravelTime,calculateCO2Emissions,calculateDynamicPrice}from'./routeAnalysisApi';const BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:3001/api';// Helper function to make API calls with authentication\nconst apiCall=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const baseUrl=process.env.REACT_APP_API_URL||'http://localhost:5001/api';const url=\"\".concat(baseUrl).concat(endpoint);const defaultOptions={method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('authToken'))}};const fetchOptions=_objectSpread(_objectSpread({},defaultOptions),options);try{console.log(\"API Call: \".concat(fetchOptions.method,\" \").concat(url));const response=await fetch(url,fetchOptions);// 检查响应状态\nif(!response.ok){const errorText=await response.text();console.error('API call failed:',errorText);// 尝试解析错误信息\nlet errorMessage=\"HTTP error! status: \".concat(response.status);try{const errorJson=JSON.parse(errorText);if(errorJson.message||errorJson.error){errorMessage=errorJson.message||errorJson.error;}}catch(e){// 如果不是JSON格式，使用原始错误文本\nif(errorText)errorMessage=errorText;}throw new Error(errorMessage);}const data=await response.json();return data;}catch(error){console.error('API call failed:',error);throw error;}};// ==================== DASHBOARD STATISTICS ====================\nexport const getDashboardStats=async()=>{return await apiCall('/admin/stats/overview');};export const getAnalyticsData=async()=>{return await apiCall('/admin/stats/analytics');};// ==================== VEHICLE MANAGEMENT ====================\nexport const getVehicles=async()=>{return await apiCall('/admin/vehicles');};export const addVehicle=async vehicleData=>{return await apiCall('/admin/vehicles',{method:'POST',body:JSON.stringify(vehicleData)});};export const updateVehicle=async(vehicleId,updateData)=>{return await apiCall(\"/admin/vehicles/\".concat(vehicleId),{method:'PUT',body:JSON.stringify(updateData)});};export const deleteVehicle=async vehicleId=>{return await apiCall(\"/admin/vehicles/\".concat(vehicleId),{method:'DELETE'});};// ==================== ROUTE MANAGEMENT ====================\nexport const getRoutes=async()=>{return await apiCall('/admin/routes');};export const getLocationsForRoutes=async()=>{return await apiCall('/admin/locations');};export const createRoute=async routeData=>{return await apiCall('/admin/routes',{method:'POST',body:JSON.stringify(routeData)});};export const getRouteStops=async routeId=>{return await apiCall(\"/admin/routes/\".concat(routeId,\"/stops\"));};export const getRoutePerformance=async()=>{return await apiCall('/admin/analytics/routes');};// ==================== SCHEDULE MANAGEMENT ====================\nexport const getTodaysSchedule=async()=>{return await apiCall('/admin/schedules/today');};export const getSchedules=async(startDate,endDate)=>{const params=new URLSearchParams();if(startDate)params.append('startDate',startDate);if(endDate)params.append('endDate',endDate);return await apiCall(\"/admin/schedules?\".concat(params.toString()));};export const getTripDetails=async tripId=>{try{console.log('Getting trip details for ID:',tripId);const response=await apiCall(\"/admin/trips/\".concat(tripId));return response;}catch(error){console.error('Error getting trip details:',error);return{success:false,message:error.message||'Failed to get trip details',// 返回一个空的数据结构，避免前端出现undefined错误\ndata:{id:tripId,route_name:'Unknown Route',trip_number:'Unknown',status:'unknown',origin_name:'Unknown',destination_name:'Unknown',origin_city:'',destination_city:'',base_price:0,total_seats:0,available_seats:0,occupied_seats:0,occupancy_percentage:0,departure_datetime:new Date().toISOString(),estimated_arrival_datetime:new Date().toISOString(),vehicle_model:'Unknown',vehicle_number:'Unknown',license_plate:'Unknown',vehicle_type:'Unknown',stops:[],seat_pricing:[],pricing_rules:[]}};}};export const createSchedule=async scheduleData=>{try{console.log('Creating schedule with data:',scheduleData);const response=await apiCall('/admin/schedules',{method:'POST',body:JSON.stringify(scheduleData)});return response;}catch(error){console.error('Error creating schedule:',error);return{success:false,message:error.message||'Failed to create schedule'};}};// ==================== CUSTOMER SERVICE ====================\nexport const searchTrips=async searchParams=>{return await apiCall('/admin/search-trips',{method:'POST',body:JSON.stringify(searchParams)});};// ==================== BOOKING MANAGEMENT ====================\nexport const createBooking=async bookingData=>{return await apiCall('/bookings',{method:'POST',body:JSON.stringify(bookingData)});};export const getBookingDetails=async bookingId=>{return await apiCall(\"/bookings/\".concat(bookingId));};export const updateBooking=async(bookingId,updateData)=>{return await apiCall(\"/bookings/\".concat(bookingId),{method:'PUT',body:JSON.stringify(updateData)});};// ==================== LOCATIONS ====================\nexport const getLocations=async()=>{return await apiCall('/locations');};// ==================== ANALYTICS ====================\nexport const getRouteAnalytics=async()=>{return await apiCall('/admin/analytics/routes');};export const getRevenueAnalytics=async function(){let period=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'30';return await apiCall(\"/admin/analytics/revenue?period=\".concat(period));};export const getOccupancyAnalytics=async function(){let period=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'30';return await apiCall(\"/admin/analytics/occupancy?period=\".concat(period));};// ==================== UTILITY FUNCTIONS ====================\nexport const addMoreTrips=async()=>{return await apiCall('/admin/add-more-trips',{method:'POST'});};// Format currency for display\nexport const formatCurrency=amount=>{return new Intl.NumberFormat('en-MY',{style:'currency',currency:'MYR'}).format(amount);};// Format date for display\nexport const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('en-MY',{year:'numeric',month:'short',day:'numeric'});};// Format time for display\nexport const formatTime=dateString=>{return new Date(dateString).toLocaleTimeString('en-MY',{hour:'2-digit',minute:'2-digit'});};// Calculate occupancy percentage\nexport const calculateOccupancy=(occupiedSeats,totalSeats)=>{if(totalSeats===0)return 0;return Math.round(occupiedSeats/totalSeats*100);};// Get occupancy color class based on percentage\nexport const getOccupancyColorClass=percentage=>{if(percentage>=80)return'text-red-600 bg-red-100';if(percentage>=60)return'text-yellow-600 bg-yellow-100';if(percentage>=40)return'text-blue-600 bg-blue-100';return'text-green-600 bg-green-100';};// Error handler for API calls\nexport const handleApiError=error=>{console.error('API Error:',error);if(error.message.includes('401')){// Unauthorized - redirect to login\nlocalStorage.removeItem('authToken');window.location.href='/login';return'Authentication failed. Please log in again.';}if(error.message.includes('403')){return'Access denied. You do not have permission to perform this action.';}if(error.message.includes('404')){return'Resource not found.';}if(error.message.includes('500')){return'Server error. Please try again later.';}return'An unexpected error occurred. Please try again.';};// 站点管理API\nexport const getAllLocations=async()=>{return await apiCall('/admin/locations');};export const getLocationById=async locationId=>{return await apiCall(\"/admin/locations/\".concat(locationId));};export const createLocation=async locationData=>{return await apiCall('/admin/locations',{method:'POST',body:JSON.stringify(locationData)});};export const updateLocation=async(locationId,locationData)=>{return await apiCall(\"/admin/locations/\".concat(locationId),{method:'PUT',body:JSON.stringify(locationData)});};export const deleteLocation=async locationId=>{return await apiCall(\"/admin/locations/\".concat(locationId),{method:'DELETE'});};// 路线管理API\nexport const getAllRoutes=async()=>{return await apiCall('/admin/routes');};export const getRouteById=async routeId=>{return await apiCall(\"/admin/routes/\".concat(routeId));};export const updateRoute=async(routeId,routeData)=>{return await apiCall(\"/admin/routes/\".concat(routeId),{method:'PUT',body:JSON.stringify(routeData)});};export const deleteRoute=async routeId=>{return await apiCall(\"/admin/routes/\".concat(routeId),{method:'DELETE'});};// 获取热门行程\nexport const getPopularTrips=async()=>{return await apiCall('/admin/popular-trips');};// 重新导出这些函数，以便现有代码能够正常工作\nexport{calculateOccupancyRate,calculateTravelTime,calculateCO2Emissions,calculateDynamicPrice};export default{getDashboardStats,getAnalyticsData,getVehicles,addVehicle,updateVehicle,deleteVehicle,getRoutes,getLocationsForRoutes,createRoute,getRouteStops,getRoutePerformance,getTodaysSchedule,getSchedules,getTripDetails,createSchedule,searchTrips,createBooking,getBookingDetails,updateBooking,getLocations,getRouteAnalytics,getRevenueAnalytics,getOccupancyAnalytics,addMoreTrips,formatCurrency,formatDate,formatTime,calculateOccupancy,getOccupancyColorClass,handleApiError,getAllLocations,getLocationById,createLocation,updateLocation,deleteLocation,getAllRoutes,getRouteById,updateRoute,deleteRoute,getPopularTrips};","map":{"version":3,"names":["calculateOccupancyRate","calculateTravelTime","calculateCO2Emissions","calculateDynamicPrice","BASE_URL","process","env","REACT_APP_API_URL","apiCall","endpoint","options","arguments","length","undefined","baseUrl","url","concat","defaultOptions","method","headers","localStorage","getItem","fetchOptions","_objectSpread","console","log","response","fetch","ok","errorText","text","error","errorMessage","status","errorJson","JSON","parse","message","e","Error","data","json","getDashboardStats","getAnalyticsData","getVehicles","addVehicle","vehicleData","body","stringify","updateVehicle","vehicleId","updateData","deleteVehicle","getRoutes","getLocationsForRoutes","createRoute","routeData","getRouteStops","routeId","getRoutePerformance","getTodaysSchedule","getSchedules","startDate","endDate","params","URLSearchParams","append","toString","getTripDetails","tripId","success","id","route_name","trip_number","origin_name","destination_name","origin_city","destination_city","base_price","total_seats","available_seats","occupied_seats","occupancy_percentage","departure_datetime","Date","toISOString","estimated_arrival_datetime","vehicle_model","vehicle_number","license_plate","vehicle_type","stops","seat_pricing","pricing_rules","createSchedule","scheduleData","searchTrips","searchParams","createBooking","bookingData","getBookingDetails","bookingId","updateBooking","getLocations","getRouteAnalytics","getRevenueAnalytics","period","getOccupancyAnalytics","addMoreTrips","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","toLocaleDateString","year","month","day","formatTime","toLocaleTimeString","hour","minute","calculateOccupancy","occupiedSeats","totalSeats","Math","round","getOccupancyColorClass","percentage","handleApiError","includes","removeItem","window","location","href","getAllLocations","getLocationById","locationId","createLocation","locationData","updateLocation","deleteLocation","getAllRoutes","getRouteById","updateRoute","deleteRoute","getPopularTrips"],"sources":["/Users/gohshunda/TWT-Transport-Booking/src/services/adminApi.js"],"sourcesContent":["import { \n  calculateOccupancyRate, \n  calculateTravelTime, \n  calculateCO2Emissions, \n  calculateDynamicPrice \n} from './routeAnalysisApi';\n\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Helper function to make API calls with authentication\nconst apiCall = async (endpoint, options = {}) => {\n  const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n  const url = `${baseUrl}${endpoint}`;\n  \n  const defaultOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n    }\n  };\n  \n  const fetchOptions = {\n    ...defaultOptions,\n    ...options,\n  };\n  \n  try {\n    console.log(`API Call: ${fetchOptions.method} ${url}`);\n    const response = await fetch(url, fetchOptions);\n    \n    // 检查响应状态\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API call failed:', errorText);\n      \n      // 尝试解析错误信息\n      let errorMessage = `HTTP error! status: ${response.status}`;\n      try {\n        const errorJson = JSON.parse(errorText);\n        if (errorJson.message || errorJson.error) {\n          errorMessage = errorJson.message || errorJson.error;\n        }\n      } catch (e) {\n        // 如果不是JSON格式，使用原始错误文本\n        if (errorText) errorMessage = errorText;\n      }\n      \n      throw new Error(errorMessage);\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('API call failed:', error);\n    throw error;\n  }\n};\n\n// ==================== DASHBOARD STATISTICS ====================\n\nexport const getDashboardStats = async () => {\n  return await apiCall('/admin/stats/overview');\n};\n\nexport const getAnalyticsData = async () => {\n  return await apiCall('/admin/stats/analytics');\n};\n\n// ==================== VEHICLE MANAGEMENT ====================\n\nexport const getVehicles = async () => {\n  return await apiCall('/admin/vehicles');\n};\n\nexport const addVehicle = async (vehicleData) => {\n  return await apiCall('/admin/vehicles', {\n    method: 'POST',\n    body: JSON.stringify(vehicleData),\n  });\n};\n\nexport const updateVehicle = async (vehicleId, updateData) => {\n  return await apiCall(`/admin/vehicles/${vehicleId}`, {\n    method: 'PUT',\n    body: JSON.stringify(updateData),\n  });\n};\n\nexport const deleteVehicle = async (vehicleId) => {\n  return await apiCall(`/admin/vehicles/${vehicleId}`, {\n    method: 'DELETE',\n  });\n};\n\n// ==================== ROUTE MANAGEMENT ====================\n\nexport const getRoutes = async () => {\n  return await apiCall('/admin/routes');\n};\n\nexport const getLocationsForRoutes = async () => {\n  return await apiCall('/admin/locations');\n};\n\nexport const createRoute = async (routeData) => {\n  return await apiCall('/admin/routes', {\n    method: 'POST',\n    body: JSON.stringify(routeData),\n  });\n};\n\nexport const getRouteStops = async (routeId) => {\n  return await apiCall(`/admin/routes/${routeId}/stops`);\n};\n\nexport const getRoutePerformance = async () => {\n  return await apiCall('/admin/analytics/routes');\n};\n\n// ==================== SCHEDULE MANAGEMENT ====================\n\nexport const getTodaysSchedule = async () => {\n  return await apiCall('/admin/schedules/today');\n};\n\nexport const getSchedules = async (startDate, endDate) => {\n  const params = new URLSearchParams();\n  if (startDate) params.append('startDate', startDate);\n  if (endDate) params.append('endDate', endDate);\n  \n  return await apiCall(`/admin/schedules?${params.toString()}`);\n};\n\nexport const getTripDetails = async (tripId) => {\n  try {\n    console.log('Getting trip details for ID:', tripId);\n    const response = await apiCall(`/admin/trips/${tripId}`);\n    return response;\n  } catch (error) {\n    console.error('Error getting trip details:', error);\n    return {\n      success: false,\n      message: error.message || 'Failed to get trip details',\n      // 返回一个空的数据结构，避免前端出现undefined错误\n      data: {\n        id: tripId,\n        route_name: 'Unknown Route',\n        trip_number: 'Unknown',\n        status: 'unknown',\n        origin_name: 'Unknown',\n        destination_name: 'Unknown',\n        origin_city: '',\n        destination_city: '',\n        base_price: 0,\n        total_seats: 0,\n        available_seats: 0,\n        occupied_seats: 0,\n        occupancy_percentage: 0,\n        departure_datetime: new Date().toISOString(),\n        estimated_arrival_datetime: new Date().toISOString(),\n        vehicle_model: 'Unknown',\n        vehicle_number: 'Unknown',\n        license_plate: 'Unknown',\n        vehicle_type: 'Unknown',\n        stops: [],\n        seat_pricing: [],\n        pricing_rules: []\n      }\n    };\n  }\n};\n\nexport const createSchedule = async (scheduleData) => {\n  try {\n    console.log('Creating schedule with data:', scheduleData);\n    const response = await apiCall('/admin/schedules', {\n      method: 'POST',\n      body: JSON.stringify(scheduleData),\n    });\n    return response;\n  } catch (error) {\n    console.error('Error creating schedule:', error);\n    return {\n      success: false,\n      message: error.message || 'Failed to create schedule'\n    };\n  }\n};\n\n// ==================== CUSTOMER SERVICE ====================\n\nexport const searchTrips = async (searchParams) => {\n  return await apiCall('/admin/search-trips', {\n    method: 'POST',\n    body: JSON.stringify(searchParams),\n  });\n};\n\n// ==================== BOOKING MANAGEMENT ====================\n\nexport const createBooking = async (bookingData) => {\n  return await apiCall('/bookings', {\n    method: 'POST',\n    body: JSON.stringify(bookingData),\n  });\n};\n\nexport const getBookingDetails = async (bookingId) => {\n  return await apiCall(`/bookings/${bookingId}`);\n};\n\nexport const updateBooking = async (bookingId, updateData) => {\n  return await apiCall(`/bookings/${bookingId}`, {\n    method: 'PUT',\n    body: JSON.stringify(updateData),\n  });\n};\n\n// ==================== LOCATIONS ====================\n\nexport const getLocations = async () => {\n  return await apiCall('/locations');\n};\n\n// ==================== ANALYTICS ====================\n\nexport const getRouteAnalytics = async () => {\n  return await apiCall('/admin/analytics/routes');\n};\n\nexport const getRevenueAnalytics = async (period = '30') => {\n  return await apiCall(`/admin/analytics/revenue?period=${period}`);\n};\n\nexport const getOccupancyAnalytics = async (period = '30') => {\n  return await apiCall(`/admin/analytics/occupancy?period=${period}`);\n};\n\n// ==================== UTILITY FUNCTIONS ====================\n\nexport const addMoreTrips = async () => {\n  return await apiCall('/admin/add-more-trips', {\n    method: 'POST',\n  });\n};\n\n// Format currency for display\nexport const formatCurrency = (amount) => {\n  return new Intl.NumberFormat('en-MY', {\n    style: 'currency',\n    currency: 'MYR',\n  }).format(amount);\n};\n\n// Format date for display\nexport const formatDate = (dateString) => {\n  return new Date(dateString).toLocaleDateString('en-MY', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n};\n\n// Format time for display\nexport const formatTime = (dateString) => {\n  return new Date(dateString).toLocaleTimeString('en-MY', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n};\n\n// Calculate occupancy percentage\nexport const calculateOccupancy = (occupiedSeats, totalSeats) => {\n  if (totalSeats === 0) return 0;\n  return Math.round((occupiedSeats / totalSeats) * 100);\n};\n\n// Get occupancy color class based on percentage\nexport const getOccupancyColorClass = (percentage) => {\n  if (percentage >= 80) return 'text-red-600 bg-red-100';\n  if (percentage >= 60) return 'text-yellow-600 bg-yellow-100';\n  if (percentage >= 40) return 'text-blue-600 bg-blue-100';\n  return 'text-green-600 bg-green-100';\n};\n\n// Error handler for API calls\nexport const handleApiError = (error) => {\n  console.error('API Error:', error);\n  \n  if (error.message.includes('401')) {\n    // Unauthorized - redirect to login\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n    return 'Authentication failed. Please log in again.';\n  }\n  \n  if (error.message.includes('403')) {\n    return 'Access denied. You do not have permission to perform this action.';\n  }\n  \n  if (error.message.includes('404')) {\n    return 'Resource not found.';\n  }\n  \n  if (error.message.includes('500')) {\n    return 'Server error. Please try again later.';\n  }\n  \n  return 'An unexpected error occurred. Please try again.';\n};\n\n// 站点管理API\nexport const getAllLocations = async () => {\n  return await apiCall('/admin/locations');\n};\n\nexport const getLocationById = async (locationId) => {\n  return await apiCall(`/admin/locations/${locationId}`);\n};\n\nexport const createLocation = async (locationData) => {\n  return await apiCall('/admin/locations', {\n    method: 'POST',\n    body: JSON.stringify(locationData),\n  });\n};\n\nexport const updateLocation = async (locationId, locationData) => {\n  return await apiCall(`/admin/locations/${locationId}`, {\n    method: 'PUT',\n    body: JSON.stringify(locationData),\n  });\n};\n\nexport const deleteLocation = async (locationId) => {\n  return await apiCall(`/admin/locations/${locationId}`, {\n    method: 'DELETE',\n  });\n};\n\n// 路线管理API\nexport const getAllRoutes = async () => {\n  return await apiCall('/admin/routes');\n};\n\nexport const getRouteById = async (routeId) => {\n  return await apiCall(`/admin/routes/${routeId}`);\n};\n\nexport const updateRoute = async (routeId, routeData) => {\n  return await apiCall(`/admin/routes/${routeId}`, {\n    method: 'PUT',\n    body: JSON.stringify(routeData),\n  });\n};\n\nexport const deleteRoute = async (routeId) => {\n  return await apiCall(`/admin/routes/${routeId}`, {\n    method: 'DELETE',\n  });\n};\n\n// 获取热门行程\nexport const getPopularTrips = async () => {\n  return await apiCall('/admin/popular-trips');\n};\n\n// 重新导出这些函数，以便现有代码能够正常工作\nexport { \n  calculateOccupancyRate, \n  calculateTravelTime, \n  calculateCO2Emissions, \n  calculateDynamicPrice \n};\n\nexport default {\n  getDashboardStats,\n  getAnalyticsData,\n  getVehicles,\n  addVehicle,\n  updateVehicle,\n  deleteVehicle,\n  getRoutes,\n  getLocationsForRoutes,\n  createRoute,\n  getRouteStops,\n  getRoutePerformance,\n  getTodaysSchedule,\n  getSchedules,\n  getTripDetails,\n  createSchedule,\n  searchTrips,\n  createBooking,\n  getBookingDetails,\n  updateBooking,\n  getLocations,\n  getRouteAnalytics,\n  getRevenueAnalytics,\n  getOccupancyAnalytics,\n  addMoreTrips,\n  formatCurrency,\n  formatDate,\n  formatTime,\n  calculateOccupancy,\n  getOccupancyColorClass,\n  handleApiError,\n  getAllLocations,\n  getLocationById,\n  createLocation,\n  updateLocation,\n  deleteLocation,\n  getAllRoutes,\n  getRouteById,\n  updateRoute,\n  deleteRoute,\n  getPopularTrips,\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}