{"ast":null,"code":"import React,{useEffect,useRef,useState,useCallback}from'react';import L from'leaflet';import'leaflet/dist/leaflet.css';import{calculateOccupancyRate}from'../../services/routeAnalysisApi';// Fix for default markers in React-Leaflet\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";delete L.Icon.Default.prototype._getIconUrl;L.Icon.Default.mergeOptions({iconRetinaUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',iconUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',shadowUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'});const RouteMap=_ref=>{let{routes=[],locations=[],selectedTrips=[],startLocation=null,endLocation=null}=_ref;const mapRef=useRef(null);const mapInstanceRef=useRef(null);const isMountedRef=useRef(true);const[routeData,setRouteData]=useState({});const[loading,setLoading]=useState(false);const[mapReady,setMapReady]=useState(false);const getLocationCoordinates=locationId=>{const location=locations.find(loc=>loc.id===locationId);if(location){// Check if location has coordinates directly\nif(location.coordinates){return location.coordinates;}// Check if location has latitude and longitude\nif(location.latitude&&location.longitude){return[parseFloat(location.latitude),parseFloat(location.longitude)];}}// Default to KL coordinates if location not found or no coordinates\nreturn[3.1390,101.6869];};// Safe map operation wrapper\nconst safeMapOperation=useCallback(operation=>{if(!isMountedRef.current||!mapInstanceRef.current||!mapReady){return false;}try{return operation();}catch(error){console.warn('Map operation failed:',error);return false;}},[mapReady]);// Cleanup function for map\nconst cleanupMap=useCallback(()=>{if(mapInstanceRef.current){try{// Stop all animations and transitions\nmapInstanceRef.current.stop();// Remove all layers safely\nmapInstanceRef.current.eachLayer(layer=>{try{mapInstanceRef.current.removeLayer(layer);}catch(e){// Ignore cleanup errors\n}});// Remove map instance\nmapInstanceRef.current.off();// Remove all event listeners\nmapInstanceRef.current.remove();}catch(error){console.warn('Error during map cleanup:',error);}finally{mapInstanceRef.current=null;}}setMapReady(false);},[]);// Fetch actual road route using OpenRouteService or OSRM\nconst fetchRoadRoute=async(startCoords,endCoords,routeId)=>{if(!isMountedRef.current)return null;try{// Using OSRM (Open Source Routing Machine) - free and reliable\nconst url=\"https://router.project-osrm.org/route/v1/driving/\".concat(startCoords[1],\",\").concat(startCoords[0],\";\").concat(endCoords[1],\",\").concat(endCoords[0],\"?overview=full&geometries=geojson\");const response=await fetch(url);if(!isMountedRef.current)return null;const data=await response.json();if(data.routes&&data.routes.length>0){const coordinates=data.routes[0].geometry.coordinates.map(coord=>[coord[1],coord[0]]);const distance=(data.routes[0].distance/1000).toFixed(1);// Convert to km\nconst duration=(data.routes[0].duration/3600).toFixed(1);// Convert to hours\nreturn{coordinates,distance:parseFloat(distance),duration:parseFloat(duration)};}}catch(error){if(isMountedRef.current){console.warn(\"Failed to fetch road route for \".concat(routeId,\", falling back to straight line:\"),error);}}// Fallback to straight line if routing fails\nreturn{coordinates:[startCoords,endCoords],distance:null,duration:null};};// Fetch road route with intermediate stops\nconst fetchRouteWithStops=async route=>{if(!isMountedRef.current)return null;try{setLoading(true);// Handle both old and new data structures\nconst originId=route.originId||route.origin_id;const destId=route.destinationId||route.destination_id;const originCoords=getLocationCoordinates(originId);const destCoords=getLocationCoordinates(destId);// If there are intermediate stops, create waypoints\nif(route.intermediateStops&&route.intermediateStops.length>0){const waypoints=[originCoords];// Add intermediate stops in order\nroute.intermediateStops.sort((a,b)=>a.stopNumber-b.stopNumber).forEach(stop=>{const stopLocationId=stop.locationId||stop.location_id;waypoints.push(getLocationCoordinates(stopLocationId));});waypoints.push(destCoords);// Create waypoint string for OSRM\nconst waypointString=waypoints.map(coord=>\"\".concat(coord[1],\",\").concat(coord[0])).join(';');const url=\"https://router.project-osrm.org/route/v1/driving/\".concat(waypointString,\"?overview=full&geometries=geojson&steps=true\");const response=await fetch(url);if(!isMountedRef.current)return null;const data=await response.json();if(data.routes&&data.routes.length>0){const coordinates=data.routes[0].geometry.coordinates.map(coord=>[coord[1],coord[0]]);const distance=(data.routes[0].distance/1000).toFixed(1);const duration=(data.routes[0].duration/3600).toFixed(1);return{coordinates,distance:parseFloat(distance),duration:parseFloat(duration),waypoints};}}else{// Simple route without stops\nreturn await fetchRoadRoute(originCoords,destCoords,route.id);}}catch(error){if(isMountedRef.current){console.warn(\"Failed to fetch route with stops for \".concat(route.id,\":\"),error);// Handle both old and new data structures\nconst originId=route.originId||route.origin_id;const destId=route.destinationId||route.destination_id;return await fetchRoadRoute(getLocationCoordinates(originId),getLocationCoordinates(destId),route.id);}}finally{if(isMountedRef.current){setLoading(false);}}return null;};// Initialize map\nuseEffect(()=>{isMountedRef.current=true;console.log('RouteMap: Component mounting, initializing map...');if(!mapRef.current)return;// Clean up any existing map instance\ncleanupMap();// Add a small delay to ensure DOM is ready\nconst timeoutId=setTimeout(()=>{if(!isMountedRef.current||!mapRef.current)return;try{// Initialize map with better settings\nconst map=L.map(mapRef.current,{zoomControl:true,scrollWheelZoom:true,doubleClickZoom:true,boxZoom:true,keyboard:true,dragging:true,touchZoom:true,fadeAnimation:false,// Disable animations to prevent position errors\nzoomAnimation:false,markerZoomAnimation:false}).setView([4.2105,101.9758],7);// Center on Malaysia\nif(!isMountedRef.current){map.remove();return;}mapInstanceRef.current=map;// Add tile layer with better styling\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{attribution:'Â© OpenStreetMap contributors | Routing by OSRM',maxZoom:18,minZoom:6}).addTo(map);// Wait for map to be fully loaded\nmap.whenReady(()=>{if(isMountedRef.current){console.log('Map is ready and initialized successfully');setMapReady(true);}else{// Component was unmounted, cleanup\nconsole.log('Component unmounted during map init, cleaning up...');try{map.remove();}catch(e){// Ignore cleanup errors\n}}});// Add error handling for map events\nmap.on('error',error=>{console.warn('Map error:',error);});}catch(error){if(isMountedRef.current){console.error('Error initializing map:',error);}}},100);return()=>{console.log('RouteMap: Component unmounting, cleaning up...');clearTimeout(timeoutId);isMountedRef.current=false;cleanupMap();};},[]);// Only run once on mount\n// Handle route display\nuseEffect(()=>{if(!mapInstanceRef.current||!mapReady||!isMountedRef.current)return;const map=mapInstanceRef.current;// Clear existing layers safely\nsafeMapOperation(()=>{map.eachLayer(layer=>{if(layer instanceof L.Marker||layer instanceof L.Polyline||layer instanceof L.CircleMarker){map.removeLayer(layer);}});return true;});// Handle single route display (when startLocation and endLocation are provided)\nif(startLocation&&endLocation){const displaySingleRoute=async()=>{if(!isMountedRef.current)return;try{setLoading(true);const startCoords=getLocationCoordinates(startLocation);const endCoords=getLocationCoordinates(endLocation);const routeInfo=await fetchRoadRoute(startCoords,endCoords,'single-route');if(!routeInfo||!isMountedRef.current)return;// Add markers with error handling\nsafeMapOperation(()=>{var _locations$find,_locations$find2;const startMarker=L.marker(startCoords,{icon:L.divIcon({className:'custom-route-marker',html:\"<div style=\\\"\\n                  background-color: #3B82F6; \\n                  width: 16px; \\n                  height: 16px; \\n                  border-radius: 50%;\\n                  border: 2px solid white; \\n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\\n                \\\"></div>\",iconSize:[20,20],iconAnchor:[10,10]})}).bindPopup(\"\\n              <div class=\\\"text-sm max-w-xs\\\">\\n                <strong class=\\\"text-base\\\">Start Location</strong><br/>\\n                <span class=\\\"text-gray-600\\\">\".concat(((_locations$find=locations.find(l=>l.id===startLocation))===null||_locations$find===void 0?void 0:_locations$find.city)||'Origin',\"</span>\\n              </div>\\n            \"));const endMarker=L.marker(endCoords,{icon:L.divIcon({className:'custom-route-marker',html:\"<div style=\\\"\\n                  background-color: #EF4444; \\n                  width: 16px; \\n                  height: 16px; \\n                  border-radius: 20%;\\n                  border: 2px solid white; \\n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\\n                  transform: rotate(45deg);\\n                \\\"></div>\",iconSize:[20,20],iconAnchor:[10,10]})}).bindPopup(\"\\n              <div class=\\\"text-sm max-w-xs\\\">\\n                <strong class=\\\"text-base\\\">End Location</strong><br/>\\n                <span class=\\\"text-gray-600\\\">\".concat(((_locations$find2=locations.find(l=>l.id===endLocation))===null||_locations$find2===void 0?void 0:_locations$find2.city)||'Destination',\"</span>\\n                \").concat(routeInfo.distance?\"<br/><span class=\\\"text-gray-500\\\">Distance: \".concat(routeInfo.distance,\" km</span>\"):'',\"\\n                \").concat(routeInfo.duration?\"<br/><span class=\\\"text-gray-500\\\">Duration: \".concat(routeInfo.duration,\" hours</span>\"):'',\"\\n              </div>\\n            \"));// Add route line\nconst routeLine=L.polyline(routeInfo.coordinates,{color:'#3B82F6',weight:4,opacity:0.8});// Add to map\nstartMarker.addTo(map);endMarker.addTo(map);routeLine.addTo(map);// Fit map to route\nconst bounds=L.latLngBounds(routeInfo.coordinates);map.fitBounds(bounds,{padding:[30,30],animate:false});return true;});}catch(error){if(isMountedRef.current){console.error('Error displaying single route:',error);}}finally{if(isMountedRef.current){setLoading(false);}}};displaySingleRoute();return;}// Handle multiple routes display\nif(!routes.length)return;const displayMultipleRoutes=async()=>{if(!isMountedRef.current)return;try{setLoading(true);const bounds=L.latLngBounds();const routeColors=['#3B82F6','#10B981','#F59E0B','#EF4444','#8B5CF6','#06B6D4','#84CC16'];const newRouteData={};// Fetch all routes\nfor(let index=0;index<routes.length;index++){if(!isMountedRef.current)break;const route=routes[index];const color=routeColors[index%routeColors.length];try{// Transform route data to expected format if needed\nconst transformedRoute={id:route.id,name:route.name,originId:route.origin_id,destinationId:route.destination_id,basePrice:route.base_price,distanceKm:route.distance_km||0,durationHours:route.estimated_duration_minutes?route.estimated_duration_minutes/60:0,intermediateStops:[]};const routeInfo=await fetchRouteWithStops(transformedRoute);if(!routeInfo||!isMountedRef.current)continue;newRouteData[route.id]=routeInfo;// Get location details\nconst originLocation=locations.find(loc=>loc.id===route.origin_id);const destLocation=locations.find(loc=>loc.id===route.destination_id);// Create custom icons with route colors\nconst createCustomIcon=function(isOrigin){let size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'medium';const sizes={small:{width:8,height:8,iconSize:[12,12]},medium:{width:12,height:12,iconSize:[16,16]},large:{width:16,height:16,iconSize:[20,20]}};const iconSize=sizes[size];const borderRadius=isOrigin?'50%':'20%';return L.divIcon({className:'custom-route-marker',html:\"<div style=\\\"\\n                  background-color: \".concat(color,\"; \\n                  width: \").concat(iconSize.width,\"px; \\n                  height: \").concat(iconSize.height,\"px; \\n                  border-radius: \").concat(borderRadius,\";\\n                  border: 2px solid white; \\n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\\n                  \").concat(!isOrigin?'transform: rotate(45deg);':'',\"\\n                \\\"></div>\"),iconSize:iconSize.iconSize,iconAnchor:[iconSize.iconSize[0]/2,iconSize.iconSize[1]/2]});};const originCoords=getLocationCoordinates(route.originId);const destCoords=getLocationCoordinates(route.destinationId);// Add markers and routes safely\nsafeMapOperation(()=>{var _route$intermediateSt;// Add origin marker\nconst originMarker=L.marker(originCoords,{icon:createCustomIcon(true,'large'),zIndexOffset:1000}).bindPopup(\"\\n                <div class=\\\"text-sm max-w-xs\\\">\\n                  <strong class=\\\"text-base\\\">\".concat((originLocation===null||originLocation===void 0?void 0:originLocation.city)||'Origin',\"</strong><br/>\\n                  <span class=\\\"text-gray-600\\\">\").concat(route.name,\"</span><br/>\\n                  <span class=\\\"text-gray-500\\\">\").concat((originLocation===null||originLocation===void 0?void 0:originLocation.address)||'',\"</span>\\n                </div>\\n              \"));// Add destination marker\nconst destMarker=L.marker(destCoords,{icon:createCustomIcon(false,'large'),zIndexOffset:1000}).bindPopup(\"\\n                <div class=\\\"text-sm max-w-xs\\\">\\n                  <strong class=\\\"text-base\\\">\".concat((destLocation===null||destLocation===void 0?void 0:destLocation.city)||'Destination',\"</strong><br/>\\n                  <span class=\\\"text-gray-600\\\">\").concat(route.name,\"</span><br/>\\n                  <span class=\\\"text-gray-500\\\">Distance: \").concat(routeInfo.distance||route.distance_km||'N/A',\" km</span><br/>\\n                  <span class=\\\"text-gray-500\\\">Duration: \").concat(routeInfo.duration?routeInfo.duration+' hours':route.estimated_duration_minutes?(route.estimated_duration_minutes/60).toFixed(1)+' hours':'N/A',\"</span><br/>\\n                  <span class=\\\"text-gray-500\\\">Price: RM \").concat(route.base_price||'N/A',\"</span><br/>\\n                  <span class=\\\"text-gray-500\\\">\").concat((destLocation===null||destLocation===void 0?void 0:destLocation.address)||'',\"</span>\\n                </div>\\n              \"));// Add intermediate stop markers\n(_route$intermediateSt=route.intermediateStops)===null||_route$intermediateSt===void 0?void 0:_route$intermediateSt.forEach(stop=>{if(!isMountedRef.current)return;try{const stopLocation=locations.find(loc=>loc.id===stop.locationId);const stopCoords=getLocationCoordinates(stop.locationId);const stopMarker=L.marker(stopCoords,{icon:createCustomIcon(true,'small'),zIndexOffset:500}).bindPopup(\"\\n                    <div class=\\\"text-sm max-w-xs\\\">\\n                      <strong>\".concat((stopLocation===null||stopLocation===void 0?void 0:stopLocation.city)||'Stop',\"</strong><br/>\\n                      <span class=\\\"text-gray-600\\\">Stop \").concat(stop.stopNumber,\"</span><br/>\\n                      <span class=\\\"text-gray-500\\\">+RM \").concat(stop.additionalPrice,\"</span><br/>\\n                      <span class=\\\"text-gray-500\\\">\").concat(Math.floor(stop.arrivalOffset/60),\"h \").concat(stop.arrivalOffset%60,\"m from origin</span>\\n                    </div>\\n                  \"));stopMarker.addTo(map);bounds.extend(stopCoords);}catch(stopError){console.warn('Error adding stop marker:',stopError);}});// Add route line using real road coordinates\nconst routeLine=L.polyline(routeInfo.coordinates,{color:color,weight:4,opacity:0.8,dashArray:route.frequency==='weekend'?'10, 5':null});// Add hover effects\nrouteLine.on('mouseover',function(){if(isMountedRef.current){this.setStyle({weight:6,opacity:1.0});}});routeLine.on('mouseout',function(){if(isMountedRef.current){this.setStyle({weight:4,opacity:0.8});}});// Add to map\noriginMarker.addTo(map);destMarker.addTo(map);routeLine.addTo(map);// Add to bounds\nrouteInfo.coordinates.forEach(point=>bounds.extend(point));return true;});}catch(routeError){console.warn(\"Error processing route \".concat(route.id,\":\"),routeError);}}if(isMountedRef.current){setRouteData(newRouteData);// Fit map to show all routes with padding\nsafeMapOperation(()=>{if(bounds.isValid()){map.fitBounds(bounds,{padding:[30,30],maxZoom:12,animate:false});}return true;});}}catch(error){if(isMountedRef.current){console.error('Error displaying multiple routes:',error);}}finally{if(isMountedRef.current){setLoading(false);}}};displayMultipleRoutes();},[routes,locations,startLocation,endLocation,mapReady,safeMapOperation]);// Cleanup on unmount\nuseEffect(()=>{return()=>{isMountedRef.current=false;cleanupMap();};},[cleanupMap]);return/*#__PURE__*/_jsxs(\"div\",{className:\"relative h-full w-full\",children:[/*#__PURE__*/_jsx(\"div\",{ref:mapRef,className:\"h-full w-full rounded-lg\",style:{zIndex:1}}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-black bg-opacity-20 flex items-center justify-center rounded-lg\",style:{zIndex:1001},children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg p-4 shadow-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-6 h-6 border-2 border-primary-600 border-t-transparent rounded-full animate-spin\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Loading road routes...\"})]})})}),routes.length>0&&!startLocation&&!endLocation&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 max-w-xs\",style:{zIndex:1000},children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-sm mb-3 text-gray-800\",children:\"Active Routes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 max-h-60 overflow-y-auto\",children:routes.slice(0,7).map((route,index)=>{const colors=['#3B82F6','#10B981','#F59E0B','#EF4444','#8B5CF6','#06B6D4','#84CC16'];const color=colors[index%colors.length];// Calculate average occupation for this route\nconst routeTrips=selectedTrips.filter(trip=>trip.routeId===route.id);const avgOccupation=routeTrips.length>0?routeTrips.reduce((sum,trip)=>sum+calculateOccupancyRate(trip),0)/routeTrips.length:0;const routeInfo=routeData[route.id];return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between text-xs py-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center flex-1 min-w-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full mr-2 flex-shrink-0\",style:{backgroundColor:color}}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"truncate text-gray-700\",children:route.name}),routeInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[routeInfo.distance||route.distance_km||'N/A',\" km \\u2022 \",routeInfo.duration||(route.estimated_duration_minutes?(route.estimated_duration_minutes/60).toFixed(1):'N/A'),\"h\"]})]})]}),avgOccupation>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"ml-2 flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-8 bg-gray-200 rounded-full h-1.5 mr-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-1.5 rounded-full transition-all\",style:{width:\"\".concat(Math.min(avgOccupation,100),\"%\"),backgroundColor:avgOccupation>80?'#EF4444':avgOccupation>60?'#F59E0B':'#10B981'}})}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-600 font-medium\",children:[avgOccupation.toFixed(0),\"%\"]})]})]},route.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 pt-2 border-t border-gray-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u25CF Origin\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u25C6 Destination\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Real Roads\"})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-4 left-4 bg-white rounded-lg shadow-lg border border-gray-200\",style:{zIndex:1000},children:/*#__PURE__*/_jsx(\"div\",{className:\"p-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-600 space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-blue-500 rounded-full mr-2\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Regular Service\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-0.5 bg-gray-400 mr-2\",style:{borderTop:'2px dashed'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Weekend Only\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 pt-1 border-t border-gray-200\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500\",children:\"\\uD83D\\uDEE3\\uFE0F Real road routes\"})})]})})}),routes.length===0&&!startLocation&&!endLocation&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center bg-gray-50 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center text-gray-500\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-2\",children:\"\\uD83D\\uDDFA\\uFE0F\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium\",children:\"No routes to display\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs\",children:\"Select routes to view on map\"})]})})]});};export default RouteMap;","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","L","calculateOccupancyRate","jsx","_jsx","jsxs","_jsxs","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","RouteMap","_ref","routes","locations","selectedTrips","startLocation","endLocation","mapRef","mapInstanceRef","isMountedRef","routeData","setRouteData","loading","setLoading","mapReady","setMapReady","getLocationCoordinates","locationId","location","find","loc","id","coordinates","latitude","longitude","parseFloat","safeMapOperation","operation","current","error","console","warn","cleanupMap","stop","eachLayer","layer","removeLayer","e","off","remove","fetchRoadRoute","startCoords","endCoords","routeId","url","concat","response","fetch","data","json","length","geometry","map","coord","distance","toFixed","duration","fetchRouteWithStops","route","originId","origin_id","destId","destinationId","destination_id","originCoords","destCoords","intermediateStops","waypoints","sort","a","b","stopNumber","forEach","stopLocationId","location_id","push","waypointString","join","log","timeoutId","setTimeout","zoomControl","scrollWheelZoom","doubleClickZoom","boxZoom","keyboard","dragging","touchZoom","fadeAnimation","zoomAnimation","markerZoomAnimation","setView","tileLayer","attribution","maxZoom","minZoom","addTo","whenReady","on","clearTimeout","Marker","Polyline","CircleMarker","displaySingleRoute","routeInfo","_locations$find","_locations$find2","startMarker","marker","icon","divIcon","className","html","iconSize","iconAnchor","bindPopup","l","city","endMarker","routeLine","polyline","color","weight","opacity","bounds","latLngBounds","fitBounds","padding","animate","displayMultipleRoutes","routeColors","newRouteData","index","transformedRoute","name","basePrice","base_price","distanceKm","distance_km","durationHours","estimated_duration_minutes","originLocation","destLocation","createCustomIcon","isOrigin","size","arguments","undefined","sizes","small","width","height","medium","large","borderRadius","_route$intermediateSt","originMarker","zIndexOffset","address","destMarker","stopLocation","stopCoords","stopMarker","additionalPrice","Math","floor","arrivalOffset","extend","stopError","dashArray","frequency","setStyle","point","routeError","isValid","children","ref","style","zIndex","slice","colors","routeTrips","filter","trip","avgOccupation","reduce","sum","backgroundColor","min","borderTop"],"sources":["/Users/gohshunda/TWT-Transport-Booking/src/components/admin/RouteMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { calculateOccupancyRate } from '../../services/routeAnalysisApi';\n\n// Fix for default markers in React-Leaflet\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\nconst RouteMap = ({ routes = [], locations = [], selectedTrips = [], startLocation = null, endLocation = null }) => {\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const isMountedRef = useRef(true);\n  const [routeData, setRouteData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [mapReady, setMapReady] = useState(false);\n\n  const getLocationCoordinates = (locationId) => {\n    const location = locations.find(loc => loc.id === locationId);\n    if (location) {\n      // Check if location has coordinates directly\n      if (location.coordinates) {\n        return location.coordinates;\n      }\n      \n      // Check if location has latitude and longitude\n      if (location.latitude && location.longitude) {\n        return [parseFloat(location.latitude), parseFloat(location.longitude)];\n      }\n    }\n    \n    // Default to KL coordinates if location not found or no coordinates\n    return [3.1390, 101.6869];\n  };\n\n  // Safe map operation wrapper\n  const safeMapOperation = useCallback((operation) => {\n    if (!isMountedRef.current || !mapInstanceRef.current || !mapReady) {\n      return false;\n    }\n    \n    try {\n      return operation();\n    } catch (error) {\n      console.warn('Map operation failed:', error);\n      return false;\n    }\n  }, [mapReady]);\n\n  // Cleanup function for map\n  const cleanupMap = useCallback(() => {\n    if (mapInstanceRef.current) {\n      try {\n        // Stop all animations and transitions\n        mapInstanceRef.current.stop();\n        \n        // Remove all layers safely\n        mapInstanceRef.current.eachLayer((layer) => {\n          try {\n            mapInstanceRef.current.removeLayer(layer);\n          } catch (e) {\n            // Ignore cleanup errors\n          }\n        });\n        \n        // Remove map instance\n        mapInstanceRef.current.off(); // Remove all event listeners\n        mapInstanceRef.current.remove();\n      } catch (error) {\n        console.warn('Error during map cleanup:', error);\n      } finally {\n        mapInstanceRef.current = null;\n      }\n    }\n    setMapReady(false);\n  }, []);\n\n  // Fetch actual road route using OpenRouteService or OSRM\n  const fetchRoadRoute = async (startCoords, endCoords, routeId) => {\n    if (!isMountedRef.current) return null;\n    \n    try {\n      // Using OSRM (Open Source Routing Machine) - free and reliable\n      const url = `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`;\n      \n      const response = await fetch(url);\n      if (!isMountedRef.current) return null;\n      \n      const data = await response.json();\n      \n      if (data.routes && data.routes.length > 0) {\n        const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n        const distance = (data.routes[0].distance / 1000).toFixed(1); // Convert to km\n        const duration = (data.routes[0].duration / 3600).toFixed(1); // Convert to hours\n        \n        return {\n          coordinates,\n          distance: parseFloat(distance),\n          duration: parseFloat(duration)\n        };\n      }\n    } catch (error) {\n      if (isMountedRef.current) {\n        console.warn(`Failed to fetch road route for ${routeId}, falling back to straight line:`, error);\n      }\n    }\n    \n    // Fallback to straight line if routing fails\n    return {\n      coordinates: [startCoords, endCoords],\n      distance: null,\n      duration: null\n    };\n  };\n\n  // Fetch road route with intermediate stops\n  const fetchRouteWithStops = async (route) => {\n    if (!isMountedRef.current) return null;\n    \n    try {\n      setLoading(true);\n      \n      // Handle both old and new data structures\n      const originId = route.originId || route.origin_id;\n      const destId = route.destinationId || route.destination_id;\n      \n      const originCoords = getLocationCoordinates(originId);\n      const destCoords = getLocationCoordinates(destId);\n      \n      // If there are intermediate stops, create waypoints\n      if (route.intermediateStops && route.intermediateStops.length > 0) {\n        const waypoints = [originCoords];\n        \n        // Add intermediate stops in order\n        route.intermediateStops\n          .sort((a, b) => a.stopNumber - b.stopNumber)\n          .forEach(stop => {\n            const stopLocationId = stop.locationId || stop.location_id;\n            waypoints.push(getLocationCoordinates(stopLocationId));\n          });\n        \n        waypoints.push(destCoords);\n        \n        // Create waypoint string for OSRM\n        const waypointString = waypoints\n          .map(coord => `${coord[1]},${coord[0]}`)\n          .join(';');\n        \n        const url = `https://router.project-osrm.org/route/v1/driving/${waypointString}?overview=full&geometries=geojson&steps=true`;\n        \n        const response = await fetch(url);\n        if (!isMountedRef.current) return null;\n        \n        const data = await response.json();\n        \n        if (data.routes && data.routes.length > 0) {\n          const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n          const distance = (data.routes[0].distance / 1000).toFixed(1);\n          const duration = (data.routes[0].duration / 3600).toFixed(1);\n          \n          return {\n            coordinates,\n            distance: parseFloat(distance),\n            duration: parseFloat(duration),\n            waypoints\n          };\n        }\n      } else {\n        // Simple route without stops\n        return await fetchRoadRoute(originCoords, destCoords, route.id);\n      }\n    } catch (error) {\n      if (isMountedRef.current) {\n        console.warn(`Failed to fetch route with stops for ${route.id}:`, error);\n        \n        // Handle both old and new data structures\n        const originId = route.originId || route.origin_id;\n        const destId = route.destinationId || route.destination_id;\n        \n        return await fetchRoadRoute(\n          getLocationCoordinates(originId),\n          getLocationCoordinates(destId),\n          route.id\n        );\n      }\n    } finally {\n      if (isMountedRef.current) {\n        setLoading(false);\n      }\n    }\n    return null;\n  };\n\n  // Initialize map\n  useEffect(() => {\n    isMountedRef.current = true;\n    console.log('RouteMap: Component mounting, initializing map...');\n    \n    if (!mapRef.current) return;\n\n    // Clean up any existing map instance\n    cleanupMap();\n\n    // Add a small delay to ensure DOM is ready\n    const timeoutId = setTimeout(() => {\n      if (!isMountedRef.current || !mapRef.current) return;\n      \n      try {\n        // Initialize map with better settings\n        const map = L.map(mapRef.current, {\n          zoomControl: true,\n          scrollWheelZoom: true,\n          doubleClickZoom: true,\n          boxZoom: true,\n          keyboard: true,\n          dragging: true,\n          touchZoom: true,\n          fadeAnimation: false, // Disable animations to prevent position errors\n          zoomAnimation: false,\n          markerZoomAnimation: false,\n        }).setView([4.2105, 101.9758], 7); // Center on Malaysia\n        \n        if (!isMountedRef.current) {\n          map.remove();\n          return;\n        }\n        \n        mapInstanceRef.current = map;\n\n        // Add tile layer with better styling\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: 'Â© OpenStreetMap contributors | Routing by OSRM',\n          maxZoom: 18,\n          minZoom: 6,\n        }).addTo(map);\n\n        // Wait for map to be fully loaded\n        map.whenReady(() => {\n          if (isMountedRef.current) {\n            console.log('Map is ready and initialized successfully');\n            setMapReady(true);\n          } else {\n            // Component was unmounted, cleanup\n            console.log('Component unmounted during map init, cleaning up...');\n            try {\n              map.remove();\n            } catch (e) {\n              // Ignore cleanup errors\n            }\n          }\n        });\n\n        // Add error handling for map events\n        map.on('error', (error) => {\n          console.warn('Map error:', error);\n        });\n\n      } catch (error) {\n        if (isMountedRef.current) {\n          console.error('Error initializing map:', error);\n        }\n      }\n    }, 100);\n\n    return () => {\n      console.log('RouteMap: Component unmounting, cleaning up...');\n      clearTimeout(timeoutId);\n      isMountedRef.current = false;\n      cleanupMap();\n    };\n  }, []); // Only run once on mount\n\n  // Handle route display\n  useEffect(() => {\n    if (!mapInstanceRef.current || !mapReady || !isMountedRef.current) return;\n\n    const map = mapInstanceRef.current;\n\n    // Clear existing layers safely\n    safeMapOperation(() => {\n      map.eachLayer((layer) => {\n        if (layer instanceof L.Marker || layer instanceof L.Polyline || layer instanceof L.CircleMarker) {\n          map.removeLayer(layer);\n        }\n      });\n      return true;\n    });\n\n    // Handle single route display (when startLocation and endLocation are provided)\n    if (startLocation && endLocation) {\n      const displaySingleRoute = async () => {\n        if (!isMountedRef.current) return;\n        \n        try {\n          setLoading(true);\n          \n          const startCoords = getLocationCoordinates(startLocation);\n          const endCoords = getLocationCoordinates(endLocation);\n          \n          const routeInfo = await fetchRoadRoute(startCoords, endCoords, 'single-route');\n          \n          if (!routeInfo || !isMountedRef.current) return;\n          \n          // Add markers with error handling\n          safeMapOperation(() => {\n            const startMarker = L.marker(startCoords, {\n              icon: L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: #3B82F6; \n                  width: 16px; \n                  height: 16px; \n                  border-radius: 50%;\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                \"></div>`,\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              })\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">Start Location</strong><br/>\n                <span class=\"text-gray-600\">${locations.find(l => l.id === startLocation)?.city || 'Origin'}</span>\n              </div>\n            `);\n\n            const endMarker = L.marker(endCoords, {\n              icon: L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: #EF4444; \n                  width: 16px; \n                  height: 16px; \n                  border-radius: 20%;\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                  transform: rotate(45deg);\n                \"></div>`,\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              })\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">End Location</strong><br/>\n                <span class=\"text-gray-600\">${locations.find(l => l.id === endLocation)?.city || 'Destination'}</span>\n                ${routeInfo.distance ? `<br/><span class=\"text-gray-500\">Distance: ${routeInfo.distance} km</span>` : ''}\n                ${routeInfo.duration ? `<br/><span class=\"text-gray-500\">Duration: ${routeInfo.duration} hours</span>` : ''}\n              </div>\n            `);\n\n            // Add route line\n            const routeLine = L.polyline(routeInfo.coordinates, {\n              color: '#3B82F6',\n              weight: 4,\n              opacity: 0.8,\n            });\n\n            // Add to map\n            startMarker.addTo(map);\n            endMarker.addTo(map);\n            routeLine.addTo(map);\n\n            // Fit map to route\n            const bounds = L.latLngBounds(routeInfo.coordinates);\n            map.fitBounds(bounds, { padding: [30, 30], animate: false });\n            \n            return true;\n          });\n          \n        } catch (error) {\n          if (isMountedRef.current) {\n            console.error('Error displaying single route:', error);\n          }\n        } finally {\n          if (isMountedRef.current) {\n            setLoading(false);\n          }\n        }\n      };\n\n      displaySingleRoute();\n      return;\n    }\n\n    // Handle multiple routes display\n    if (!routes.length) return;\n\n    const displayMultipleRoutes = async () => {\n      if (!isMountedRef.current) return;\n      \n      try {\n        setLoading(true);\n        const bounds = L.latLngBounds();\n        const routeColors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n        const newRouteData = {};\n\n        // Fetch all routes\n        for (let index = 0; index < routes.length; index++) {\n          if (!isMountedRef.current) break;\n          \n          const route = routes[index];\n          const color = routeColors[index % routeColors.length];\n          \n          try {\n            // Transform route data to expected format if needed\n            const transformedRoute = {\n              id: route.id,\n              name: route.name,\n              originId: route.origin_id,\n              destinationId: route.destination_id,\n              basePrice: route.base_price,\n              distanceKm: route.distance_km || 0,\n              durationHours: route.estimated_duration_minutes ? route.estimated_duration_minutes / 60 : 0,\n              intermediateStops: []\n            };\n\n            const routeInfo = await fetchRouteWithStops(transformedRoute);\n            if (!routeInfo || !isMountedRef.current) continue;\n            \n            newRouteData[route.id] = routeInfo;\n\n            // Get location details\n            const originLocation = locations.find(loc => loc.id === route.origin_id);\n            const destLocation = locations.find(loc => loc.id === route.destination_id);\n\n            // Create custom icons with route colors\n            const createCustomIcon = (isOrigin, size = 'medium') => {\n              const sizes = {\n                small: { width: 8, height: 8, iconSize: [12, 12] },\n                medium: { width: 12, height: 12, iconSize: [16, 16] },\n                large: { width: 16, height: 16, iconSize: [20, 20] }\n              };\n              \n              const iconSize = sizes[size];\n              const borderRadius = isOrigin ? '50%' : '20%';\n              \n              return L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: ${color}; \n                  width: ${iconSize.width}px; \n                  height: ${iconSize.height}px; \n                  border-radius: ${borderRadius};\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                  ${!isOrigin ? 'transform: rotate(45deg);' : ''}\n                \"></div>`,\n                iconSize: iconSize.iconSize,\n                iconAnchor: [iconSize.iconSize[0]/2, iconSize.iconSize[1]/2]\n              });\n            };\n\n            const originCoords = getLocationCoordinates(route.originId);\n            const destCoords = getLocationCoordinates(route.destinationId);\n\n            // Add markers and routes safely\n            safeMapOperation(() => {\n              // Add origin marker\n              const originMarker = L.marker(originCoords, { \n                icon: createCustomIcon(true, 'large'),\n                zIndexOffset: 1000\n              }).bindPopup(`\n                <div class=\"text-sm max-w-xs\">\n                  <strong class=\"text-base\">${originLocation?.city || 'Origin'}</strong><br/>\n                  <span class=\"text-gray-600\">${route.name}</span><br/>\n                  <span class=\"text-gray-500\">${originLocation?.address || ''}</span>\n                </div>\n              `);\n\n              // Add destination marker\n              const destMarker = L.marker(destCoords, { \n                icon: createCustomIcon(false, 'large'),\n                zIndexOffset: 1000\n              }).bindPopup(`\n                <div class=\"text-sm max-w-xs\">\n                  <strong class=\"text-base\">${destLocation?.city || 'Destination'}</strong><br/>\n                  <span class=\"text-gray-600\">${route.name}</span><br/>\n                  <span class=\"text-gray-500\">Distance: ${routeInfo.distance || route.distance_km || 'N/A'} km</span><br/>\n                  <span class=\"text-gray-500\">Duration: ${routeInfo.duration ? routeInfo.duration + ' hours' : route.estimated_duration_minutes ? (route.estimated_duration_minutes / 60).toFixed(1) + ' hours' : 'N/A'}</span><br/>\n                  <span class=\"text-gray-500\">Price: RM ${route.base_price || 'N/A'}</span><br/>\n                  <span class=\"text-gray-500\">${destLocation?.address || ''}</span>\n                </div>\n              `);\n\n              // Add intermediate stop markers\n              route.intermediateStops?.forEach((stop) => {\n                if (!isMountedRef.current) return;\n                \n                try {\n                  const stopLocation = locations.find(loc => loc.id === stop.locationId);\n                  const stopCoords = getLocationCoordinates(stop.locationId);\n                  \n                  const stopMarker = L.marker(stopCoords, { \n                    icon: createCustomIcon(true, 'small'),\n                    zIndexOffset: 500\n                  }).bindPopup(`\n                    <div class=\"text-sm max-w-xs\">\n                      <strong>${stopLocation?.city || 'Stop'}</strong><br/>\n                      <span class=\"text-gray-600\">Stop ${stop.stopNumber}</span><br/>\n                      <span class=\"text-gray-500\">+RM ${stop.additionalPrice}</span><br/>\n                      <span class=\"text-gray-500\">${Math.floor(stop.arrivalOffset/60)}h ${stop.arrivalOffset%60}m from origin</span>\n                    </div>\n                  `);\n\n                  stopMarker.addTo(map);\n                  bounds.extend(stopCoords);\n                } catch (stopError) {\n                  console.warn('Error adding stop marker:', stopError);\n                }\n              });\n\n              // Add route line using real road coordinates\n              const routeLine = L.polyline(routeInfo.coordinates, {\n                color: color,\n                weight: 4,\n                opacity: 0.8,\n                dashArray: route.frequency === 'weekend' ? '10, 5' : null\n              });\n\n              // Add hover effects\n              routeLine.on('mouseover', function() {\n                if (isMountedRef.current) {\n                  this.setStyle({ weight: 6, opacity: 1.0 });\n                }\n              });\n              \n              routeLine.on('mouseout', function() {\n                if (isMountedRef.current) {\n                  this.setStyle({ weight: 4, opacity: 0.8 });\n                }\n              });\n\n              // Add to map\n              originMarker.addTo(map);\n              destMarker.addTo(map);\n              routeLine.addTo(map);\n\n              // Add to bounds\n              routeInfo.coordinates.forEach(point => bounds.extend(point));\n              \n              return true;\n            });\n          } catch (routeError) {\n            console.warn(`Error processing route ${route.id}:`, routeError);\n          }\n        }\n\n        if (isMountedRef.current) {\n          setRouteData(newRouteData);\n\n          // Fit map to show all routes with padding\n          safeMapOperation(() => {\n            if (bounds.isValid()) {\n              map.fitBounds(bounds, { \n                padding: [30, 30],\n                maxZoom: 12,\n                animate: false\n              });\n            }\n            return true;\n          });\n        }\n      } catch (error) {\n        if (isMountedRef.current) {\n          console.error('Error displaying multiple routes:', error);\n        }\n      } finally {\n        if (isMountedRef.current) {\n          setLoading(false);\n        }\n      }\n    };\n\n    displayMultipleRoutes();\n\n  }, [routes, locations, startLocation, endLocation, mapReady, safeMapOperation]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      isMountedRef.current = false;\n      cleanupMap();\n    };\n  }, [cleanupMap]);\n\n  return (\n    <div className=\"relative h-full w-full\">\n      <div ref={mapRef} className=\"h-full w-full rounded-lg\" style={{ zIndex: 1 }} />\n      \n      {/* Loading indicator */}\n      {loading && (\n        <div className=\"absolute inset-0 bg-black bg-opacity-20 flex items-center justify-center rounded-lg\" style={{ zIndex: 1001 }}>\n          <div className=\"bg-white rounded-lg p-4 shadow-lg\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-6 h-6 border-2 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n              <span className=\"text-sm font-medium\">Loading road routes...</span>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Enhanced Legend with Trip Occupation */}\n      {routes.length > 0 && !startLocation && !endLocation && (\n        <div className=\"absolute top-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 max-w-xs\" style={{ zIndex: 1000 }}>\n          <div className=\"p-4\">\n            <h4 className=\"font-semibold text-sm mb-3 text-gray-800\">Active Routes</h4>\n            <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n              {routes.slice(0, 7).map((route, index) => {\n                const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n                const color = colors[index % colors.length];\n                \n                // Calculate average occupation for this route\n                const routeTrips = selectedTrips.filter(trip => trip.routeId === route.id);\n                const avgOccupation = routeTrips.length > 0 \n                  ? routeTrips.reduce((sum, trip) => sum + calculateOccupancyRate(trip), 0) / routeTrips.length\n                  : 0;\n                \n                const routeInfo = routeData[route.id];\n                \n                return (\n                  <div key={route.id} className=\"flex items-center justify-between text-xs py-1\">\n                    <div className=\"flex items-center flex-1 min-w-0\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2 flex-shrink-0\" \n                        style={{ backgroundColor: color }}\n                      ></div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"truncate text-gray-700\">{route.name}</div>\n                        {routeInfo && (\n                          <div className=\"text-xs text-gray-500\">\n                            {routeInfo.distance || route.distance_km || 'N/A'} km â¢ {routeInfo.duration || (route.estimated_duration_minutes ? (route.estimated_duration_minutes / 60).toFixed(1) : 'N/A')}h\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    {avgOccupation > 0 && (\n                      <div className=\"ml-2 flex items-center\">\n                        <div className=\"w-8 bg-gray-200 rounded-full h-1.5 mr-1\">\n                          <div \n                            className=\"h-1.5 rounded-full transition-all\"\n                            style={{ \n                              width: `${Math.min(avgOccupation, 100)}%`,\n                              backgroundColor: avgOccupation > 80 ? '#EF4444' : avgOccupation > 60 ? '#F59E0B' : '#10B981'\n                            }}\n                          ></div>\n                        </div>\n                        <span className=\"text-xs text-gray-600 font-medium\">\n                          {avgOccupation.toFixed(0)}%\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n            \n            {/* Legend explanation */}\n            <div className=\"mt-3 pt-2 border-t border-gray-100\">\n              <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                <span>â Origin</span>\n                <span>â Destination</span>\n                <span>Real Roads</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Map Controls */}\n      <div className=\"absolute bottom-4 left-4 bg-white rounded-lg shadow-lg border border-gray-200\" style={{ zIndex: 1000 }}>\n        <div className=\"p-3\">\n          <div className=\"text-xs text-gray-600 space-y-1\">\n            <div className=\"flex items-center\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full mr-2\"></div>\n              <span>Regular Service</span>\n            </div>\n            <div className=\"flex items-center\">\n              <div className=\"w-4 h-0.5 bg-gray-400 mr-2\" style={{borderTop: '2px dashed'}}></div>\n              <span>Weekend Only</span>\n            </div>\n            <div className=\"mt-2 pt-1 border-t border-gray-200\">\n              <div className=\"text-xs text-gray-500\">ð£ï¸ Real road routes</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Empty state */}\n      {routes.length === 0 && !startLocation && !endLocation && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50 rounded-lg\">\n          <div className=\"text-center text-gray-500\">\n            <div className=\"mb-2\">ðºï¸</div>\n            <p className=\"text-sm font-medium\">No routes to display</p>\n            <p className=\"text-xs\">Select routes to view on map</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RouteMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}