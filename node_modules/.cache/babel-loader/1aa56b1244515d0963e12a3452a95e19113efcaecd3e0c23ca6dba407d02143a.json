{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Helper function to make API calls with authentication\nconst apiCall = async (endpoint, options = {}) => {\n  const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n  const url = `${baseUrl}${endpoint}`;\n  const defaultOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n    }\n  };\n  const fetchOptions = {\n    ...defaultOptions,\n    ...options\n  };\n  try {\n    console.log(`API Call: ${fetchOptions.method} ${url}`);\n    const response = await fetch(url, fetchOptions);\n\n    // 检查响应状态\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API call failed:', errorText);\n\n      // 尝试解析错误信息\n      let errorMessage = `HTTP error! status: ${response.status}`;\n      try {\n        const errorJson = JSON.parse(errorText);\n        if (errorJson.message || errorJson.error) {\n          errorMessage = errorJson.message || errorJson.error;\n        }\n      } catch (e) {\n        // 如果不是JSON格式，使用原始错误文本\n        if (errorText) errorMessage = errorText;\n      }\n      throw new Error(errorMessage);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('API call failed:', error);\n    throw error;\n  }\n};\n\n// ==================== DASHBOARD STATISTICS ====================\n\nexport const getDashboardStats = async () => {\n  return await apiCall('/admin/stats/overview');\n};\nexport const getAnalyticsData = async () => {\n  return await apiCall('/admin/stats/analytics');\n};\n\n// ==================== VEHICLE MANAGEMENT ====================\n\nexport const getVehicles = async () => {\n  return await apiCall('/admin/vehicles');\n};\nexport const addVehicle = async vehicleData => {\n  return await apiCall('/admin/vehicles', {\n    method: 'POST',\n    body: JSON.stringify(vehicleData)\n  });\n};\nexport const updateVehicle = async (vehicleId, updateData) => {\n  return await apiCall(`/admin/vehicles/${vehicleId}`, {\n    method: 'PUT',\n    body: JSON.stringify(updateData)\n  });\n};\nexport const deleteVehicle = async vehicleId => {\n  return await apiCall(`/admin/vehicles/${vehicleId}`, {\n    method: 'DELETE'\n  });\n};\n\n// ==================== ROUTE MANAGEMENT ====================\n\nexport const getRoutes = async () => {\n  return await apiCall('/admin/routes');\n};\nexport const getLocationsForRoutes = async () => {\n  return await apiCall('/admin/locations');\n};\nexport const createRoute = async routeData => {\n  return await apiCall('/admin/routes', {\n    method: 'POST',\n    body: JSON.stringify(routeData)\n  });\n};\nexport const getRouteStops = async routeId => {\n  return await apiCall(`/admin/routes/${routeId}/stops`);\n};\nexport const getRoutePerformance = async () => {\n  return await apiCall('/admin/analytics/routes');\n};\n\n// ==================== SCHEDULE MANAGEMENT ====================\n\nexport const getTodaysSchedule = async () => {\n  return await apiCall('/admin/schedules/today');\n};\nexport const getSchedules = async (startDate, endDate) => {\n  const params = new URLSearchParams();\n  if (startDate) params.append('startDate', startDate);\n  if (endDate) params.append('endDate', endDate);\n  return await apiCall(`/admin/schedules?${params.toString()}`);\n};\nexport const getTripDetails = async tripId => {\n  try {\n    console.log('Getting trip details for ID:', tripId);\n    const response = await apiCall(`/admin/trips/${tripId}`);\n    return response;\n  } catch (error) {\n    console.error('Error getting trip details:', error);\n    return {\n      success: false,\n      message: error.message || 'Failed to get trip details',\n      // 返回一个空的数据结构，避免前端出现undefined错误\n      data: {\n        id: tripId,\n        route_name: 'Unknown Route',\n        trip_number: 'Unknown',\n        status: 'unknown',\n        origin_name: 'Unknown',\n        destination_name: 'Unknown',\n        origin_city: '',\n        destination_city: '',\n        base_price: 0,\n        total_seats: 0,\n        available_seats: 0,\n        occupied_seats: 0,\n        occupancy_percentage: 0,\n        departure_datetime: new Date().toISOString(),\n        estimated_arrival_datetime: new Date().toISOString(),\n        vehicle_model: 'Unknown',\n        vehicle_number: 'Unknown',\n        license_plate: 'Unknown',\n        vehicle_type: 'Unknown',\n        stops: [],\n        seat_pricing: [],\n        pricing_rules: []\n      }\n    };\n  }\n};\nexport const createSchedule = async scheduleData => {\n  try {\n    console.log('Creating schedule with data:', scheduleData);\n    const response = await apiCall('/admin/schedules', {\n      method: 'POST',\n      body: JSON.stringify(scheduleData)\n    });\n    return response;\n  } catch (error) {\n    console.error('Error creating schedule:', error);\n    return {\n      success: false,\n      message: error.message || 'Failed to create schedule'\n    };\n  }\n};\n\n// ==================== CUSTOMER SERVICE ====================\n\nexport const searchTrips = async searchParams => {\n  // 在实际应用中，这应该是一个API调用\n  // 目前我们返回模拟数据\n  return {\n    success: true,\n    data: [{\n      id: '101',\n      routeName: `${searchParams.from} - ${searchParams.to} Express`,\n      originName: searchParams.from,\n      destinationName: searchParams.to,\n      departureTime: '08:00',\n      arrivalTime: '10:30',\n      duration: '2h 30m',\n      price: 35.50,\n      availableSeats: 32\n    }, {\n      id: '102',\n      routeName: `${searchParams.from} - ${searchParams.to} Direct`,\n      originName: searchParams.from,\n      destinationName: searchParams.to,\n      departureTime: '10:00',\n      arrivalTime: '12:30',\n      duration: '2h 30m',\n      price: 32.00,\n      availableSeats: 25\n    }, {\n      id: '103',\n      routeName: `${searchParams.from} - ${searchParams.to} VIP`,\n      originName: searchParams.from,\n      destinationName: searchParams.to,\n      departureTime: '12:00',\n      arrivalTime: '14:15',\n      duration: '2h 15m',\n      price: 45.00,\n      availableSeats: 18\n    }]\n  };\n};\n\n// ==================== BOOKING MANAGEMENT ====================\n\nexport const createBooking = async bookingData => {\n  return await apiCall('/bookings', {\n    method: 'POST',\n    body: JSON.stringify(bookingData)\n  });\n};\nexport const getBookingDetails = async bookingId => {\n  return await apiCall(`/bookings/${bookingId}`);\n};\nexport const updateBooking = async (bookingId, updateData) => {\n  return await apiCall(`/bookings/${bookingId}`, {\n    method: 'PUT',\n    body: JSON.stringify(updateData)\n  });\n};\n\n// ==================== LOCATIONS ====================\n\nexport const getLocations = async () => {\n  return await apiCall('/locations');\n};\n\n// ==================== ANALYTICS ====================\n\nexport const getRouteAnalytics = async () => {\n  return await apiCall('/admin/analytics/routes');\n};\nexport const getRevenueAnalytics = async (period = '30') => {\n  return await apiCall(`/admin/analytics/revenue?period=${period}`);\n};\nexport const getOccupancyAnalytics = async (period = '30') => {\n  return await apiCall(`/admin/analytics/occupancy?period=${period}`);\n};\n\n// ==================== UTILITY FUNCTIONS ====================\n\nexport const addMoreTrips = async () => {\n  return await apiCall('/admin/add-more-trips', {\n    method: 'POST'\n  });\n};\n\n// Format currency for display\nexport const formatCurrency = amount => {\n  return new Intl.NumberFormat('en-MY', {\n    style: 'currency',\n    currency: 'MYR'\n  }).format(amount);\n};\n\n// Format date for display\nexport const formatDate = dateString => {\n  return new Date(dateString).toLocaleDateString('en-MY', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n\n// Format time for display\nexport const formatTime = dateString => {\n  return new Date(dateString).toLocaleTimeString('en-MY', {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\n// Calculate occupancy percentage\nexport const calculateOccupancy = (occupiedSeats, totalSeats) => {\n  if (totalSeats === 0) return 0;\n  return Math.round(occupiedSeats / totalSeats * 100);\n};\n\n// Get occupancy color class based on percentage\nexport const getOccupancyColorClass = percentage => {\n  if (percentage >= 80) return 'text-red-600 bg-red-100';\n  if (percentage >= 60) return 'text-yellow-600 bg-yellow-100';\n  if (percentage >= 40) return 'text-blue-600 bg-blue-100';\n  return 'text-green-600 bg-green-100';\n};\n\n// Error handler for API calls\nexport const handleApiError = error => {\n  console.error('API Error:', error);\n  if (error.message.includes('401')) {\n    // Unauthorized - redirect to login\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n    return 'Authentication failed. Please log in again.';\n  }\n  if (error.message.includes('403')) {\n    return 'Access denied. You do not have permission to perform this action.';\n  }\n  if (error.message.includes('404')) {\n    return 'Resource not found.';\n  }\n  if (error.message.includes('500')) {\n    return 'Server error. Please try again later.';\n  }\n  return 'An unexpected error occurred. Please try again.';\n};\n\n// 站点管理API\nexport const getAllLocations = async () => {\n  return await apiCall('/admin/locations');\n};\nexport const getLocationById = async locationId => {\n  return await apiCall(`/admin/locations/${locationId}`);\n};\nexport const createLocation = async locationData => {\n  return await apiCall('/admin/locations', {\n    method: 'POST',\n    body: JSON.stringify(locationData)\n  });\n};\nexport const updateLocation = async (locationId, locationData) => {\n  return await apiCall(`/admin/locations/${locationId}`, {\n    method: 'PUT',\n    body: JSON.stringify(locationData)\n  });\n};\nexport const deleteLocation = async locationId => {\n  return await apiCall(`/admin/locations/${locationId}`, {\n    method: 'DELETE'\n  });\n};\n\n// 路线管理API\nexport const getAllRoutes = async () => {\n  return await apiCall('/admin/routes');\n};\nexport const getRouteById = async routeId => {\n  return await apiCall(`/admin/routes/${routeId}`);\n};\nexport const updateRoute = async (routeId, routeData) => {\n  return await apiCall(`/admin/routes/${routeId}`, {\n    method: 'PUT',\n    body: JSON.stringify(routeData)\n  });\n};\nexport const deleteRoute = async routeId => {\n  return await apiCall(`/admin/routes/${routeId}`, {\n    method: 'DELETE'\n  });\n};\n\n// 获取热门行程\nexport const getPopularTrips = async () => {\n  // 在实际应用中，这应该是一个API调用\n  // 目前我们返回模拟数据\n  return {\n    success: true,\n    data: [{\n      id: '1',\n      routeName: 'KL - Johor Bahru Express',\n      originName: 'Kuala Lumpur',\n      destinationName: 'Johor Bahru',\n      avgRating: 4.8,\n      bookingsCount: 1243,\n      price: 35.50\n    }, {\n      id: '2',\n      routeName: 'KL - Penang Highway',\n      originName: 'Kuala Lumpur',\n      destinationName: 'Penang',\n      avgRating: 4.6,\n      bookingsCount: 987,\n      price: 45.00\n    }, {\n      id: '3',\n      routeName: 'KL - Malacca Direct',\n      originName: 'Kuala Lumpur',\n      destinationName: 'Malacca',\n      avgRating: 4.7,\n      bookingsCount: 856,\n      price: 25.00\n    }, {\n      id: '4',\n      routeName: 'Genting - KL Express',\n      originName: 'Genting Highlands',\n      destinationName: 'Kuala Lumpur',\n      avgRating: 4.5,\n      bookingsCount: 723,\n      price: 30.00\n    }, {\n      id: '5',\n      routeName: 'Penang - Ipoh Direct',\n      originName: 'Penang',\n      destinationName: 'Ipoh',\n      avgRating: 4.4,\n      bookingsCount: 542,\n      price: 22.50\n    }]\n  };\n};\nexport default {\n  getDashboardStats,\n  getAnalyticsData,\n  getVehicles,\n  addVehicle,\n  updateVehicle,\n  deleteVehicle,\n  getRoutes,\n  getLocationsForRoutes,\n  createRoute,\n  getRouteStops,\n  getRoutePerformance,\n  getTodaysSchedule,\n  getSchedules,\n  getTripDetails,\n  createSchedule,\n  searchTrips,\n  createBooking,\n  getBookingDetails,\n  updateBooking,\n  getLocations,\n  getRouteAnalytics,\n  getRevenueAnalytics,\n  getOccupancyAnalytics,\n  addMoreTrips,\n  formatCurrency,\n  formatDate,\n  formatTime,\n  calculateOccupancy,\n  getOccupancyColorClass,\n  handleApiError,\n  getAllLocations,\n  getLocationById,\n  createLocation,\n  updateLocation,\n  deleteLocation,\n  getAllRoutes,\n  getRouteById,\n  updateRoute,\n  deleteRoute,\n  getPopularTrips,\n  getAllVehicles: getVehicles,\n  createVehicle: addVehicle\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiCall","endpoint","options","baseUrl","url","defaultOptions","method","headers","localStorage","getItem","fetchOptions","console","log","response","fetch","ok","errorText","text","error","errorMessage","status","errorJson","JSON","parse","message","e","Error","data","json","getDashboardStats","getAnalyticsData","getVehicles","addVehicle","vehicleData","body","stringify","updateVehicle","vehicleId","updateData","deleteVehicle","getRoutes","getLocationsForRoutes","createRoute","routeData","getRouteStops","routeId","getRoutePerformance","getTodaysSchedule","getSchedules","startDate","endDate","params","URLSearchParams","append","toString","getTripDetails","tripId","success","id","route_name","trip_number","origin_name","destination_name","origin_city","destination_city","base_price","total_seats","available_seats","occupied_seats","occupancy_percentage","departure_datetime","Date","toISOString","estimated_arrival_datetime","vehicle_model","vehicle_number","license_plate","vehicle_type","stops","seat_pricing","pricing_rules","createSchedule","scheduleData","searchTrips","searchParams","routeName","from","to","originName","destinationName","departureTime","arrivalTime","duration","price","availableSeats","createBooking","bookingData","getBookingDetails","bookingId","updateBooking","getLocations","getRouteAnalytics","getRevenueAnalytics","period","getOccupancyAnalytics","addMoreTrips","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","toLocaleDateString","year","month","day","formatTime","toLocaleTimeString","hour","minute","calculateOccupancy","occupiedSeats","totalSeats","Math","round","getOccupancyColorClass","percentage","handleApiError","includes","removeItem","window","location","href","getAllLocations","getLocationById","locationId","createLocation","locationData","updateLocation","deleteLocation","getAllRoutes","getRouteById","updateRoute","deleteRoute","getPopularTrips","avgRating","bookingsCount","getAllVehicles","createVehicle"],"sources":["/Users/gohshunda/TWT-Transport-Booking/src/services/adminApi.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Helper function to make API calls with authentication\nconst apiCall = async (endpoint, options = {}) => {\n  const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n  const url = `${baseUrl}${endpoint}`;\n  \n  const defaultOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n    }\n  };\n  \n  const fetchOptions = {\n    ...defaultOptions,\n    ...options,\n  };\n  \n  try {\n    console.log(`API Call: ${fetchOptions.method} ${url}`);\n    const response = await fetch(url, fetchOptions);\n    \n    // 检查响应状态\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API call failed:', errorText);\n      \n      // 尝试解析错误信息\n      let errorMessage = `HTTP error! status: ${response.status}`;\n      try {\n        const errorJson = JSON.parse(errorText);\n        if (errorJson.message || errorJson.error) {\n          errorMessage = errorJson.message || errorJson.error;\n        }\n      } catch (e) {\n        // 如果不是JSON格式，使用原始错误文本\n        if (errorText) errorMessage = errorText;\n      }\n      \n      throw new Error(errorMessage);\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('API call failed:', error);\n    throw error;\n  }\n};\n\n// ==================== DASHBOARD STATISTICS ====================\n\nexport const getDashboardStats = async () => {\n  return await apiCall('/admin/stats/overview');\n};\n\nexport const getAnalyticsData = async () => {\n  return await apiCall('/admin/stats/analytics');\n};\n\n// ==================== VEHICLE MANAGEMENT ====================\n\nexport const getVehicles = async () => {\n  return await apiCall('/admin/vehicles');\n};\n\nexport const addVehicle = async (vehicleData) => {\n  return await apiCall('/admin/vehicles', {\n    method: 'POST',\n    body: JSON.stringify(vehicleData),\n  });\n};\n\nexport const updateVehicle = async (vehicleId, updateData) => {\n  return await apiCall(`/admin/vehicles/${vehicleId}`, {\n    method: 'PUT',\n    body: JSON.stringify(updateData),\n  });\n};\n\nexport const deleteVehicle = async (vehicleId) => {\n  return await apiCall(`/admin/vehicles/${vehicleId}`, {\n    method: 'DELETE',\n  });\n};\n\n// ==================== ROUTE MANAGEMENT ====================\n\nexport const getRoutes = async () => {\n  return await apiCall('/admin/routes');\n};\n\nexport const getLocationsForRoutes = async () => {\n  return await apiCall('/admin/locations');\n};\n\nexport const createRoute = async (routeData) => {\n  return await apiCall('/admin/routes', {\n    method: 'POST',\n    body: JSON.stringify(routeData),\n  });\n};\n\nexport const getRouteStops = async (routeId) => {\n  return await apiCall(`/admin/routes/${routeId}/stops`);\n};\n\nexport const getRoutePerformance = async () => {\n  return await apiCall('/admin/analytics/routes');\n};\n\n// ==================== SCHEDULE MANAGEMENT ====================\n\nexport const getTodaysSchedule = async () => {\n  return await apiCall('/admin/schedules/today');\n};\n\nexport const getSchedules = async (startDate, endDate) => {\n  const params = new URLSearchParams();\n  if (startDate) params.append('startDate', startDate);\n  if (endDate) params.append('endDate', endDate);\n  \n  return await apiCall(`/admin/schedules?${params.toString()}`);\n};\n\nexport const getTripDetails = async (tripId) => {\n  try {\n    console.log('Getting trip details for ID:', tripId);\n    const response = await apiCall(`/admin/trips/${tripId}`);\n    return response;\n  } catch (error) {\n    console.error('Error getting trip details:', error);\n    return {\n      success: false,\n      message: error.message || 'Failed to get trip details',\n      // 返回一个空的数据结构，避免前端出现undefined错误\n      data: {\n        id: tripId,\n        route_name: 'Unknown Route',\n        trip_number: 'Unknown',\n        status: 'unknown',\n        origin_name: 'Unknown',\n        destination_name: 'Unknown',\n        origin_city: '',\n        destination_city: '',\n        base_price: 0,\n        total_seats: 0,\n        available_seats: 0,\n        occupied_seats: 0,\n        occupancy_percentage: 0,\n        departure_datetime: new Date().toISOString(),\n        estimated_arrival_datetime: new Date().toISOString(),\n        vehicle_model: 'Unknown',\n        vehicle_number: 'Unknown',\n        license_plate: 'Unknown',\n        vehicle_type: 'Unknown',\n        stops: [],\n        seat_pricing: [],\n        pricing_rules: []\n      }\n    };\n  }\n};\n\nexport const createSchedule = async (scheduleData) => {\n  try {\n    console.log('Creating schedule with data:', scheduleData);\n    const response = await apiCall('/admin/schedules', {\n      method: 'POST',\n      body: JSON.stringify(scheduleData),\n    });\n    return response;\n  } catch (error) {\n    console.error('Error creating schedule:', error);\n    return {\n      success: false,\n      message: error.message || 'Failed to create schedule'\n    };\n  }\n};\n\n// ==================== CUSTOMER SERVICE ====================\n\nexport const searchTrips = async (searchParams) => {\n  // 在实际应用中，这应该是一个API调用\n  // 目前我们返回模拟数据\n  return {\n    success: true,\n    data: [\n      {\n        id: '101',\n        routeName: `${searchParams.from} - ${searchParams.to} Express`,\n        originName: searchParams.from,\n        destinationName: searchParams.to,\n        departureTime: '08:00',\n        arrivalTime: '10:30',\n        duration: '2h 30m',\n        price: 35.50,\n        availableSeats: 32\n      },\n      {\n        id: '102',\n        routeName: `${searchParams.from} - ${searchParams.to} Direct`,\n        originName: searchParams.from,\n        destinationName: searchParams.to,\n        departureTime: '10:00',\n        arrivalTime: '12:30',\n        duration: '2h 30m',\n        price: 32.00,\n        availableSeats: 25\n      },\n      {\n        id: '103',\n        routeName: `${searchParams.from} - ${searchParams.to} VIP`,\n        originName: searchParams.from,\n        destinationName: searchParams.to,\n        departureTime: '12:00',\n        arrivalTime: '14:15',\n        duration: '2h 15m',\n        price: 45.00,\n        availableSeats: 18\n      }\n    ]\n  };\n};\n\n// ==================== BOOKING MANAGEMENT ====================\n\nexport const createBooking = async (bookingData) => {\n  return await apiCall('/bookings', {\n    method: 'POST',\n    body: JSON.stringify(bookingData),\n  });\n};\n\nexport const getBookingDetails = async (bookingId) => {\n  return await apiCall(`/bookings/${bookingId}`);\n};\n\nexport const updateBooking = async (bookingId, updateData) => {\n  return await apiCall(`/bookings/${bookingId}`, {\n    method: 'PUT',\n    body: JSON.stringify(updateData),\n  });\n};\n\n// ==================== LOCATIONS ====================\n\nexport const getLocations = async () => {\n  return await apiCall('/locations');\n};\n\n// ==================== ANALYTICS ====================\n\nexport const getRouteAnalytics = async () => {\n  return await apiCall('/admin/analytics/routes');\n};\n\nexport const getRevenueAnalytics = async (period = '30') => {\n  return await apiCall(`/admin/analytics/revenue?period=${period}`);\n};\n\nexport const getOccupancyAnalytics = async (period = '30') => {\n  return await apiCall(`/admin/analytics/occupancy?period=${period}`);\n};\n\n// ==================== UTILITY FUNCTIONS ====================\n\nexport const addMoreTrips = async () => {\n  return await apiCall('/admin/add-more-trips', {\n    method: 'POST',\n  });\n};\n\n// Format currency for display\nexport const formatCurrency = (amount) => {\n  return new Intl.NumberFormat('en-MY', {\n    style: 'currency',\n    currency: 'MYR',\n  }).format(amount);\n};\n\n// Format date for display\nexport const formatDate = (dateString) => {\n  return new Date(dateString).toLocaleDateString('en-MY', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n};\n\n// Format time for display\nexport const formatTime = (dateString) => {\n  return new Date(dateString).toLocaleTimeString('en-MY', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n};\n\n// Calculate occupancy percentage\nexport const calculateOccupancy = (occupiedSeats, totalSeats) => {\n  if (totalSeats === 0) return 0;\n  return Math.round((occupiedSeats / totalSeats) * 100);\n};\n\n// Get occupancy color class based on percentage\nexport const getOccupancyColorClass = (percentage) => {\n  if (percentage >= 80) return 'text-red-600 bg-red-100';\n  if (percentage >= 60) return 'text-yellow-600 bg-yellow-100';\n  if (percentage >= 40) return 'text-blue-600 bg-blue-100';\n  return 'text-green-600 bg-green-100';\n};\n\n// Error handler for API calls\nexport const handleApiError = (error) => {\n  console.error('API Error:', error);\n  \n  if (error.message.includes('401')) {\n    // Unauthorized - redirect to login\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n    return 'Authentication failed. Please log in again.';\n  }\n  \n  if (error.message.includes('403')) {\n    return 'Access denied. You do not have permission to perform this action.';\n  }\n  \n  if (error.message.includes('404')) {\n    return 'Resource not found.';\n  }\n  \n  if (error.message.includes('500')) {\n    return 'Server error. Please try again later.';\n  }\n  \n  return 'An unexpected error occurred. Please try again.';\n};\n\n// 站点管理API\nexport const getAllLocations = async () => {\n  return await apiCall('/admin/locations');\n};\n\nexport const getLocationById = async (locationId) => {\n  return await apiCall(`/admin/locations/${locationId}`);\n};\n\nexport const createLocation = async (locationData) => {\n  return await apiCall('/admin/locations', {\n    method: 'POST',\n    body: JSON.stringify(locationData),\n  });\n};\n\nexport const updateLocation = async (locationId, locationData) => {\n  return await apiCall(`/admin/locations/${locationId}`, {\n    method: 'PUT',\n    body: JSON.stringify(locationData),\n  });\n};\n\nexport const deleteLocation = async (locationId) => {\n  return await apiCall(`/admin/locations/${locationId}`, {\n    method: 'DELETE',\n  });\n};\n\n// 路线管理API\nexport const getAllRoutes = async () => {\n  return await apiCall('/admin/routes');\n};\n\nexport const getRouteById = async (routeId) => {\n  return await apiCall(`/admin/routes/${routeId}`);\n};\n\nexport const updateRoute = async (routeId, routeData) => {\n  return await apiCall(`/admin/routes/${routeId}`, {\n    method: 'PUT',\n    body: JSON.stringify(routeData),\n  });\n};\n\nexport const deleteRoute = async (routeId) => {\n  return await apiCall(`/admin/routes/${routeId}`, {\n    method: 'DELETE',\n  });\n};\n\n// 获取热门行程\nexport const getPopularTrips = async () => {\n  // 在实际应用中，这应该是一个API调用\n  // 目前我们返回模拟数据\n  return {\n    success: true,\n    data: [\n      {\n        id: '1',\n        routeName: 'KL - Johor Bahru Express',\n        originName: 'Kuala Lumpur',\n        destinationName: 'Johor Bahru',\n        avgRating: 4.8,\n        bookingsCount: 1243,\n        price: 35.50\n      },\n      {\n        id: '2',\n        routeName: 'KL - Penang Highway',\n        originName: 'Kuala Lumpur',\n        destinationName: 'Penang',\n        avgRating: 4.6,\n        bookingsCount: 987,\n        price: 45.00\n      },\n      {\n        id: '3',\n        routeName: 'KL - Malacca Direct',\n        originName: 'Kuala Lumpur',\n        destinationName: 'Malacca',\n        avgRating: 4.7,\n        bookingsCount: 856,\n        price: 25.00\n      },\n      {\n        id: '4',\n        routeName: 'Genting - KL Express',\n        originName: 'Genting Highlands',\n        destinationName: 'Kuala Lumpur',\n        avgRating: 4.5,\n        bookingsCount: 723,\n        price: 30.00\n      },\n      {\n        id: '5',\n        routeName: 'Penang - Ipoh Direct',\n        originName: 'Penang',\n        destinationName: 'Ipoh',\n        avgRating: 4.4,\n        bookingsCount: 542,\n        price: 22.50\n      }\n    ]\n  };\n};\n\nexport default {\n  getDashboardStats,\n  getAnalyticsData,\n  getVehicles,\n  addVehicle,\n  updateVehicle,\n  deleteVehicle,\n  getRoutes,\n  getLocationsForRoutes,\n  createRoute,\n  getRouteStops,\n  getRoutePerformance,\n  getTodaysSchedule,\n  getSchedules,\n  getTripDetails,\n  createSchedule,\n  searchTrips,\n  createBooking,\n  getBookingDetails,\n  updateBooking,\n  getLocations,\n  getRouteAnalytics,\n  getRevenueAnalytics,\n  getOccupancyAnalytics,\n  addMoreTrips,\n  formatCurrency,\n  formatDate,\n  formatTime,\n  calculateOccupancy,\n  getOccupancyColorClass,\n  handleApiError,\n  getAllLocations,\n  getLocationById,\n  createLocation,\n  updateLocation,\n  deleteLocation,\n  getAllRoutes,\n  getRouteById,\n  updateRoute,\n  deleteRoute,\n  getPopularTrips,\n  getAllVehicles: getVehicles,\n  createVehicle: addVehicle\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}