{"ast":null,"code":"import api from './api';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Helper function to make API calls with authentication\nconst apiCall = async (endpoint, options = {}) => {\n  const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n  const url = `${baseUrl}${endpoint}`;\n  const defaultOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n    }\n  };\n  const fetchOptions = {\n    ...defaultOptions,\n    ...options\n  };\n  try {\n    console.log(`API Call: ${fetchOptions.method} ${url}`);\n    const response = await fetch(url, fetchOptions);\n\n    // 检查响应状态\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API call failed:', errorText);\n\n      // 尝试解析错误信息\n      let errorMessage = `HTTP error! status: ${response.status}`;\n      try {\n        const errorJson = JSON.parse(errorText);\n        if (errorJson.message || errorJson.error) {\n          errorMessage = errorJson.message || errorJson.error;\n        }\n      } catch (e) {\n        // 如果不是JSON格式，使用原始错误文本\n        if (errorText) errorMessage = errorText;\n      }\n      throw new Error(errorMessage);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('API call failed:', error);\n    throw error;\n  }\n};\n\n// ==================== DASHBOARD STATISTICS ====================\n\nexport const getAdminStats = async () => {\n  try {\n    const response = await api.get('/api/admin/stats/overview');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching admin stats:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const getAnalyticsData = async () => {\n  return await apiCall('/admin/stats/analytics');\n};\n\n// ==================== VEHICLE MANAGEMENT ====================\n\nexport const getAllVehicles = async () => {\n  try {\n    const response = await api.get('/api/admin/vehicles');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching vehicles:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const createVehicle = async vehicleData => {\n  try {\n    const response = await api.post('/api/admin/vehicles', vehicleData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating vehicle:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const updateVehicle = async (id, vehicleData) => {\n  try {\n    const response = await api.put(`/api/admin/vehicles/${id}`, vehicleData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating vehicle:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const deleteVehicle = async id => {\n  try {\n    const response = await api.delete(`/api/admin/vehicles/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting vehicle:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// ==================== ROUTE MANAGEMENT ====================\n\nexport const getAllRoutes = async () => {\n  try {\n    const response = await api.get('/api/admin/routes');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching routes:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const getRouteById = async id => {\n  try {\n    const response = await api.get(`/api/admin/routes/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching route ${id}:`, error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const createRoute = async routeData => {\n  try {\n    const response = await api.post('/api/admin/routes', routeData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating route:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const getRouteStops = async routeId => {\n  return await apiCall(`/admin/routes/${routeId}/stops`);\n};\nexport const getRoutePerformance = async () => {\n  return await apiCall('/admin/analytics/routes');\n};\n\n// ==================== SCHEDULE MANAGEMENT ====================\n\nexport const getTodaySchedules = async () => {\n  try {\n    const response = await api.get('/api/admin/schedules/today');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching today schedules:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const getSchedulesByDate = async date => {\n  try {\n    const response = await api.get(`/api/admin/schedules/date/${date}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching schedules for ${date}:`, error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const getSchedulesByDateRange = async (startDate, endDate) => {\n  try {\n    const response = await api.get(`/api/admin/schedules/range/${startDate}/${endDate}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching schedules from ${startDate} to ${endDate}:`, error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const createSchedule = async scheduleData => {\n  try {\n    const response = await api.post('/api/admin/schedules', scheduleData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating schedule:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const updateSchedule = async (id, scheduleData) => {\n  try {\n    const response = await api.put(`/api/admin/schedules/${id}`, scheduleData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating schedule:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const deleteSchedule = async id => {\n  try {\n    const response = await api.delete(`/api/admin/schedules/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting schedule:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// ==================== CUSTOMER SERVICE ====================\n\nexport const searchTrips = async (origin, destination, date) => {\n  try {\n    const response = await api.get(`/api/admin/trips/search?origin=${origin}&destination=${destination}&date=${date}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error searching trips:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// ==================== BOOKING MANAGEMENT ====================\n\nexport const getAllBookings = async (page = 1, limit = 10) => {\n  try {\n    const response = await api.get(`/api/admin/bookings?page=${page}&limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching bookings:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const getBookingById = async id => {\n  try {\n    const response = await api.get(`/api/admin/bookings/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching booking ${id}:`, error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const updateBookingStatus = async (id, status) => {\n  try {\n    const response = await api.patch(`/api/admin/bookings/${id}/status`, {\n      status\n    });\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating booking ${id} status:`, error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const searchBookings = async query => {\n  try {\n    const response = await api.get(`/api/admin/bookings/search?q=${query}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error searching bookings:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// ==================== LOCATIONS ====================\n\nexport const getAllLocations = async () => {\n  try {\n    const response = await api.get('/api/admin/locations');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching locations:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const createLocation = async locationData => {\n  try {\n    const response = await api.post('/api/admin/locations', locationData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating location:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const updateLocation = async (id, locationData) => {\n  try {\n    const response = await api.put(`/api/admin/locations/${id}`, locationData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating location:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const deleteLocation = async id => {\n  try {\n    const response = await api.delete(`/api/admin/locations/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting location:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// ==================== ANALYTICS ====================\n\nexport const getRouteAnalytics = async () => {\n  return await apiCall('/admin/analytics/routes');\n};\nexport const getRevenueAnalytics = async (period = '30') => {\n  return await apiCall(`/admin/analytics/revenue?period=${period}`);\n};\nexport const getOccupancyAnalytics = async (period = '30') => {\n  return await apiCall(`/admin/analytics/occupancy?period=${period}`);\n};\n\n// ==================== UTILITY FUNCTIONS ====================\n\nexport const addMoreTrips = async () => {\n  return await apiCall('/admin/add-more-trips', {\n    method: 'POST'\n  });\n};\n\n// Format currency for display\nexport const formatCurrency = amount => {\n  return new Intl.NumberFormat('en-MY', {\n    style: 'currency',\n    currency: 'MYR'\n  }).format(amount);\n};\n\n// Format date for display\nexport const formatDate = dateString => {\n  return new Date(dateString).toLocaleDateString('en-MY', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n\n// Format time for display\nexport const formatTime = dateString => {\n  return new Date(dateString).toLocaleTimeString('en-MY', {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\n// Calculate occupancy percentage\nexport const calculateOccupancy = (occupiedSeats, totalSeats) => {\n  if (totalSeats === 0) return 0;\n  return Math.round(occupiedSeats / totalSeats * 100);\n};\n\n// Get occupancy color class based on percentage\nexport const getOccupancyColorClass = percentage => {\n  if (percentage >= 80) return 'text-red-600 bg-red-100';\n  if (percentage >= 60) return 'text-yellow-600 bg-yellow-100';\n  if (percentage >= 40) return 'text-blue-600 bg-blue-100';\n  return 'text-green-600 bg-green-100';\n};\n\n// Error handler for API calls\nexport const handleApiError = error => {\n  console.error('API Error:', error);\n  if (error.message.includes('401')) {\n    // Unauthorized - redirect to login\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n    return 'Authentication failed. Please log in again.';\n  }\n  if (error.message.includes('403')) {\n    return 'Access denied. You do not have permission to perform this action.';\n  }\n  if (error.message.includes('404')) {\n    return 'Resource not found.';\n  }\n  if (error.message.includes('500')) {\n    return 'Server error. Please try again later.';\n  }\n  return 'An unexpected error occurred. Please try again.';\n};\n\n// 获取热门行程\nexport const getPopularTrips = async (limit = 5) => {\n  try {\n    const response = await api.get(`/api/admin/trips/popular?limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching popular trips:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport default {\n  getAdminStats,\n  getAnalyticsData,\n  getAllVehicles,\n  createVehicle,\n  updateVehicle,\n  deleteVehicle,\n  getAllRoutes,\n  getRouteById,\n  createRoute,\n  getRouteStops,\n  getRoutePerformance,\n  getTodaySchedules,\n  getSchedulesByDate,\n  getSchedulesByDateRange,\n  createSchedule,\n  updateSchedule,\n  deleteSchedule,\n  searchTrips,\n  getAllBookings,\n  getBookingById,\n  updateBookingStatus,\n  searchBookings,\n  getAllLocations,\n  createLocation,\n  updateLocation,\n  deleteLocation,\n  getRouteAnalytics,\n  getRevenueAnalytics,\n  getOccupancyAnalytics,\n  addMoreTrips,\n  formatCurrency,\n  formatDate,\n  formatTime,\n  calculateOccupancy,\n  getOccupancyColorClass,\n  handleApiError,\n  getPopularTrips\n};","map":{"version":3,"names":["api","API_BASE_URL","process","env","REACT_APP_API_URL","apiCall","endpoint","options","baseUrl","url","defaultOptions","method","headers","localStorage","getItem","fetchOptions","console","log","response","fetch","ok","errorText","text","error","errorMessage","status","errorJson","JSON","parse","message","e","Error","data","json","getAdminStats","get","success","getAnalyticsData","getAllVehicles","createVehicle","vehicleData","post","updateVehicle","id","put","deleteVehicle","delete","getAllRoutes","getRouteById","createRoute","routeData","getRouteStops","routeId","getRoutePerformance","getTodaySchedules","getSchedulesByDate","date","getSchedulesByDateRange","startDate","endDate","createSchedule","scheduleData","updateSchedule","deleteSchedule","searchTrips","origin","destination","getAllBookings","page","limit","getBookingById","updateBookingStatus","patch","searchBookings","query","getAllLocations","createLocation","locationData","updateLocation","deleteLocation","getRouteAnalytics","getRevenueAnalytics","period","getOccupancyAnalytics","addMoreTrips","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","Date","toLocaleDateString","year","month","day","formatTime","toLocaleTimeString","hour","minute","calculateOccupancy","occupiedSeats","totalSeats","Math","round","getOccupancyColorClass","percentage","handleApiError","includes","removeItem","window","location","href","getPopularTrips"],"sources":["/Users/gohshunda/TWT-Transport-Booking/src/services/adminApi.js"],"sourcesContent":["import api from './api';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Helper function to make API calls with authentication\nconst apiCall = async (endpoint, options = {}) => {\n  const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n  const url = `${baseUrl}${endpoint}`;\n  \n  const defaultOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n    }\n  };\n  \n  const fetchOptions = {\n    ...defaultOptions,\n    ...options,\n  };\n  \n  try {\n    console.log(`API Call: ${fetchOptions.method} ${url}`);\n    const response = await fetch(url, fetchOptions);\n    \n    // 检查响应状态\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API call failed:', errorText);\n      \n      // 尝试解析错误信息\n      let errorMessage = `HTTP error! status: ${response.status}`;\n      try {\n        const errorJson = JSON.parse(errorText);\n        if (errorJson.message || errorJson.error) {\n          errorMessage = errorJson.message || errorJson.error;\n        }\n      } catch (e) {\n        // 如果不是JSON格式，使用原始错误文本\n        if (errorText) errorMessage = errorText;\n      }\n      \n      throw new Error(errorMessage);\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('API call failed:', error);\n    throw error;\n  }\n};\n\n// ==================== DASHBOARD STATISTICS ====================\n\nexport const getAdminStats = async () => {\n  try {\n    const response = await api.get('/api/admin/stats/overview');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching admin stats:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const getAnalyticsData = async () => {\n  return await apiCall('/admin/stats/analytics');\n};\n\n// ==================== VEHICLE MANAGEMENT ====================\n\nexport const getAllVehicles = async () => {\n  try {\n    const response = await api.get('/api/admin/vehicles');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching vehicles:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const createVehicle = async (vehicleData) => {\n  try {\n    const response = await api.post('/api/admin/vehicles', vehicleData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating vehicle:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const updateVehicle = async (id, vehicleData) => {\n  try {\n    const response = await api.put(`/api/admin/vehicles/${id}`, vehicleData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating vehicle:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const deleteVehicle = async (id) => {\n  try {\n    const response = await api.delete(`/api/admin/vehicles/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting vehicle:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// ==================== ROUTE MANAGEMENT ====================\n\nexport const getAllRoutes = async () => {\n  try {\n    const response = await api.get('/api/admin/routes');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching routes:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const getRouteById = async (id) => {\n  try {\n    const response = await api.get(`/api/admin/routes/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching route ${id}:`, error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const createRoute = async (routeData) => {\n  try {\n    const response = await api.post('/api/admin/routes', routeData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating route:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const getRouteStops = async (routeId) => {\n  return await apiCall(`/admin/routes/${routeId}/stops`);\n};\n\nexport const getRoutePerformance = async () => {\n  return await apiCall('/admin/analytics/routes');\n};\n\n// ==================== SCHEDULE MANAGEMENT ====================\n\nexport const getTodaySchedules = async () => {\n  try {\n    const response = await api.get('/api/admin/schedules/today');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching today schedules:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const getSchedulesByDate = async (date) => {\n  try {\n    const response = await api.get(`/api/admin/schedules/date/${date}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching schedules for ${date}:`, error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const getSchedulesByDateRange = async (startDate, endDate) => {\n  try {\n    const response = await api.get(`/api/admin/schedules/range/${startDate}/${endDate}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching schedules from ${startDate} to ${endDate}:`, error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const createSchedule = async (scheduleData) => {\n  try {\n    const response = await api.post('/api/admin/schedules', scheduleData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating schedule:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const updateSchedule = async (id, scheduleData) => {\n  try {\n    const response = await api.put(`/api/admin/schedules/${id}`, scheduleData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating schedule:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const deleteSchedule = async (id) => {\n  try {\n    const response = await api.delete(`/api/admin/schedules/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting schedule:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// ==================== CUSTOMER SERVICE ====================\n\nexport const searchTrips = async (origin, destination, date) => {\n  try {\n    const response = await api.get(`/api/admin/trips/search?origin=${origin}&destination=${destination}&date=${date}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error searching trips:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// ==================== BOOKING MANAGEMENT ====================\n\nexport const getAllBookings = async (page = 1, limit = 10) => {\n  try {\n    const response = await api.get(`/api/admin/bookings?page=${page}&limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching bookings:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const getBookingById = async (id) => {\n  try {\n    const response = await api.get(`/api/admin/bookings/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching booking ${id}:`, error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const updateBookingStatus = async (id, status) => {\n  try {\n    const response = await api.patch(`/api/admin/bookings/${id}/status`, { status });\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating booking ${id} status:`, error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const searchBookings = async (query) => {\n  try {\n    const response = await api.get(`/api/admin/bookings/search?q=${query}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error searching bookings:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// ==================== LOCATIONS ====================\n\nexport const getAllLocations = async () => {\n  try {\n    const response = await api.get('/api/admin/locations');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching locations:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const createLocation = async (locationData) => {\n  try {\n    const response = await api.post('/api/admin/locations', locationData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating location:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const updateLocation = async (id, locationData) => {\n  try {\n    const response = await api.put(`/api/admin/locations/${id}`, locationData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating location:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const deleteLocation = async (id) => {\n  try {\n    const response = await api.delete(`/api/admin/locations/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting location:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// ==================== ANALYTICS ====================\n\nexport const getRouteAnalytics = async () => {\n  return await apiCall('/admin/analytics/routes');\n};\n\nexport const getRevenueAnalytics = async (period = '30') => {\n  return await apiCall(`/admin/analytics/revenue?period=${period}`);\n};\n\nexport const getOccupancyAnalytics = async (period = '30') => {\n  return await apiCall(`/admin/analytics/occupancy?period=${period}`);\n};\n\n// ==================== UTILITY FUNCTIONS ====================\n\nexport const addMoreTrips = async () => {\n  return await apiCall('/admin/add-more-trips', {\n    method: 'POST',\n  });\n};\n\n// Format currency for display\nexport const formatCurrency = (amount) => {\n  return new Intl.NumberFormat('en-MY', {\n    style: 'currency',\n    currency: 'MYR',\n  }).format(amount);\n};\n\n// Format date for display\nexport const formatDate = (dateString) => {\n  return new Date(dateString).toLocaleDateString('en-MY', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n};\n\n// Format time for display\nexport const formatTime = (dateString) => {\n  return new Date(dateString).toLocaleTimeString('en-MY', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n};\n\n// Calculate occupancy percentage\nexport const calculateOccupancy = (occupiedSeats, totalSeats) => {\n  if (totalSeats === 0) return 0;\n  return Math.round((occupiedSeats / totalSeats) * 100);\n};\n\n// Get occupancy color class based on percentage\nexport const getOccupancyColorClass = (percentage) => {\n  if (percentage >= 80) return 'text-red-600 bg-red-100';\n  if (percentage >= 60) return 'text-yellow-600 bg-yellow-100';\n  if (percentage >= 40) return 'text-blue-600 bg-blue-100';\n  return 'text-green-600 bg-green-100';\n};\n\n// Error handler for API calls\nexport const handleApiError = (error) => {\n  console.error('API Error:', error);\n  \n  if (error.message.includes('401')) {\n    // Unauthorized - redirect to login\n    localStorage.removeItem('authToken');\n    window.location.href = '/login';\n    return 'Authentication failed. Please log in again.';\n  }\n  \n  if (error.message.includes('403')) {\n    return 'Access denied. You do not have permission to perform this action.';\n  }\n  \n  if (error.message.includes('404')) {\n    return 'Resource not found.';\n  }\n  \n  if (error.message.includes('500')) {\n    return 'Server error. Please try again later.';\n  }\n  \n  return 'An unexpected error occurred. Please try again.';\n};\n\n// 获取热门行程\nexport const getPopularTrips = async (limit = 5) => {\n  try {\n    const response = await api.get(`/api/admin/trips/popular?limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching popular trips:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport default {\n  getAdminStats,\n  getAnalyticsData,\n  getAllVehicles,\n  createVehicle,\n  updateVehicle,\n  deleteVehicle,\n  getAllRoutes,\n  getRouteById,\n  createRoute,\n  getRouteStops,\n  getRoutePerformance,\n  getTodaySchedules,\n  getSchedulesByDate,\n  getSchedulesByDateRange,\n  createSchedule,\n  updateSchedule,\n  deleteSchedule,\n  searchTrips,\n  getAllBookings,\n  getBookingById,\n  updateBookingStatus,\n  searchBookings,\n  getAllLocations,\n  createLocation,\n  updateLocation,\n  deleteLocation,\n  getRouteAnalytics,\n  getRevenueAnalytics,\n  getOccupancyAnalytics,\n  addMoreTrips,\n  formatCurrency,\n  formatDate,\n  formatTime,\n  calculateOccupancy,\n  getOccupancyColorClass,\n  handleApiError,\n  getPopularTrips\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}