{"ast":null,"code":"var _jsxFileName = \"/Users/gohshunda/TWT-Transport-Booking/src/components/admin/RouteMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { calculateOccupancyRate } from '../../data/mockData';\n\n// Fix for default markers in React-Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst RouteMap = ({\n  routes = [],\n  locations = [],\n  selectedTrips = [],\n  startLocation = null,\n  endLocation = null\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const isMountedRef = useRef(true);\n  const [routeData, setRouteData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [mapReady, setMapReady] = useState(false);\n  const getLocationCoordinates = locationId => {\n    const location = locations.find(loc => loc.id === locationId);\n    return location ? location.coordinates : [3.1390, 101.6869]; // Default to KL\n  };\n\n  // Safe map operation wrapper\n  const safeMapOperation = useCallback(operation => {\n    if (!isMountedRef.current || !mapInstanceRef.current || !mapReady) {\n      return false;\n    }\n    try {\n      return operation();\n    } catch (error) {\n      console.warn('Map operation failed:', error);\n      return false;\n    }\n  }, [mapReady]);\n\n  // Cleanup function for map\n  const cleanupMap = useCallback(() => {\n    if (mapInstanceRef.current) {\n      try {\n        // Stop all animations and transitions\n        mapInstanceRef.current.stop();\n\n        // Remove all layers safely\n        mapInstanceRef.current.eachLayer(layer => {\n          try {\n            mapInstanceRef.current.removeLayer(layer);\n          } catch (e) {\n            // Ignore cleanup errors\n          }\n        });\n\n        // Remove map instance\n        mapInstanceRef.current.off(); // Remove all event listeners\n        mapInstanceRef.current.remove();\n      } catch (error) {\n        console.warn('Error during map cleanup:', error);\n      } finally {\n        mapInstanceRef.current = null;\n      }\n    }\n    setMapReady(false);\n  }, []);\n\n  // Fetch actual road route using OpenRouteService or OSRM\n  const fetchRoadRoute = async (startCoords, endCoords, routeId) => {\n    if (!isMountedRef.current) return null;\n    try {\n      // Using OSRM (Open Source Routing Machine) - free and reliable\n      const url = `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`;\n      const response = await fetch(url);\n      if (!isMountedRef.current) return null;\n      const data = await response.json();\n      if (data.routes && data.routes.length > 0) {\n        const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n        const distance = (data.routes[0].distance / 1000).toFixed(1); // Convert to km\n        const duration = (data.routes[0].duration / 3600).toFixed(1); // Convert to hours\n\n        return {\n          coordinates,\n          distance: parseFloat(distance),\n          duration: parseFloat(duration)\n        };\n      }\n    } catch (error) {\n      if (isMountedRef.current) {\n        console.warn(`Failed to fetch road route for ${routeId}, falling back to straight line:`, error);\n      }\n    }\n\n    // Fallback to straight line if routing fails\n    return {\n      coordinates: [startCoords, endCoords],\n      distance: null,\n      duration: null\n    };\n  };\n\n  // Fetch road route with intermediate stops\n  const fetchRouteWithStops = async route => {\n    if (!isMountedRef.current) return null;\n    try {\n      setLoading(true);\n      const originCoords = getLocationCoordinates(route.originId);\n      const destCoords = getLocationCoordinates(route.destinationId);\n\n      // If there are intermediate stops, create waypoints\n      if (route.intermediateStops && route.intermediateStops.length > 0) {\n        const waypoints = [originCoords];\n\n        // Add intermediate stops in order\n        route.intermediateStops.sort((a, b) => a.stopNumber - b.stopNumber).forEach(stop => {\n          waypoints.push(getLocationCoordinates(stop.locationId));\n        });\n        waypoints.push(destCoords);\n\n        // Create waypoint string for OSRM\n        const waypointString = waypoints.map(coord => `${coord[1]},${coord[0]}`).join(';');\n        const url = `https://router.project-osrm.org/route/v1/driving/${waypointString}?overview=full&geometries=geojson&steps=true`;\n        const response = await fetch(url);\n        if (!isMountedRef.current) return null;\n        const data = await response.json();\n        if (data.routes && data.routes.length > 0) {\n          const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n          const distance = (data.routes[0].distance / 1000).toFixed(1);\n          const duration = (data.routes[0].duration / 3600).toFixed(1);\n          return {\n            coordinates,\n            distance: parseFloat(distance),\n            duration: parseFloat(duration),\n            waypoints\n          };\n        }\n      } else {\n        // Simple route without stops\n        return await fetchRoadRoute(originCoords, destCoords, route.id);\n      }\n    } catch (error) {\n      if (isMountedRef.current) {\n        console.warn(`Failed to fetch route with stops for ${route.id}:`, error);\n        return await fetchRoadRoute(getLocationCoordinates(route.originId), getLocationCoordinates(route.destinationId), route.id);\n      }\n    } finally {\n      if (isMountedRef.current) {\n        setLoading(false);\n      }\n    }\n    return null;\n  };\n\n  // Initialize map\n  useEffect(() => {\n    isMountedRef.current = true;\n    console.log('RouteMap: Component mounting, initializing map...');\n    if (!mapRef.current) return;\n\n    // Clean up any existing map instance\n    cleanupMap();\n\n    // Add a small delay to ensure DOM is ready\n    const timeoutId = setTimeout(() => {\n      if (!isMountedRef.current || !mapRef.current) return;\n      try {\n        // Initialize map with better settings\n        const map = L.map(mapRef.current, {\n          zoomControl: true,\n          scrollWheelZoom: true,\n          doubleClickZoom: true,\n          boxZoom: true,\n          keyboard: true,\n          dragging: true,\n          touchZoom: true,\n          fadeAnimation: false,\n          // Disable animations to prevent position errors\n          zoomAnimation: false,\n          markerZoomAnimation: false\n        }).setView([4.2105, 101.9758], 7); // Center on Malaysia\n\n        if (!isMountedRef.current) {\n          map.remove();\n          return;\n        }\n        mapInstanceRef.current = map;\n\n        // Add tile layer with better styling\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: 'Â© OpenStreetMap contributors | Routing by OSRM',\n          maxZoom: 18,\n          minZoom: 6\n        }).addTo(map);\n\n        // Wait for map to be fully loaded\n        map.whenReady(() => {\n          if (isMountedRef.current) {\n            console.log('Map is ready and initialized successfully');\n            setMapReady(true);\n          } else {\n            // Component was unmounted, cleanup\n            console.log('Component unmounted during map init, cleaning up...');\n            try {\n              map.remove();\n            } catch (e) {\n              // Ignore cleanup errors\n            }\n          }\n        });\n\n        // Add error handling for map events\n        map.on('error', error => {\n          console.warn('Map error:', error);\n        });\n      } catch (error) {\n        if (isMountedRef.current) {\n          console.error('Error initializing map:', error);\n        }\n      }\n    }, 100);\n    return () => {\n      console.log('RouteMap: Component unmounting, cleaning up...');\n      clearTimeout(timeoutId);\n      isMountedRef.current = false;\n      cleanupMap();\n    };\n  }, []); // Only run once on mount\n\n  // Handle route display\n  useEffect(() => {\n    if (!mapInstanceRef.current || !mapReady || !isMountedRef.current) return;\n    const map = mapInstanceRef.current;\n\n    // Clear existing layers safely\n    safeMapOperation(() => {\n      map.eachLayer(layer => {\n        if (layer instanceof L.Marker || layer instanceof L.Polyline || layer instanceof L.CircleMarker) {\n          map.removeLayer(layer);\n        }\n      });\n      return true;\n    });\n\n    // Handle single route display (when startLocation and endLocation are provided)\n    if (startLocation && endLocation) {\n      const displaySingleRoute = async () => {\n        if (!isMountedRef.current) return;\n        try {\n          setLoading(true);\n          const startCoords = getLocationCoordinates(startLocation);\n          const endCoords = getLocationCoordinates(endLocation);\n          const routeInfo = await fetchRoadRoute(startCoords, endCoords, 'single-route');\n          if (!routeInfo || !isMountedRef.current) return;\n\n          // Add markers with error handling\n          safeMapOperation(() => {\n            var _locations$find, _locations$find2;\n            const startMarker = L.marker(startCoords, {\n              icon: L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: #3B82F6; \n                  width: 16px; \n                  height: 16px; \n                  border-radius: 50%;\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                \"></div>`,\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              })\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">Start Location</strong><br/>\n                <span class=\"text-gray-600\">${((_locations$find = locations.find(l => l.id === startLocation)) === null || _locations$find === void 0 ? void 0 : _locations$find.city) || 'Origin'}</span>\n              </div>\n            `);\n            const endMarker = L.marker(endCoords, {\n              icon: L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: #EF4444; \n                  width: 16px; \n                  height: 16px; \n                  border-radius: 20%;\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                  transform: rotate(45deg);\n                \"></div>`,\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              })\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">End Location</strong><br/>\n                <span class=\"text-gray-600\">${((_locations$find2 = locations.find(l => l.id === endLocation)) === null || _locations$find2 === void 0 ? void 0 : _locations$find2.city) || 'Destination'}</span>\n                ${routeInfo.distance ? `<br/><span class=\"text-gray-500\">Distance: ${routeInfo.distance} km</span>` : ''}\n                ${routeInfo.duration ? `<br/><span class=\"text-gray-500\">Duration: ${routeInfo.duration} hours</span>` : ''}\n              </div>\n            `);\n\n            // Add route line\n            const routeLine = L.polyline(routeInfo.coordinates, {\n              color: '#3B82F6',\n              weight: 4,\n              opacity: 0.8\n            });\n\n            // Add to map\n            startMarker.addTo(map);\n            endMarker.addTo(map);\n            routeLine.addTo(map);\n\n            // Fit map to route\n            const bounds = L.latLngBounds(routeInfo.coordinates);\n            map.fitBounds(bounds, {\n              padding: [30, 30],\n              animate: false\n            });\n            return true;\n          });\n        } catch (error) {\n          if (isMountedRef.current) {\n            console.error('Error displaying single route:', error);\n          }\n        } finally {\n          if (isMountedRef.current) {\n            setLoading(false);\n          }\n        }\n      };\n      displaySingleRoute();\n      return;\n    }\n\n    // Handle multiple routes display\n    if (!routes.length) return;\n    const displayMultipleRoutes = async () => {\n      if (!isMountedRef.current) return;\n      try {\n        setLoading(true);\n        const bounds = L.latLngBounds();\n        const routeColors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n        const newRouteData = {};\n\n        // Fetch all routes\n        for (let index = 0; index < routes.length; index++) {\n          if (!isMountedRef.current) break;\n          const route = routes[index];\n          const color = routeColors[index % routeColors.length];\n          try {\n            const routeInfo = await fetchRouteWithStops(route);\n            if (!routeInfo || !isMountedRef.current) continue;\n            newRouteData[route.id] = routeInfo;\n\n            // Get location details\n            const originLocation = locations.find(loc => loc.id === route.originId);\n            const destLocation = locations.find(loc => loc.id === route.destinationId);\n\n            // Create custom icons with route colors\n            const createCustomIcon = (isOrigin, size = 'medium') => {\n              const sizes = {\n                small: {\n                  width: 8,\n                  height: 8,\n                  iconSize: [12, 12]\n                },\n                medium: {\n                  width: 12,\n                  height: 12,\n                  iconSize: [16, 16]\n                },\n                large: {\n                  width: 16,\n                  height: 16,\n                  iconSize: [20, 20]\n                }\n              };\n              const iconSize = sizes[size];\n              const borderRadius = isOrigin ? '50%' : '20%';\n              return L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: ${color}; \n                  width: ${iconSize.width}px; \n                  height: ${iconSize.height}px; \n                  border-radius: ${borderRadius};\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                  ${!isOrigin ? 'transform: rotate(45deg);' : ''}\n                \"></div>`,\n                iconSize: iconSize.iconSize,\n                iconAnchor: [iconSize.iconSize[0] / 2, iconSize.iconSize[1] / 2]\n              });\n            };\n            const originCoords = getLocationCoordinates(route.originId);\n            const destCoords = getLocationCoordinates(route.destinationId);\n\n            // Add markers and routes safely\n            safeMapOperation(() => {\n              var _route$intermediateSt;\n              // Add origin marker\n              const originMarker = L.marker(originCoords, {\n                icon: createCustomIcon(true, 'large'),\n                zIndexOffset: 1000\n              }).bindPopup(`\n                <div class=\"text-sm max-w-xs\">\n                  <strong class=\"text-base\">${(originLocation === null || originLocation === void 0 ? void 0 : originLocation.city) || 'Origin'}</strong><br/>\n                  <span class=\"text-gray-600\">${route.name}</span><br/>\n                  <span class=\"text-gray-500\">${(originLocation === null || originLocation === void 0 ? void 0 : originLocation.address) || ''}</span>\n                </div>\n              `);\n\n              // Add destination marker\n              const destMarker = L.marker(destCoords, {\n                icon: createCustomIcon(false, 'large'),\n                zIndexOffset: 1000\n              }).bindPopup(`\n                <div class=\"text-sm max-w-xs\">\n                  <strong class=\"text-base\">${(destLocation === null || destLocation === void 0 ? void 0 : destLocation.city) || 'Destination'}</strong><br/>\n                  <span class=\"text-gray-600\">${route.name}</span><br/>\n                  <span class=\"text-gray-500\">Distance: ${routeInfo.distance || route.distanceKm} km</span><br/>\n                  <span class=\"text-gray-500\">Duration: ${routeInfo.duration || route.durationHours} hours</span><br/>\n                  <span class=\"text-gray-500\">Price: RM ${route.basePrice}</span><br/>\n                  <span class=\"text-gray-500\">${(destLocation === null || destLocation === void 0 ? void 0 : destLocation.address) || ''}</span>\n                </div>\n              `);\n\n              // Add intermediate stop markers\n              (_route$intermediateSt = route.intermediateStops) === null || _route$intermediateSt === void 0 ? void 0 : _route$intermediateSt.forEach(stop => {\n                if (!isMountedRef.current) return;\n                try {\n                  const stopLocation = locations.find(loc => loc.id === stop.locationId);\n                  const stopCoords = getLocationCoordinates(stop.locationId);\n                  const stopMarker = L.marker(stopCoords, {\n                    icon: createCustomIcon(true, 'small'),\n                    zIndexOffset: 500\n                  }).bindPopup(`\n                    <div class=\"text-sm max-w-xs\">\n                      <strong>${(stopLocation === null || stopLocation === void 0 ? void 0 : stopLocation.city) || 'Stop'}</strong><br/>\n                      <span class=\"text-gray-600\">Stop ${stop.stopNumber}</span><br/>\n                      <span class=\"text-gray-500\">+RM ${stop.additionalPrice}</span><br/>\n                      <span class=\"text-gray-500\">${Math.floor(stop.arrivalOffset / 60)}h ${stop.arrivalOffset % 60}m from origin</span>\n                    </div>\n                  `);\n                  stopMarker.addTo(map);\n                  bounds.extend(stopCoords);\n                } catch (stopError) {\n                  console.warn('Error adding stop marker:', stopError);\n                }\n              });\n\n              // Add route line using real road coordinates\n              const routeLine = L.polyline(routeInfo.coordinates, {\n                color: color,\n                weight: 4,\n                opacity: 0.8,\n                dashArray: route.frequency === 'weekend' ? '10, 5' : null\n              });\n\n              // Add hover effects\n              routeLine.on('mouseover', function () {\n                if (isMountedRef.current) {\n                  this.setStyle({\n                    weight: 6,\n                    opacity: 1.0\n                  });\n                }\n              });\n              routeLine.on('mouseout', function () {\n                if (isMountedRef.current) {\n                  this.setStyle({\n                    weight: 4,\n                    opacity: 0.8\n                  });\n                }\n              });\n\n              // Add to map\n              originMarker.addTo(map);\n              destMarker.addTo(map);\n              routeLine.addTo(map);\n\n              // Add to bounds\n              routeInfo.coordinates.forEach(point => bounds.extend(point));\n              return true;\n            });\n          } catch (routeError) {\n            console.warn(`Error processing route ${route.id}:`, routeError);\n          }\n        }\n        if (isMountedRef.current) {\n          setRouteData(newRouteData);\n\n          // Fit map to show all routes with padding\n          safeMapOperation(() => {\n            if (bounds.isValid()) {\n              map.fitBounds(bounds, {\n                padding: [30, 30],\n                maxZoom: 12,\n                animate: false\n              });\n            }\n            return true;\n          });\n        }\n      } catch (error) {\n        if (isMountedRef.current) {\n          console.error('Error displaying multiple routes:', error);\n        }\n      } finally {\n        if (isMountedRef.current) {\n          setLoading(false);\n        }\n      }\n    };\n    displayMultipleRoutes();\n  }, [routes, locations, startLocation, endLocation, mapReady, safeMapOperation]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      isMountedRef.current = false;\n      cleanupMap();\n    };\n  }, [cleanupMap]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative h-full w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"h-full w-full rounded-lg\",\n      style: {\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-black bg-opacity-20 flex items-center justify-center rounded-lg\",\n      style: {\n        zIndex: 1001\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-4 shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-6 h-6 border-2 border-primary-600 border-t-transparent rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium\",\n            children: \"Loading road routes...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 9\n    }, this), routes.length > 0 && !startLocation && !endLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 max-w-xs\",\n      style: {\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-sm mb-3 text-gray-800\",\n          children: \"Active Routes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2 max-h-60 overflow-y-auto\",\n          children: routes.slice(0, 7).map((route, index) => {\n            const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n            const color = colors[index % colors.length];\n\n            // Calculate average occupation for this route\n            const routeTrips = selectedTrips.filter(trip => trip.routeId === route.id);\n            const avgOccupation = routeTrips.length > 0 ? routeTrips.reduce((sum, trip) => sum + calculateOccupancyRate(trip), 0) / routeTrips.length : 0;\n            const routeInfo = routeData[route.id];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between text-xs py-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2 flex-shrink-0\",\n                  style: {\n                    backgroundColor: color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 min-w-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate text-gray-700\",\n                    children: route.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 25\n                  }, this), routeInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [routeInfo.distance, \" km \\u2022 \", routeInfo.duration, \"h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 21\n              }, this), avgOccupation > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-2 flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-8 bg-gray-200 rounded-full h-1.5 mr-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"h-1.5 rounded-full transition-all\",\n                    style: {\n                      width: `${Math.min(avgOccupation, 100)}%`,\n                      backgroundColor: avgOccupation > 80 ? '#EF4444' : avgOccupation > 60 ? '#F59E0B' : '#10B981'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-600 font-medium\",\n                  children: [avgOccupation.toFixed(0), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 23\n              }, this)]\n            }, route.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 pt-2 border-t border-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between text-xs text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u25CF Origin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u25C6 Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Real Roads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 left-4 bg-white rounded-lg shadow-lg border border-gray-200\",\n      style: {\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 bg-blue-500 rounded-full mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Regular Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-4 h-0.5 bg-gray-400 mr-2\",\n              style: {\n                borderTop: '2px dashed'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Weekend Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 pt-1 border-t border-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500\",\n              children: \"\\uD83D\\uDEE3\\uFE0F Real road routes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this), routes.length === 0 && !startLocation && !endLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-gray-50 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: \"\\uD83D\\uDDFA\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium\",\n          children: \"No routes to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs\",\n          children: \"Select routes to view on map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 556,\n    columnNumber: 5\n  }, this);\n};\n_s(RouteMap, \"1n7unQMyra7CKwBacByqF7mFqcI=\");\n_c = RouteMap;\nexport default RouteMap;\nvar _c;\n$RefreshReg$(_c, \"RouteMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","L","calculateOccupancyRate","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","RouteMap","routes","locations","selectedTrips","startLocation","endLocation","_s","mapRef","mapInstanceRef","isMountedRef","routeData","setRouteData","loading","setLoading","mapReady","setMapReady","getLocationCoordinates","locationId","location","find","loc","id","coordinates","safeMapOperation","operation","current","error","console","warn","cleanupMap","stop","eachLayer","layer","removeLayer","e","off","remove","fetchRoadRoute","startCoords","endCoords","routeId","url","response","fetch","data","json","length","geometry","map","coord","distance","toFixed","duration","parseFloat","fetchRouteWithStops","route","originCoords","originId","destCoords","destinationId","intermediateStops","waypoints","sort","a","b","stopNumber","forEach","push","waypointString","join","log","timeoutId","setTimeout","zoomControl","scrollWheelZoom","doubleClickZoom","boxZoom","keyboard","dragging","touchZoom","fadeAnimation","zoomAnimation","markerZoomAnimation","setView","tileLayer","attribution","maxZoom","minZoom","addTo","whenReady","on","clearTimeout","Marker","Polyline","CircleMarker","displaySingleRoute","routeInfo","_locations$find","_locations$find2","startMarker","marker","icon","divIcon","className","html","iconSize","iconAnchor","bindPopup","l","city","endMarker","routeLine","polyline","color","weight","opacity","bounds","latLngBounds","fitBounds","padding","animate","displayMultipleRoutes","routeColors","newRouteData","index","originLocation","destLocation","createCustomIcon","isOrigin","size","sizes","small","width","height","medium","large","borderRadius","_route$intermediateSt","originMarker","zIndexOffset","name","address","destMarker","distanceKm","durationHours","basePrice","stopLocation","stopCoords","stopMarker","additionalPrice","Math","floor","arrivalOffset","extend","stopError","dashArray","frequency","setStyle","point","routeError","isValid","children","ref","style","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","slice","colors","routeTrips","filter","trip","avgOccupation","reduce","sum","backgroundColor","min","borderTop","_c","$RefreshReg$"],"sources":["/Users/gohshunda/TWT-Transport-Booking/src/components/admin/RouteMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { calculateOccupancyRate } from '../../data/mockData';\n\n// Fix for default markers in React-Leaflet\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\nconst RouteMap = ({ routes = [], locations = [], selectedTrips = [], startLocation = null, endLocation = null }) => {\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const isMountedRef = useRef(true);\n  const [routeData, setRouteData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [mapReady, setMapReady] = useState(false);\n\n  const getLocationCoordinates = (locationId) => {\n    const location = locations.find(loc => loc.id === locationId);\n    return location ? location.coordinates : [3.1390, 101.6869]; // Default to KL\n  };\n\n  // Safe map operation wrapper\n  const safeMapOperation = useCallback((operation) => {\n    if (!isMountedRef.current || !mapInstanceRef.current || !mapReady) {\n      return false;\n    }\n    \n    try {\n      return operation();\n    } catch (error) {\n      console.warn('Map operation failed:', error);\n      return false;\n    }\n  }, [mapReady]);\n\n  // Cleanup function for map\n  const cleanupMap = useCallback(() => {\n    if (mapInstanceRef.current) {\n      try {\n        // Stop all animations and transitions\n        mapInstanceRef.current.stop();\n        \n        // Remove all layers safely\n        mapInstanceRef.current.eachLayer((layer) => {\n          try {\n            mapInstanceRef.current.removeLayer(layer);\n          } catch (e) {\n            // Ignore cleanup errors\n          }\n        });\n        \n        // Remove map instance\n        mapInstanceRef.current.off(); // Remove all event listeners\n        mapInstanceRef.current.remove();\n      } catch (error) {\n        console.warn('Error during map cleanup:', error);\n      } finally {\n        mapInstanceRef.current = null;\n      }\n    }\n    setMapReady(false);\n  }, []);\n\n  // Fetch actual road route using OpenRouteService or OSRM\n  const fetchRoadRoute = async (startCoords, endCoords, routeId) => {\n    if (!isMountedRef.current) return null;\n    \n    try {\n      // Using OSRM (Open Source Routing Machine) - free and reliable\n      const url = `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`;\n      \n      const response = await fetch(url);\n      if (!isMountedRef.current) return null;\n      \n      const data = await response.json();\n      \n      if (data.routes && data.routes.length > 0) {\n        const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n        const distance = (data.routes[0].distance / 1000).toFixed(1); // Convert to km\n        const duration = (data.routes[0].duration / 3600).toFixed(1); // Convert to hours\n        \n        return {\n          coordinates,\n          distance: parseFloat(distance),\n          duration: parseFloat(duration)\n        };\n      }\n    } catch (error) {\n      if (isMountedRef.current) {\n        console.warn(`Failed to fetch road route for ${routeId}, falling back to straight line:`, error);\n      }\n    }\n    \n    // Fallback to straight line if routing fails\n    return {\n      coordinates: [startCoords, endCoords],\n      distance: null,\n      duration: null\n    };\n  };\n\n  // Fetch road route with intermediate stops\n  const fetchRouteWithStops = async (route) => {\n    if (!isMountedRef.current) return null;\n    \n    try {\n      setLoading(true);\n      \n      const originCoords = getLocationCoordinates(route.originId);\n      const destCoords = getLocationCoordinates(route.destinationId);\n      \n      // If there are intermediate stops, create waypoints\n      if (route.intermediateStops && route.intermediateStops.length > 0) {\n        const waypoints = [originCoords];\n        \n        // Add intermediate stops in order\n        route.intermediateStops\n          .sort((a, b) => a.stopNumber - b.stopNumber)\n          .forEach(stop => {\n            waypoints.push(getLocationCoordinates(stop.locationId));\n          });\n        \n        waypoints.push(destCoords);\n        \n        // Create waypoint string for OSRM\n        const waypointString = waypoints\n          .map(coord => `${coord[1]},${coord[0]}`)\n          .join(';');\n        \n        const url = `https://router.project-osrm.org/route/v1/driving/${waypointString}?overview=full&geometries=geojson&steps=true`;\n        \n        const response = await fetch(url);\n        if (!isMountedRef.current) return null;\n        \n        const data = await response.json();\n        \n        if (data.routes && data.routes.length > 0) {\n          const coordinates = data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]]);\n          const distance = (data.routes[0].distance / 1000).toFixed(1);\n          const duration = (data.routes[0].duration / 3600).toFixed(1);\n          \n          return {\n            coordinates,\n            distance: parseFloat(distance),\n            duration: parseFloat(duration),\n            waypoints\n          };\n        }\n      } else {\n        // Simple route without stops\n        return await fetchRoadRoute(originCoords, destCoords, route.id);\n      }\n    } catch (error) {\n      if (isMountedRef.current) {\n        console.warn(`Failed to fetch route with stops for ${route.id}:`, error);\n        return await fetchRoadRoute(\n          getLocationCoordinates(route.originId),\n          getLocationCoordinates(route.destinationId),\n          route.id\n        );\n      }\n    } finally {\n      if (isMountedRef.current) {\n        setLoading(false);\n      }\n    }\n    return null;\n  };\n\n  // Initialize map\n  useEffect(() => {\n    isMountedRef.current = true;\n    console.log('RouteMap: Component mounting, initializing map...');\n    \n    if (!mapRef.current) return;\n\n    // Clean up any existing map instance\n    cleanupMap();\n\n    // Add a small delay to ensure DOM is ready\n    const timeoutId = setTimeout(() => {\n      if (!isMountedRef.current || !mapRef.current) return;\n      \n      try {\n        // Initialize map with better settings\n        const map = L.map(mapRef.current, {\n          zoomControl: true,\n          scrollWheelZoom: true,\n          doubleClickZoom: true,\n          boxZoom: true,\n          keyboard: true,\n          dragging: true,\n          touchZoom: true,\n          fadeAnimation: false, // Disable animations to prevent position errors\n          zoomAnimation: false,\n          markerZoomAnimation: false,\n        }).setView([4.2105, 101.9758], 7); // Center on Malaysia\n        \n        if (!isMountedRef.current) {\n          map.remove();\n          return;\n        }\n        \n        mapInstanceRef.current = map;\n\n        // Add tile layer with better styling\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: 'Â© OpenStreetMap contributors | Routing by OSRM',\n          maxZoom: 18,\n          minZoom: 6,\n        }).addTo(map);\n\n        // Wait for map to be fully loaded\n        map.whenReady(() => {\n          if (isMountedRef.current) {\n            console.log('Map is ready and initialized successfully');\n            setMapReady(true);\n          } else {\n            // Component was unmounted, cleanup\n            console.log('Component unmounted during map init, cleaning up...');\n            try {\n              map.remove();\n            } catch (e) {\n              // Ignore cleanup errors\n            }\n          }\n        });\n\n        // Add error handling for map events\n        map.on('error', (error) => {\n          console.warn('Map error:', error);\n        });\n\n      } catch (error) {\n        if (isMountedRef.current) {\n          console.error('Error initializing map:', error);\n        }\n      }\n    }, 100);\n\n    return () => {\n      console.log('RouteMap: Component unmounting, cleaning up...');\n      clearTimeout(timeoutId);\n      isMountedRef.current = false;\n      cleanupMap();\n    };\n  }, []); // Only run once on mount\n\n  // Handle route display\n  useEffect(() => {\n    if (!mapInstanceRef.current || !mapReady || !isMountedRef.current) return;\n\n    const map = mapInstanceRef.current;\n\n    // Clear existing layers safely\n    safeMapOperation(() => {\n      map.eachLayer((layer) => {\n        if (layer instanceof L.Marker || layer instanceof L.Polyline || layer instanceof L.CircleMarker) {\n          map.removeLayer(layer);\n        }\n      });\n      return true;\n    });\n\n    // Handle single route display (when startLocation and endLocation are provided)\n    if (startLocation && endLocation) {\n      const displaySingleRoute = async () => {\n        if (!isMountedRef.current) return;\n        \n        try {\n          setLoading(true);\n          \n          const startCoords = getLocationCoordinates(startLocation);\n          const endCoords = getLocationCoordinates(endLocation);\n          \n          const routeInfo = await fetchRoadRoute(startCoords, endCoords, 'single-route');\n          \n          if (!routeInfo || !isMountedRef.current) return;\n          \n          // Add markers with error handling\n          safeMapOperation(() => {\n            const startMarker = L.marker(startCoords, {\n              icon: L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: #3B82F6; \n                  width: 16px; \n                  height: 16px; \n                  border-radius: 50%;\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                \"></div>`,\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              })\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">Start Location</strong><br/>\n                <span class=\"text-gray-600\">${locations.find(l => l.id === startLocation)?.city || 'Origin'}</span>\n              </div>\n            `);\n\n            const endMarker = L.marker(endCoords, {\n              icon: L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: #EF4444; \n                  width: 16px; \n                  height: 16px; \n                  border-radius: 20%;\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                  transform: rotate(45deg);\n                \"></div>`,\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              })\n            }).bindPopup(`\n              <div class=\"text-sm max-w-xs\">\n                <strong class=\"text-base\">End Location</strong><br/>\n                <span class=\"text-gray-600\">${locations.find(l => l.id === endLocation)?.city || 'Destination'}</span>\n                ${routeInfo.distance ? `<br/><span class=\"text-gray-500\">Distance: ${routeInfo.distance} km</span>` : ''}\n                ${routeInfo.duration ? `<br/><span class=\"text-gray-500\">Duration: ${routeInfo.duration} hours</span>` : ''}\n              </div>\n            `);\n\n            // Add route line\n            const routeLine = L.polyline(routeInfo.coordinates, {\n              color: '#3B82F6',\n              weight: 4,\n              opacity: 0.8,\n            });\n\n            // Add to map\n            startMarker.addTo(map);\n            endMarker.addTo(map);\n            routeLine.addTo(map);\n\n            // Fit map to route\n            const bounds = L.latLngBounds(routeInfo.coordinates);\n            map.fitBounds(bounds, { padding: [30, 30], animate: false });\n            \n            return true;\n          });\n          \n        } catch (error) {\n          if (isMountedRef.current) {\n            console.error('Error displaying single route:', error);\n          }\n        } finally {\n          if (isMountedRef.current) {\n            setLoading(false);\n          }\n        }\n      };\n\n      displaySingleRoute();\n      return;\n    }\n\n    // Handle multiple routes display\n    if (!routes.length) return;\n\n    const displayMultipleRoutes = async () => {\n      if (!isMountedRef.current) return;\n      \n      try {\n        setLoading(true);\n        const bounds = L.latLngBounds();\n        const routeColors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n        const newRouteData = {};\n\n        // Fetch all routes\n        for (let index = 0; index < routes.length; index++) {\n          if (!isMountedRef.current) break;\n          \n          const route = routes[index];\n          const color = routeColors[index % routeColors.length];\n          \n          try {\n            const routeInfo = await fetchRouteWithStops(route);\n            if (!routeInfo || !isMountedRef.current) continue;\n            \n            newRouteData[route.id] = routeInfo;\n\n            // Get location details\n            const originLocation = locations.find(loc => loc.id === route.originId);\n            const destLocation = locations.find(loc => loc.id === route.destinationId);\n\n            // Create custom icons with route colors\n            const createCustomIcon = (isOrigin, size = 'medium') => {\n              const sizes = {\n                small: { width: 8, height: 8, iconSize: [12, 12] },\n                medium: { width: 12, height: 12, iconSize: [16, 16] },\n                large: { width: 16, height: 16, iconSize: [20, 20] }\n              };\n              \n              const iconSize = sizes[size];\n              const borderRadius = isOrigin ? '50%' : '20%';\n              \n              return L.divIcon({\n                className: 'custom-route-marker',\n                html: `<div style=\"\n                  background-color: ${color}; \n                  width: ${iconSize.width}px; \n                  height: ${iconSize.height}px; \n                  border-radius: ${borderRadius};\n                  border: 2px solid white; \n                  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n                  ${!isOrigin ? 'transform: rotate(45deg);' : ''}\n                \"></div>`,\n                iconSize: iconSize.iconSize,\n                iconAnchor: [iconSize.iconSize[0]/2, iconSize.iconSize[1]/2]\n              });\n            };\n\n            const originCoords = getLocationCoordinates(route.originId);\n            const destCoords = getLocationCoordinates(route.destinationId);\n\n            // Add markers and routes safely\n            safeMapOperation(() => {\n              // Add origin marker\n              const originMarker = L.marker(originCoords, { \n                icon: createCustomIcon(true, 'large'),\n                zIndexOffset: 1000\n              }).bindPopup(`\n                <div class=\"text-sm max-w-xs\">\n                  <strong class=\"text-base\">${originLocation?.city || 'Origin'}</strong><br/>\n                  <span class=\"text-gray-600\">${route.name}</span><br/>\n                  <span class=\"text-gray-500\">${originLocation?.address || ''}</span>\n                </div>\n              `);\n\n              // Add destination marker\n              const destMarker = L.marker(destCoords, { \n                icon: createCustomIcon(false, 'large'),\n                zIndexOffset: 1000\n              }).bindPopup(`\n                <div class=\"text-sm max-w-xs\">\n                  <strong class=\"text-base\">${destLocation?.city || 'Destination'}</strong><br/>\n                  <span class=\"text-gray-600\">${route.name}</span><br/>\n                  <span class=\"text-gray-500\">Distance: ${routeInfo.distance || route.distanceKm} km</span><br/>\n                  <span class=\"text-gray-500\">Duration: ${routeInfo.duration || route.durationHours} hours</span><br/>\n                  <span class=\"text-gray-500\">Price: RM ${route.basePrice}</span><br/>\n                  <span class=\"text-gray-500\">${destLocation?.address || ''}</span>\n                </div>\n              `);\n\n              // Add intermediate stop markers\n              route.intermediateStops?.forEach((stop) => {\n                if (!isMountedRef.current) return;\n                \n                try {\n                  const stopLocation = locations.find(loc => loc.id === stop.locationId);\n                  const stopCoords = getLocationCoordinates(stop.locationId);\n                  \n                  const stopMarker = L.marker(stopCoords, { \n                    icon: createCustomIcon(true, 'small'),\n                    zIndexOffset: 500\n                  }).bindPopup(`\n                    <div class=\"text-sm max-w-xs\">\n                      <strong>${stopLocation?.city || 'Stop'}</strong><br/>\n                      <span class=\"text-gray-600\">Stop ${stop.stopNumber}</span><br/>\n                      <span class=\"text-gray-500\">+RM ${stop.additionalPrice}</span><br/>\n                      <span class=\"text-gray-500\">${Math.floor(stop.arrivalOffset/60)}h ${stop.arrivalOffset%60}m from origin</span>\n                    </div>\n                  `);\n\n                  stopMarker.addTo(map);\n                  bounds.extend(stopCoords);\n                } catch (stopError) {\n                  console.warn('Error adding stop marker:', stopError);\n                }\n              });\n\n              // Add route line using real road coordinates\n              const routeLine = L.polyline(routeInfo.coordinates, {\n                color: color,\n                weight: 4,\n                opacity: 0.8,\n                dashArray: route.frequency === 'weekend' ? '10, 5' : null\n              });\n\n              // Add hover effects\n              routeLine.on('mouseover', function() {\n                if (isMountedRef.current) {\n                  this.setStyle({ weight: 6, opacity: 1.0 });\n                }\n              });\n              \n              routeLine.on('mouseout', function() {\n                if (isMountedRef.current) {\n                  this.setStyle({ weight: 4, opacity: 0.8 });\n                }\n              });\n\n              // Add to map\n              originMarker.addTo(map);\n              destMarker.addTo(map);\n              routeLine.addTo(map);\n\n              // Add to bounds\n              routeInfo.coordinates.forEach(point => bounds.extend(point));\n              \n              return true;\n            });\n          } catch (routeError) {\n            console.warn(`Error processing route ${route.id}:`, routeError);\n          }\n        }\n\n        if (isMountedRef.current) {\n          setRouteData(newRouteData);\n\n          // Fit map to show all routes with padding\n          safeMapOperation(() => {\n            if (bounds.isValid()) {\n              map.fitBounds(bounds, { \n                padding: [30, 30],\n                maxZoom: 12,\n                animate: false\n              });\n            }\n            return true;\n          });\n        }\n      } catch (error) {\n        if (isMountedRef.current) {\n          console.error('Error displaying multiple routes:', error);\n        }\n      } finally {\n        if (isMountedRef.current) {\n          setLoading(false);\n        }\n      }\n    };\n\n    displayMultipleRoutes();\n\n  }, [routes, locations, startLocation, endLocation, mapReady, safeMapOperation]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      isMountedRef.current = false;\n      cleanupMap();\n    };\n  }, [cleanupMap]);\n\n  return (\n    <div className=\"relative h-full w-full\">\n      <div ref={mapRef} className=\"h-full w-full rounded-lg\" style={{ zIndex: 1 }} />\n      \n      {/* Loading indicator */}\n      {loading && (\n        <div className=\"absolute inset-0 bg-black bg-opacity-20 flex items-center justify-center rounded-lg\" style={{ zIndex: 1001 }}>\n          <div className=\"bg-white rounded-lg p-4 shadow-lg\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-6 h-6 border-2 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n              <span className=\"text-sm font-medium\">Loading road routes...</span>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Enhanced Legend with Trip Occupation */}\n      {routes.length > 0 && !startLocation && !endLocation && (\n        <div className=\"absolute top-4 right-4 bg-white rounded-lg shadow-lg border border-gray-200 max-w-xs\" style={{ zIndex: 1000 }}>\n          <div className=\"p-4\">\n            <h4 className=\"font-semibold text-sm mb-3 text-gray-800\">Active Routes</h4>\n            <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n              {routes.slice(0, 7).map((route, index) => {\n                const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16'];\n                const color = colors[index % colors.length];\n                \n                // Calculate average occupation for this route\n                const routeTrips = selectedTrips.filter(trip => trip.routeId === route.id);\n                const avgOccupation = routeTrips.length > 0 \n                  ? routeTrips.reduce((sum, trip) => sum + calculateOccupancyRate(trip), 0) / routeTrips.length\n                  : 0;\n                \n                const routeInfo = routeData[route.id];\n                \n                return (\n                  <div key={route.id} className=\"flex items-center justify-between text-xs py-1\">\n                    <div className=\"flex items-center flex-1 min-w-0\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2 flex-shrink-0\" \n                        style={{ backgroundColor: color }}\n                      ></div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"truncate text-gray-700\">{route.name}</div>\n                        {routeInfo && (\n                          <div className=\"text-xs text-gray-500\">\n                            {routeInfo.distance} km â¢ {routeInfo.duration}h\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    {avgOccupation > 0 && (\n                      <div className=\"ml-2 flex items-center\">\n                        <div className=\"w-8 bg-gray-200 rounded-full h-1.5 mr-1\">\n                          <div \n                            className=\"h-1.5 rounded-full transition-all\"\n                            style={{ \n                              width: `${Math.min(avgOccupation, 100)}%`,\n                              backgroundColor: avgOccupation > 80 ? '#EF4444' : avgOccupation > 60 ? '#F59E0B' : '#10B981'\n                            }}\n                          ></div>\n                        </div>\n                        <span className=\"text-xs text-gray-600 font-medium\">\n                          {avgOccupation.toFixed(0)}%\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n            \n            {/* Legend explanation */}\n            <div className=\"mt-3 pt-2 border-t border-gray-100\">\n              <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                <span>â Origin</span>\n                <span>â Destination</span>\n                <span>Real Roads</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Map Controls */}\n      <div className=\"absolute bottom-4 left-4 bg-white rounded-lg shadow-lg border border-gray-200\" style={{ zIndex: 1000 }}>\n        <div className=\"p-3\">\n          <div className=\"text-xs text-gray-600 space-y-1\">\n            <div className=\"flex items-center\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full mr-2\"></div>\n              <span>Regular Service</span>\n            </div>\n            <div className=\"flex items-center\">\n              <div className=\"w-4 h-0.5 bg-gray-400 mr-2\" style={{borderTop: '2px dashed'}}></div>\n              <span>Weekend Only</span>\n            </div>\n            <div className=\"mt-2 pt-1 border-t border-gray-200\">\n              <div className=\"text-xs text-gray-500\">ð£ï¸ Real road routes</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Empty state */}\n      {routes.length === 0 && !startLocation && !endLocation && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50 rounded-lg\">\n          <div className=\"text-center text-gray-500\">\n            <div className=\"mb-2\">ðºï¸</div>\n            <p className=\"text-sm font-medium\">No routes to display</p>\n            <p className=\"text-xs\">Select routes to view on map</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RouteMap; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,SAASC,sBAAsB,QAAQ,qBAAqB;;AAE5D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOH,CAAC,CAACI,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CP,CAAC,CAACI,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAE,gFAAgF;EAC/FC,OAAO,EAAE,6EAA6E;EACtFC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM,GAAG,EAAE;EAAEC,SAAS,GAAG,EAAE;EAAEC,aAAa,GAAG,EAAE;EAAEC,aAAa,GAAG,IAAI;EAAEC,WAAW,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAClH,MAAMC,MAAM,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMuB,cAAc,GAAGvB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMwB,YAAY,GAAGxB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM8B,sBAAsB,GAAIC,UAAU,IAAK;IAC7C,MAAMC,QAAQ,GAAGhB,SAAS,CAACiB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKJ,UAAU,CAAC;IAC7D,OAAOC,QAAQ,GAAGA,QAAQ,CAACI,WAAW,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGpC,WAAW,CAAEqC,SAAS,IAAK;IAClD,IAAI,CAACf,YAAY,CAACgB,OAAO,IAAI,CAACjB,cAAc,CAACiB,OAAO,IAAI,CAACX,QAAQ,EAAE;MACjE,OAAO,KAAK;IACd;IAEA,IAAI;MACF,OAAOU,SAAS,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,uBAAuB,EAAEF,KAAK,CAAC;MAC5C,OAAO,KAAK;IACd;EACF,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMe,UAAU,GAAG1C,WAAW,CAAC,MAAM;IACnC,IAAIqB,cAAc,CAACiB,OAAO,EAAE;MAC1B,IAAI;QACF;QACAjB,cAAc,CAACiB,OAAO,CAACK,IAAI,CAAC,CAAC;;QAE7B;QACAtB,cAAc,CAACiB,OAAO,CAACM,SAAS,CAAEC,KAAK,IAAK;UAC1C,IAAI;YACFxB,cAAc,CAACiB,OAAO,CAACQ,WAAW,CAACD,KAAK,CAAC;UAC3C,CAAC,CAAC,OAAOE,CAAC,EAAE;YACV;UAAA;QAEJ,CAAC,CAAC;;QAEF;QACA1B,cAAc,CAACiB,OAAO,CAACU,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9B3B,cAAc,CAACiB,OAAO,CAACW,MAAM,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOV,KAAK,EAAE;QACdC,OAAO,CAACC,IAAI,CAAC,2BAA2B,EAAEF,KAAK,CAAC;MAClD,CAAC,SAAS;QACRlB,cAAc,CAACiB,OAAO,GAAG,IAAI;MAC/B;IACF;IACAV,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMsB,cAAc,GAAG,MAAAA,CAAOC,WAAW,EAAEC,SAAS,EAAEC,OAAO,KAAK;IAChE,IAAI,CAAC/B,YAAY,CAACgB,OAAO,EAAE,OAAO,IAAI;IAEtC,IAAI;MACF;MACA,MAAMgB,GAAG,GAAG,oDAAoDH,WAAW,CAAC,CAAC,CAAC,IAAIA,WAAW,CAAC,CAAC,CAAC,IAAIC,SAAS,CAAC,CAAC,CAAC,IAAIA,SAAS,CAAC,CAAC,CAAC,mCAAmC;MAEnK,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MACjC,IAAI,CAAChC,YAAY,CAACgB,OAAO,EAAE,OAAO,IAAI;MAEtC,MAAMmB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAAC3C,MAAM,IAAI2C,IAAI,CAAC3C,MAAM,CAAC6C,MAAM,GAAG,CAAC,EAAE;QACzC,MAAMxB,WAAW,GAAGsB,IAAI,CAAC3C,MAAM,CAAC,CAAC,CAAC,CAAC8C,QAAQ,CAACzB,WAAW,CAAC0B,GAAG,CAACC,KAAK,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1F,MAAMC,QAAQ,GAAG,CAACN,IAAI,CAAC3C,MAAM,CAAC,CAAC,CAAC,CAACiD,QAAQ,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAMC,QAAQ,GAAG,CAACR,IAAI,CAAC3C,MAAM,CAAC,CAAC,CAAC,CAACmD,QAAQ,GAAG,IAAI,EAAED,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;QAE9D,OAAO;UACL7B,WAAW;UACX4B,QAAQ,EAAEG,UAAU,CAACH,QAAQ,CAAC;UAC9BE,QAAQ,EAAEC,UAAU,CAACD,QAAQ;QAC/B,CAAC;MACH;IACF,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACd,IAAIjB,YAAY,CAACgB,OAAO,EAAE;QACxBE,OAAO,CAACC,IAAI,CAAC,kCAAkCY,OAAO,kCAAkC,EAAEd,KAAK,CAAC;MAClG;IACF;;IAEA;IACA,OAAO;MACLJ,WAAW,EAAE,CAACgB,WAAW,EAAEC,SAAS,CAAC;MACrCW,QAAQ,EAAE,IAAI;MACdE,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;;EAED;EACA,MAAME,mBAAmB,GAAG,MAAOC,KAAK,IAAK;IAC3C,IAAI,CAAC9C,YAAY,CAACgB,OAAO,EAAE,OAAO,IAAI;IAEtC,IAAI;MACFZ,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAM2C,YAAY,GAAGxC,sBAAsB,CAACuC,KAAK,CAACE,QAAQ,CAAC;MAC3D,MAAMC,UAAU,GAAG1C,sBAAsB,CAACuC,KAAK,CAACI,aAAa,CAAC;;MAE9D;MACA,IAAIJ,KAAK,CAACK,iBAAiB,IAAIL,KAAK,CAACK,iBAAiB,CAACd,MAAM,GAAG,CAAC,EAAE;QACjE,MAAMe,SAAS,GAAG,CAACL,YAAY,CAAC;;QAEhC;QACAD,KAAK,CAACK,iBAAiB,CACpBE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,UAAU,GAAGD,CAAC,CAACC,UAAU,CAAC,CAC3CC,OAAO,CAACpC,IAAI,IAAI;UACf+B,SAAS,CAACM,IAAI,CAACnD,sBAAsB,CAACc,IAAI,CAACb,UAAU,CAAC,CAAC;QACzD,CAAC,CAAC;QAEJ4C,SAAS,CAACM,IAAI,CAACT,UAAU,CAAC;;QAE1B;QACA,MAAMU,cAAc,GAAGP,SAAS,CAC7Bb,GAAG,CAACC,KAAK,IAAI,GAAGA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CACvCoB,IAAI,CAAC,GAAG,CAAC;QAEZ,MAAM5B,GAAG,GAAG,oDAAoD2B,cAAc,8CAA8C;QAE5H,MAAM1B,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,IAAI,CAAChC,YAAY,CAACgB,OAAO,EAAE,OAAO,IAAI;QAEtC,MAAMmB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAAC3C,MAAM,IAAI2C,IAAI,CAAC3C,MAAM,CAAC6C,MAAM,GAAG,CAAC,EAAE;UACzC,MAAMxB,WAAW,GAAGsB,IAAI,CAAC3C,MAAM,CAAC,CAAC,CAAC,CAAC8C,QAAQ,CAACzB,WAAW,CAAC0B,GAAG,CAACC,KAAK,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1F,MAAMC,QAAQ,GAAG,CAACN,IAAI,CAAC3C,MAAM,CAAC,CAAC,CAAC,CAACiD,QAAQ,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC;UAC5D,MAAMC,QAAQ,GAAG,CAACR,IAAI,CAAC3C,MAAM,CAAC,CAAC,CAAC,CAACmD,QAAQ,GAAG,IAAI,EAAED,OAAO,CAAC,CAAC,CAAC;UAE5D,OAAO;YACL7B,WAAW;YACX4B,QAAQ,EAAEG,UAAU,CAACH,QAAQ,CAAC;YAC9BE,QAAQ,EAAEC,UAAU,CAACD,QAAQ,CAAC;YAC9BS;UACF,CAAC;QACH;MACF,CAAC,MAAM;QACL;QACA,OAAO,MAAMxB,cAAc,CAACmB,YAAY,EAAEE,UAAU,EAAEH,KAAK,CAAClC,EAAE,CAAC;MACjE;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,IAAIjB,YAAY,CAACgB,OAAO,EAAE;QACxBE,OAAO,CAACC,IAAI,CAAC,wCAAwC2B,KAAK,CAAClC,EAAE,GAAG,EAAEK,KAAK,CAAC;QACxE,OAAO,MAAMW,cAAc,CACzBrB,sBAAsB,CAACuC,KAAK,CAACE,QAAQ,CAAC,EACtCzC,sBAAsB,CAACuC,KAAK,CAACI,aAAa,CAAC,EAC3CJ,KAAK,CAAClC,EACR,CAAC;MACH;IACF,CAAC,SAAS;MACR,IAAIZ,YAAY,CAACgB,OAAO,EAAE;QACxBZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IACA,OAAO,IAAI;EACb,CAAC;;EAED;EACA7B,SAAS,CAAC,MAAM;IACdyB,YAAY,CAACgB,OAAO,GAAG,IAAI;IAC3BE,OAAO,CAAC2C,GAAG,CAAC,mDAAmD,CAAC;IAEhE,IAAI,CAAC/D,MAAM,CAACkB,OAAO,EAAE;;IAErB;IACAI,UAAU,CAAC,CAAC;;IAEZ;IACA,MAAM0C,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjC,IAAI,CAAC/D,YAAY,CAACgB,OAAO,IAAI,CAAClB,MAAM,CAACkB,OAAO,EAAE;MAE9C,IAAI;QACF;QACA,MAAMuB,GAAG,GAAG5D,CAAC,CAAC4D,GAAG,CAACzC,MAAM,CAACkB,OAAO,EAAE;UAChCgD,WAAW,EAAE,IAAI;UACjBC,eAAe,EAAE,IAAI;UACrBC,eAAe,EAAE,IAAI;UACrBC,OAAO,EAAE,IAAI;UACbC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,aAAa,EAAE,KAAK;UAAE;UACtBC,aAAa,EAAE,KAAK;UACpBC,mBAAmB,EAAE;QACvB,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;QAEnC,IAAI,CAAC1E,YAAY,CAACgB,OAAO,EAAE;UACzBuB,GAAG,CAACZ,MAAM,CAAC,CAAC;UACZ;QACF;QAEA5B,cAAc,CAACiB,OAAO,GAAGuB,GAAG;;QAE5B;QACA5D,CAAC,CAACgG,SAAS,CAAC,oDAAoD,EAAE;UAChEC,WAAW,EAAE,gDAAgD;UAC7DC,OAAO,EAAE,EAAE;UACXC,OAAO,EAAE;QACX,CAAC,CAAC,CAACC,KAAK,CAACxC,GAAG,CAAC;;QAEb;QACAA,GAAG,CAACyC,SAAS,CAAC,MAAM;UAClB,IAAIhF,YAAY,CAACgB,OAAO,EAAE;YACxBE,OAAO,CAAC2C,GAAG,CAAC,2CAA2C,CAAC;YACxDvD,WAAW,CAAC,IAAI,CAAC;UACnB,CAAC,MAAM;YACL;YACAY,OAAO,CAAC2C,GAAG,CAAC,qDAAqD,CAAC;YAClE,IAAI;cACFtB,GAAG,CAACZ,MAAM,CAAC,CAAC;YACd,CAAC,CAAC,OAAOF,CAAC,EAAE;cACV;YAAA;UAEJ;QACF,CAAC,CAAC;;QAEF;QACAc,GAAG,CAAC0C,EAAE,CAAC,OAAO,EAAGhE,KAAK,IAAK;UACzBC,OAAO,CAACC,IAAI,CAAC,YAAY,EAAEF,KAAK,CAAC;QACnC,CAAC,CAAC;MAEJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACd,IAAIjB,YAAY,CAACgB,OAAO,EAAE;UACxBE,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF;IACF,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACXC,OAAO,CAAC2C,GAAG,CAAC,gDAAgD,CAAC;MAC7DqB,YAAY,CAACpB,SAAS,CAAC;MACvB9D,YAAY,CAACgB,OAAO,GAAG,KAAK;MAC5BI,UAAU,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA7C,SAAS,CAAC,MAAM;IACd,IAAI,CAACwB,cAAc,CAACiB,OAAO,IAAI,CAACX,QAAQ,IAAI,CAACL,YAAY,CAACgB,OAAO,EAAE;IAEnE,MAAMuB,GAAG,GAAGxC,cAAc,CAACiB,OAAO;;IAElC;IACAF,gBAAgB,CAAC,MAAM;MACrByB,GAAG,CAACjB,SAAS,CAAEC,KAAK,IAAK;QACvB,IAAIA,KAAK,YAAY5C,CAAC,CAACwG,MAAM,IAAI5D,KAAK,YAAY5C,CAAC,CAACyG,QAAQ,IAAI7D,KAAK,YAAY5C,CAAC,CAAC0G,YAAY,EAAE;UAC/F9C,GAAG,CAACf,WAAW,CAACD,KAAK,CAAC;QACxB;MACF,CAAC,CAAC;MACF,OAAO,IAAI;IACb,CAAC,CAAC;;IAEF;IACA,IAAI5B,aAAa,IAAIC,WAAW,EAAE;MAChC,MAAM0F,kBAAkB,GAAG,MAAAA,CAAA,KAAY;QACrC,IAAI,CAACtF,YAAY,CAACgB,OAAO,EAAE;QAE3B,IAAI;UACFZ,UAAU,CAAC,IAAI,CAAC;UAEhB,MAAMyB,WAAW,GAAGtB,sBAAsB,CAACZ,aAAa,CAAC;UACzD,MAAMmC,SAAS,GAAGvB,sBAAsB,CAACX,WAAW,CAAC;UAErD,MAAM2F,SAAS,GAAG,MAAM3D,cAAc,CAACC,WAAW,EAAEC,SAAS,EAAE,cAAc,CAAC;UAE9E,IAAI,CAACyD,SAAS,IAAI,CAACvF,YAAY,CAACgB,OAAO,EAAE;;UAEzC;UACAF,gBAAgB,CAAC,MAAM;YAAA,IAAA0E,eAAA,EAAAC,gBAAA;YACrB,MAAMC,WAAW,GAAG/G,CAAC,CAACgH,MAAM,CAAC9D,WAAW,EAAE;cACxC+D,IAAI,EAAEjH,CAAC,CAACkH,OAAO,CAAC;gBACdC,SAAS,EAAE,qBAAqB;gBAChCC,IAAI,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;gBACTC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;cACrB,CAAC;YACH,CAAC,CAAC,CAACC,SAAS,CAAC;AACzB;AACA;AACA,8CAA8C,EAAAV,eAAA,GAAA/F,SAAS,CAACiB,IAAI,CAACyF,CAAC,IAAIA,CAAC,CAACvF,EAAE,KAAKjB,aAAa,CAAC,cAAA6F,eAAA,uBAA3CA,eAAA,CAA6CY,IAAI,KAAI,QAAQ;AAC3G;AACA,aAAa,CAAC;YAEF,MAAMC,SAAS,GAAG1H,CAAC,CAACgH,MAAM,CAAC7D,SAAS,EAAE;cACpC8D,IAAI,EAAEjH,CAAC,CAACkH,OAAO,CAAC;gBACdC,SAAS,EAAE,qBAAqB;gBAChCC,IAAI,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;gBACTC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;cACrB,CAAC;YACH,CAAC,CAAC,CAACC,SAAS,CAAC;AACzB;AACA;AACA,8CAA8C,EAAAT,gBAAA,GAAAhG,SAAS,CAACiB,IAAI,CAACyF,CAAC,IAAIA,CAAC,CAACvF,EAAE,KAAKhB,WAAW,CAAC,cAAA6F,gBAAA,uBAAzCA,gBAAA,CAA2CW,IAAI,KAAI,aAAa;AAC9G,kBAAkBb,SAAS,CAAC9C,QAAQ,GAAG,8CAA8C8C,SAAS,CAAC9C,QAAQ,YAAY,GAAG,EAAE;AACxH,kBAAkB8C,SAAS,CAAC5C,QAAQ,GAAG,8CAA8C4C,SAAS,CAAC5C,QAAQ,eAAe,GAAG,EAAE;AAC3H;AACA,aAAa,CAAC;;YAEF;YACA,MAAM2D,SAAS,GAAG3H,CAAC,CAAC4H,QAAQ,CAAChB,SAAS,CAAC1E,WAAW,EAAE;cAClD2F,KAAK,EAAE,SAAS;cAChBC,MAAM,EAAE,CAAC;cACTC,OAAO,EAAE;YACX,CAAC,CAAC;;YAEF;YACAhB,WAAW,CAACX,KAAK,CAACxC,GAAG,CAAC;YACtB8D,SAAS,CAACtB,KAAK,CAACxC,GAAG,CAAC;YACpB+D,SAAS,CAACvB,KAAK,CAACxC,GAAG,CAAC;;YAEpB;YACA,MAAMoE,MAAM,GAAGhI,CAAC,CAACiI,YAAY,CAACrB,SAAS,CAAC1E,WAAW,CAAC;YACpD0B,GAAG,CAACsE,SAAS,CAACF,MAAM,EAAE;cAAEG,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;cAAEC,OAAO,EAAE;YAAM,CAAC,CAAC;YAE5D,OAAO,IAAI;UACb,CAAC,CAAC;QAEJ,CAAC,CAAC,OAAO9F,KAAK,EAAE;UACd,IAAIjB,YAAY,CAACgB,OAAO,EAAE;YACxBE,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;UACxD;QACF,CAAC,SAAS;UACR,IAAIjB,YAAY,CAACgB,OAAO,EAAE;YACxBZ,UAAU,CAAC,KAAK,CAAC;UACnB;QACF;MACF,CAAC;MAEDkF,kBAAkB,CAAC,CAAC;MACpB;IACF;;IAEA;IACA,IAAI,CAAC9F,MAAM,CAAC6C,MAAM,EAAE;IAEpB,MAAM2E,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI,CAAChH,YAAY,CAACgB,OAAO,EAAE;MAE3B,IAAI;QACFZ,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMuG,MAAM,GAAGhI,CAAC,CAACiI,YAAY,CAAC,CAAC;QAC/B,MAAMK,WAAW,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QACjG,MAAMC,YAAY,GAAG,CAAC,CAAC;;QAEvB;QACA,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG3H,MAAM,CAAC6C,MAAM,EAAE8E,KAAK,EAAE,EAAE;UAClD,IAAI,CAACnH,YAAY,CAACgB,OAAO,EAAE;UAE3B,MAAM8B,KAAK,GAAGtD,MAAM,CAAC2H,KAAK,CAAC;UAC3B,MAAMX,KAAK,GAAGS,WAAW,CAACE,KAAK,GAAGF,WAAW,CAAC5E,MAAM,CAAC;UAErD,IAAI;YACF,MAAMkD,SAAS,GAAG,MAAM1C,mBAAmB,CAACC,KAAK,CAAC;YAClD,IAAI,CAACyC,SAAS,IAAI,CAACvF,YAAY,CAACgB,OAAO,EAAE;YAEzCkG,YAAY,CAACpE,KAAK,CAAClC,EAAE,CAAC,GAAG2E,SAAS;;YAElC;YACA,MAAM6B,cAAc,GAAG3H,SAAS,CAACiB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKkC,KAAK,CAACE,QAAQ,CAAC;YACvE,MAAMqE,YAAY,GAAG5H,SAAS,CAACiB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKkC,KAAK,CAACI,aAAa,CAAC;;YAE1E;YACA,MAAMoE,gBAAgB,GAAGA,CAACC,QAAQ,EAAEC,IAAI,GAAG,QAAQ,KAAK;cACtD,MAAMC,KAAK,GAAG;gBACZC,KAAK,EAAE;kBAAEC,KAAK,EAAE,CAAC;kBAAEC,MAAM,EAAE,CAAC;kBAAE5B,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;gBAAE,CAAC;gBAClD6B,MAAM,EAAE;kBAAEF,KAAK,EAAE,EAAE;kBAAEC,MAAM,EAAE,EAAE;kBAAE5B,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;gBAAE,CAAC;gBACrD8B,KAAK,EAAE;kBAAEH,KAAK,EAAE,EAAE;kBAAEC,MAAM,EAAE,EAAE;kBAAE5B,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;gBAAE;cACrD,CAAC;cAED,MAAMA,QAAQ,GAAGyB,KAAK,CAACD,IAAI,CAAC;cAC5B,MAAMO,YAAY,GAAGR,QAAQ,GAAG,KAAK,GAAG,KAAK;cAE7C,OAAO5I,CAAC,CAACkH,OAAO,CAAC;gBACfC,SAAS,EAAE,qBAAqB;gBAChCC,IAAI,EAAE;AACtB,sCAAsCS,KAAK;AAC3C,2BAA2BR,QAAQ,CAAC2B,KAAK;AACzC,4BAA4B3B,QAAQ,CAAC4B,MAAM;AAC3C,mCAAmCG,YAAY;AAC/C;AACA;AACA,oBAAoB,CAACR,QAAQ,GAAG,2BAA2B,GAAG,EAAE;AAChE,yBAAyB;gBACTvB,QAAQ,EAAEA,QAAQ,CAACA,QAAQ;gBAC3BC,UAAU,EAAE,CAACD,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,GAAC,CAAC,EAAEA,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,GAAC,CAAC;cAC7D,CAAC,CAAC;YACJ,CAAC;YAED,MAAMjD,YAAY,GAAGxC,sBAAsB,CAACuC,KAAK,CAACE,QAAQ,CAAC;YAC3D,MAAMC,UAAU,GAAG1C,sBAAsB,CAACuC,KAAK,CAACI,aAAa,CAAC;;YAE9D;YACApC,gBAAgB,CAAC,MAAM;cAAA,IAAAkH,qBAAA;cACrB;cACA,MAAMC,YAAY,GAAGtJ,CAAC,CAACgH,MAAM,CAAC5C,YAAY,EAAE;gBAC1C6C,IAAI,EAAE0B,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC;gBACrCY,YAAY,EAAE;cAChB,CAAC,CAAC,CAAChC,SAAS,CAAC;AAC3B;AACA,8CAA8C,CAAAkB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEhB,IAAI,KAAI,QAAQ;AAC9E,gDAAgDtD,KAAK,CAACqF,IAAI;AAC1D,gDAAgD,CAAAf,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEgB,OAAO,KAAI,EAAE;AAC7E;AACA,eAAe,CAAC;;cAEF;cACA,MAAMC,UAAU,GAAG1J,CAAC,CAACgH,MAAM,CAAC1C,UAAU,EAAE;gBACtC2C,IAAI,EAAE0B,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC;gBACtCY,YAAY,EAAE;cAChB,CAAC,CAAC,CAAChC,SAAS,CAAC;AAC3B;AACA,8CAA8C,CAAAmB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEjB,IAAI,KAAI,aAAa;AACjF,gDAAgDtD,KAAK,CAACqF,IAAI;AAC1D,0DAA0D5C,SAAS,CAAC9C,QAAQ,IAAIK,KAAK,CAACwF,UAAU;AAChG,0DAA0D/C,SAAS,CAAC5C,QAAQ,IAAIG,KAAK,CAACyF,aAAa;AACnG,0DAA0DzF,KAAK,CAAC0F,SAAS;AACzE,gDAAgD,CAAAnB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEe,OAAO,KAAI,EAAE;AAC3E;AACA,eAAe,CAAC;;cAEF;cACA,CAAAJ,qBAAA,GAAAlF,KAAK,CAACK,iBAAiB,cAAA6E,qBAAA,uBAAvBA,qBAAA,CAAyBvE,OAAO,CAAEpC,IAAI,IAAK;gBACzC,IAAI,CAACrB,YAAY,CAACgB,OAAO,EAAE;gBAE3B,IAAI;kBACF,MAAMyH,YAAY,GAAGhJ,SAAS,CAACiB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKS,IAAI,CAACb,UAAU,CAAC;kBACtE,MAAMkI,UAAU,GAAGnI,sBAAsB,CAACc,IAAI,CAACb,UAAU,CAAC;kBAE1D,MAAMmI,UAAU,GAAGhK,CAAC,CAACgH,MAAM,CAAC+C,UAAU,EAAE;oBACtC9C,IAAI,EAAE0B,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC;oBACrCY,YAAY,EAAE;kBAChB,CAAC,CAAC,CAAChC,SAAS,CAAC;AAC/B;AACA,gCAAgC,CAAAuC,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAErC,IAAI,KAAI,MAAM;AAC5D,yDAAyD/E,IAAI,CAACmC,UAAU;AACxE,wDAAwDnC,IAAI,CAACuH,eAAe;AAC5E,oDAAoDC,IAAI,CAACC,KAAK,CAACzH,IAAI,CAAC0H,aAAa,GAAC,EAAE,CAAC,KAAK1H,IAAI,CAAC0H,aAAa,GAAC,EAAE;AAC/G;AACA,mBAAmB,CAAC;kBAEFJ,UAAU,CAAC5D,KAAK,CAACxC,GAAG,CAAC;kBACrBoE,MAAM,CAACqC,MAAM,CAACN,UAAU,CAAC;gBAC3B,CAAC,CAAC,OAAOO,SAAS,EAAE;kBAClB/H,OAAO,CAACC,IAAI,CAAC,2BAA2B,EAAE8H,SAAS,CAAC;gBACtD;cACF,CAAC,CAAC;;cAEF;cACA,MAAM3C,SAAS,GAAG3H,CAAC,CAAC4H,QAAQ,CAAChB,SAAS,CAAC1E,WAAW,EAAE;gBAClD2F,KAAK,EAAEA,KAAK;gBACZC,MAAM,EAAE,CAAC;gBACTC,OAAO,EAAE,GAAG;gBACZwC,SAAS,EAAEpG,KAAK,CAACqG,SAAS,KAAK,SAAS,GAAG,OAAO,GAAG;cACvD,CAAC,CAAC;;cAEF;cACA7C,SAAS,CAACrB,EAAE,CAAC,WAAW,EAAE,YAAW;gBACnC,IAAIjF,YAAY,CAACgB,OAAO,EAAE;kBACxB,IAAI,CAACoI,QAAQ,CAAC;oBAAE3C,MAAM,EAAE,CAAC;oBAAEC,OAAO,EAAE;kBAAI,CAAC,CAAC;gBAC5C;cACF,CAAC,CAAC;cAEFJ,SAAS,CAACrB,EAAE,CAAC,UAAU,EAAE,YAAW;gBAClC,IAAIjF,YAAY,CAACgB,OAAO,EAAE;kBACxB,IAAI,CAACoI,QAAQ,CAAC;oBAAE3C,MAAM,EAAE,CAAC;oBAAEC,OAAO,EAAE;kBAAI,CAAC,CAAC;gBAC5C;cACF,CAAC,CAAC;;cAEF;cACAuB,YAAY,CAAClD,KAAK,CAACxC,GAAG,CAAC;cACvB8F,UAAU,CAACtD,KAAK,CAACxC,GAAG,CAAC;cACrB+D,SAAS,CAACvB,KAAK,CAACxC,GAAG,CAAC;;cAEpB;cACAgD,SAAS,CAAC1E,WAAW,CAAC4C,OAAO,CAAC4F,KAAK,IAAI1C,MAAM,CAACqC,MAAM,CAACK,KAAK,CAAC,CAAC;cAE5D,OAAO,IAAI;YACb,CAAC,CAAC;UACJ,CAAC,CAAC,OAAOC,UAAU,EAAE;YACnBpI,OAAO,CAACC,IAAI,CAAC,0BAA0B2B,KAAK,CAAClC,EAAE,GAAG,EAAE0I,UAAU,CAAC;UACjE;QACF;QAEA,IAAItJ,YAAY,CAACgB,OAAO,EAAE;UACxBd,YAAY,CAACgH,YAAY,CAAC;;UAE1B;UACApG,gBAAgB,CAAC,MAAM;YACrB,IAAI6F,MAAM,CAAC4C,OAAO,CAAC,CAAC,EAAE;cACpBhH,GAAG,CAACsE,SAAS,CAACF,MAAM,EAAE;gBACpBG,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;gBACjBjC,OAAO,EAAE,EAAE;gBACXkC,OAAO,EAAE;cACX,CAAC,CAAC;YACJ;YACA,OAAO,IAAI;UACb,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAO9F,KAAK,EAAE;QACd,IAAIjB,YAAY,CAACgB,OAAO,EAAE;UACxBE,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QAC3D;MACF,CAAC,SAAS;QACR,IAAIjB,YAAY,CAACgB,OAAO,EAAE;UACxBZ,UAAU,CAAC,KAAK,CAAC;QACnB;MACF;IACF,CAAC;IAED4G,qBAAqB,CAAC,CAAC;EAEzB,CAAC,EAAE,CAACxH,MAAM,EAAEC,SAAS,EAAEE,aAAa,EAAEC,WAAW,EAAES,QAAQ,EAAES,gBAAgB,CAAC,CAAC;;EAE/E;EACAvC,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXyB,YAAY,CAACgB,OAAO,GAAG,KAAK;MAC5BI,UAAU,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACEtC,OAAA;IAAKgH,SAAS,EAAC,wBAAwB;IAAA0D,QAAA,gBACrC1K,OAAA;MAAK2K,GAAG,EAAE3J,MAAO;MAACgG,SAAS,EAAC,0BAA0B;MAAC4D,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAG9E5J,OAAO,iBACNrB,OAAA;MAAKgH,SAAS,EAAC,qFAAqF;MAAC4D,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAE;MAAAH,QAAA,eAC3H1K,OAAA;QAAKgH,SAAS,EAAC,mCAAmC;QAAA0D,QAAA,eAChD1K,OAAA;UAAKgH,SAAS,EAAC,6BAA6B;UAAA0D,QAAA,gBAC1C1K,OAAA;YAAKgH,SAAS,EAAC;UAAoF;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1GjL,OAAA;YAAMgH,SAAS,EAAC,qBAAqB;YAAA0D,QAAA,EAAC;UAAsB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAvK,MAAM,CAAC6C,MAAM,GAAG,CAAC,IAAI,CAAC1C,aAAa,IAAI,CAACC,WAAW,iBAClDd,OAAA;MAAKgH,SAAS,EAAC,sFAAsF;MAAC4D,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAE;MAAAH,QAAA,eAC5H1K,OAAA;QAAKgH,SAAS,EAAC,KAAK;QAAA0D,QAAA,gBAClB1K,OAAA;UAAIgH,SAAS,EAAC,0CAA0C;UAAA0D,QAAA,EAAC;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3EjL,OAAA;UAAKgH,SAAS,EAAC,oCAAoC;UAAA0D,QAAA,EAChDhK,MAAM,CAACwK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACzH,GAAG,CAAC,CAACO,KAAK,EAAEqE,KAAK,KAAK;YACxC,MAAM8C,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;YAC5F,MAAMzD,KAAK,GAAGyD,MAAM,CAAC9C,KAAK,GAAG8C,MAAM,CAAC5H,MAAM,CAAC;;YAE3C;YACA,MAAM6H,UAAU,GAAGxK,aAAa,CAACyK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACrI,OAAO,KAAKe,KAAK,CAAClC,EAAE,CAAC;YAC1E,MAAMyJ,aAAa,GAAGH,UAAU,CAAC7H,MAAM,GAAG,CAAC,GACvC6H,UAAU,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEH,IAAI,KAAKG,GAAG,GAAG3L,sBAAsB,CAACwL,IAAI,CAAC,EAAE,CAAC,CAAC,GAAGF,UAAU,CAAC7H,MAAM,GAC3F,CAAC;YAEL,MAAMkD,SAAS,GAAGtF,SAAS,CAAC6C,KAAK,CAAClC,EAAE,CAAC;YAErC,oBACE9B,OAAA;cAAoBgH,SAAS,EAAC,gDAAgD;cAAA0D,QAAA,gBAC5E1K,OAAA;gBAAKgH,SAAS,EAAC,kCAAkC;gBAAA0D,QAAA,gBAC/C1K,OAAA;kBACEgH,SAAS,EAAC,yCAAyC;kBACnD4D,KAAK,EAAE;oBAAEc,eAAe,EAAEhE;kBAAM;gBAAE;kBAAAoD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9B,CAAC,eACPjL,OAAA;kBAAKgH,SAAS,EAAC,gBAAgB;kBAAA0D,QAAA,gBAC7B1K,OAAA;oBAAKgH,SAAS,EAAC,wBAAwB;oBAAA0D,QAAA,EAAE1G,KAAK,CAACqF;kBAAI;oBAAAyB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,EACzDxE,SAAS,iBACRzG,OAAA;oBAAKgH,SAAS,EAAC,uBAAuB;oBAAA0D,QAAA,GACnCjE,SAAS,CAAC9C,QAAQ,EAAC,aAAM,EAAC8C,SAAS,CAAC5C,QAAQ,EAAC,GAChD;kBAAA;oBAAAiH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CACN;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,EACLM,aAAa,GAAG,CAAC,iBAChBvL,OAAA;gBAAKgH,SAAS,EAAC,wBAAwB;gBAAA0D,QAAA,gBACrC1K,OAAA;kBAAKgH,SAAS,EAAC,yCAAyC;kBAAA0D,QAAA,eACtD1K,OAAA;oBACEgH,SAAS,EAAC,mCAAmC;oBAC7C4D,KAAK,EAAE;sBACL/B,KAAK,EAAE,GAAGkB,IAAI,CAAC4B,GAAG,CAACJ,aAAa,EAAE,GAAG,CAAC,GAAG;sBACzCG,eAAe,EAAEH,aAAa,GAAG,EAAE,GAAG,SAAS,GAAGA,aAAa,GAAG,EAAE,GAAG,SAAS,GAAG;oBACrF;kBAAE;oBAAAT,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACNjL,OAAA;kBAAMgH,SAAS,EAAC,mCAAmC;kBAAA0D,QAAA,GAChDa,aAAa,CAAC3H,OAAO,CAAC,CAAC,CAAC,EAAC,GAC5B;gBAAA;kBAAAkH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CACN;YAAA,GA9BOjH,KAAK,CAAClC,EAAE;cAAAgJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA+Bb,CAAC;UAEV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGNjL,OAAA;UAAKgH,SAAS,EAAC,oCAAoC;UAAA0D,QAAA,eACjD1K,OAAA;YAAKgH,SAAS,EAAC,yDAAyD;YAAA0D,QAAA,gBACtE1K,OAAA;cAAA0K,QAAA,EAAM;YAAQ;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrBjL,OAAA;cAAA0K,QAAA,EAAM;YAAa;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC1BjL,OAAA;cAAA0K,QAAA,EAAM;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGDjL,OAAA;MAAKgH,SAAS,EAAC,+EAA+E;MAAC4D,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAE;MAAAH,QAAA,eACrH1K,OAAA;QAAKgH,SAAS,EAAC,KAAK;QAAA0D,QAAA,eAClB1K,OAAA;UAAKgH,SAAS,EAAC,iCAAiC;UAAA0D,QAAA,gBAC9C1K,OAAA;YAAKgH,SAAS,EAAC,mBAAmB;YAAA0D,QAAA,gBAChC1K,OAAA;cAAKgH,SAAS,EAAC;YAAuC;cAAA8D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC7DjL,OAAA;cAAA0K,QAAA,EAAM;YAAe;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACNjL,OAAA;YAAKgH,SAAS,EAAC,mBAAmB;YAAA0D,QAAA,gBAChC1K,OAAA;cAAKgH,SAAS,EAAC,4BAA4B;cAAC4D,KAAK,EAAE;gBAACgB,SAAS,EAAE;cAAY;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACpFjL,OAAA;cAAA0K,QAAA,EAAM;YAAY;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACNjL,OAAA;YAAKgH,SAAS,EAAC,oCAAoC;YAAA0D,QAAA,eACjD1K,OAAA;cAAKgH,SAAS,EAAC,uBAAuB;cAAA0D,QAAA,EAAC;YAAoB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLvK,MAAM,CAAC6C,MAAM,KAAK,CAAC,IAAI,CAAC1C,aAAa,IAAI,CAACC,WAAW,iBACpDd,OAAA;MAAKgH,SAAS,EAAC,yEAAyE;MAAA0D,QAAA,eACtF1K,OAAA;QAAKgH,SAAS,EAAC,2BAA2B;QAAA0D,QAAA,gBACxC1K,OAAA;UAAKgH,SAAS,EAAC,MAAM;UAAA0D,QAAA,EAAC;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/BjL,OAAA;UAAGgH,SAAS,EAAC,qBAAqB;UAAA0D,QAAA,EAAC;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC3DjL,OAAA;UAAGgH,SAAS,EAAC,SAAS;UAAA0D,QAAA,EAAC;QAA4B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClK,EAAA,CA/oBIN,QAAQ;AAAAoL,EAAA,GAARpL,QAAQ;AAipBd,eAAeA,QAAQ;AAAC,IAAAoL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}